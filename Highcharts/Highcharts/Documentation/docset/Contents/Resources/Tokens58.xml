<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HIGauge.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HIGauge</TokenIdentifier>
			<Abstract type="html">* description: A gauge series. If the type option is not
specified, it is inherited from chart.type.
For options that apply to multiple series, it is recommended to add
them to the plotOptions.series options structure.
To apply to all series of this specific type, apply it to plotOptions.
gauge.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
            
			
			<NodeRef refid="58"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/setWrap:</TokenIdentifier>
			<Abstract type="html">* description: When this option is true, the dial will wrap around the axes. For
instance, in a full-range gauge going from 0 to 360, a value of 400
will point to 40. When wrap is false, the dial stops at 360.
* default: true</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *wrap</Declaration>
			
			
			<Anchor>//api/name/wrap</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/wrap</TokenIdentifier>
			<Abstract type="html">* description: When this option is true, the dial will wrap around the axes. For
instance, in a full-range gauge going from 0 to 360, a value of 400
will point to 40. When wrap is false, the dial stops at 360.
* default: true</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *wrap</Declaration>
			
			
			<Anchor>//api/name/wrap</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIGauge/wrap</TokenIdentifier>
			<Abstract type="html">* description: When this option is true, the dial will wrap around the axes. For
instance, in a full-range gauge going from 0 to 360, a value of 400
will point to 40. When wrap is false, the dial stops at 360.
* default: true</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *wrap</Declaration>
			
			
			<Anchor>//api/name/wrap</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/setOvershoot:</TokenIdentifier>
			<Abstract type="html">* description: Allow the dial to overshoot the end of the perimeter axis by this
many degrees. Say if the gauge axis goes from 0 to 60, a value of
100, or 1000, will show 5 degrees beyond the end of the axis.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *overshoot</Declaration>
			
			
			<Anchor>//api/name/overshoot</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/overshoot</TokenIdentifier>
			<Abstract type="html">* description: Allow the dial to overshoot the end of the perimeter axis by this
many degrees. Say if the gauge axis goes from 0 to 60, a value of
100, or 1000, will show 5 degrees beyond the end of the axis.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *overshoot</Declaration>
			
			
			<Anchor>//api/name/overshoot</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIGauge/overshoot</TokenIdentifier>
			<Abstract type="html">* description: Allow the dial to overshoot the end of the perimeter axis by this
many degrees. Say if the gauge axis goes from 0 to 60, a value of
100, or 1000, will show 5 degrees beyond the end of the axis.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *overshoot</Declaration>
			
			
			<Anchor>//api/name/overshoot</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/setDial:</TokenIdentifier>
			<Abstract type="html">* description: Options for the dial or arrow pointer of the gauge.
In styled mode, the dial is styled with the .highcharts-gauge-
series .highcharts-dial rule.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDial *dial</Declaration>
			
			
			<Anchor>//api/name/dial</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/dial</TokenIdentifier>
			<Abstract type="html">* description: Options for the dial or arrow pointer of the gauge.
In styled mode, the dial is styled with the .highcharts-gauge-
series .highcharts-dial rule.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDial *dial</Declaration>
			
			
			<Anchor>//api/name/dial</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIGauge/dial</TokenIdentifier>
			<Abstract type="html">* description: Options for the dial or arrow pointer of the gauge.
In styled mode, the dial is styled with the .highcharts-gauge-
series .highcharts-dial rule.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDial *dial</Declaration>
			
			
			<Anchor>//api/name/dial</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/setPivot:</TokenIdentifier>
			<Abstract type="html">* description: Options for the pivot or the center point of the gauge.
In styled mode, the pivot is styled with the .highcharts-gauge-
series .highcharts-pivot rule.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIPivot *pivot</Declaration>
			
			
			<Anchor>//api/name/pivot</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIGauge/pivot</TokenIdentifier>
			<Abstract type="html">* description: Options for the pivot or the center point of the gauge.
In styled mode, the pivot is styled with the .highcharts-gauge-
series .highcharts-pivot rule.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIPivot *pivot</Declaration>
			
			
			<Anchor>//api/name/pivot</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIGauge/pivot</TokenIdentifier>
			<Abstract type="html">* description: Options for the pivot or the center point of the gauge.
In styled mode, the pivot is styled with the .highcharts-gauge-
series .highcharts-pivot rule.</Abstract>
			<DeclaredIn>HIGauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIPivot *pivot</Declaration>
			
			
			<Anchor>//api/name/pivot</Anchor>
            <NodeRef refid="58"/>
		</Token>
		
        
        
	</File>
</Tokens>