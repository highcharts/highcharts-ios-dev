<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HIDataLabels.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HIDataLabels</TokenIdentifier>
			<Abstract type="html">* description: Options for the data labels appearing on top of the nodes and links. For
sankey charts, data labels are visible for the nodes by default, but
hidden for links. This is controlled by modifying the nodeFormat, and
the format that applies to links and is an empty string by default.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
            
			
			<NodeRef refid="38"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setPadding:</TokenIdentifier>
			<Abstract type="html">* description: When either the borderWidth or the backgroundColor is set,
this is the padding within the box.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/padding</TokenIdentifier>
			<Abstract type="html">* description: When either the borderWidth or the backgroundColor is set,
this is the padding within the box.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/padding</TokenIdentifier>
			<Abstract type="html">* description: When either the borderWidth or the backgroundColor is set,
this is the padding within the box.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setBackgroundColor:</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setEnabled:</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the data labels.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the data labels.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the data labels.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setBorderColor:</TokenIdentifier>
			<Abstract type="html">* description: The border color for the data label. Defaults to undefined.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The border color for the data label. Defaults to undefined.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The border color for the data label. Defaults to undefined.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setOverflow:</TokenIdentifier>
			<Abstract type="html">* description: How to handle data labels that flow outside the plot area. The default
is justify, which aligns them inside the plot area. For columns
and bars, this means it will be moved inside the bar. To display
data labels outside the plot area, set crop to false and overflow
to &quot;none&quot;.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *overflow</Declaration>
			
			
			<Anchor>//api/name/overflow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/overflow</TokenIdentifier>
			<Abstract type="html">* description: How to handle data labels that flow outside the plot area. The default
is justify, which aligns them inside the plot area. For columns
and bars, this means it will be moved inside the bar. To display
data labels outside the plot area, set crop to false and overflow
to &quot;none&quot;.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *overflow</Declaration>
			
			
			<Anchor>//api/name/overflow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/overflow</TokenIdentifier>
			<Abstract type="html">* description: How to handle data labels that flow outside the plot area. The default
is justify, which aligns them inside the plot area. For columns
and bars, this means it will be moved inside the bar. To display
data labels outside the plot area, set crop to false and overflow
to &quot;none&quot;.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *overflow</Declaration>
			
			
			<Anchor>//api/name/overflow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setUseHTML:</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the labels.
* default: false</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the labels.
* default: false</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the labels.
* default: false</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setZIndex:</TokenIdentifier>
			<Abstract type="html">* description: The Z index of the data labels. The default Z index puts it above
the series. Use a Z index of 2 to display it behind the series.
* default: 6</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *zIndex</Declaration>
			
			
			<Anchor>//api/name/zIndex</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/zIndex</TokenIdentifier>
			<Abstract type="html">* description: The Z index of the data labels. The default Z index puts it above
the series. Use a Z index of 2 to display it behind the series.
* default: 6</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *zIndex</Declaration>
			
			
			<Anchor>//api/name/zIndex</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/zIndex</TokenIdentifier>
			<Abstract type="html">* description: The Z index of the data labels. The default Z index puts it above
the series. Use a Z index of 2 to display it behind the series.
* default: 6</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *zIndex</Declaration>
			
			
			<Anchor>//api/name/zIndex</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setBorderRadius:</TokenIdentifier>
			<Abstract type="html">* description: The border radius in pixels for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The border radius in pixels for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The border radius in pixels for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setClassName:</TokenIdentifier>
			<Abstract type="html">* description: A class name for the data label. Particularly in styled mode, this can
be used to give each series&apos; or point&apos;s data label unique styling.
In addition to this option, a default color class name is added
so that we can give the labels a http://jsfiddle.
net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/css/data-
label-contrast/ : contrast text shadow.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/className</TokenIdentifier>
			<Abstract type="html">* description: A class name for the data label. Particularly in styled mode, this can
be used to give each series&apos; or point&apos;s data label unique styling.
In addition to this option, a default color class name is added
so that we can give the labels a http://jsfiddle.
net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/css/data-
label-contrast/ : contrast text shadow.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/className</TokenIdentifier>
			<Abstract type="html">* description: A class name for the data label. Particularly in styled mode, this can
be used to give each series&apos; or point&apos;s data label unique styling.
In addition to this option, a default color class name is added
so that we can give the labels a http://jsfiddle.
net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/css/data-
label-contrast/ : contrast text shadow.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setColor:</TokenIdentifier>
			<Abstract type="html">* description: The text color for the data labels. Defaults to null. For certain series
types, like column or map, the data labels can be drawn inside the points.
In this case the data label will be drawn with maximum contrast by default.
Additionally, it will be given a text-outline style with the opposite
color, to further increase the contrast. This can be overridden by setting
the text-outline style to none in the dataLabels.style option.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/color</TokenIdentifier>
			<Abstract type="html">* description: The text color for the data labels. Defaults to null. For certain series
types, like column or map, the data labels can be drawn inside the points.
In this case the data label will be drawn with maximum contrast by default.
Additionally, it will be given a text-outline style with the opposite
color, to further increase the contrast. This can be overridden by setting
the text-outline style to none in the dataLabels.style option.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/color</TokenIdentifier>
			<Abstract type="html">* description: The text color for the data labels. Defaults to null. For certain series
types, like column or map, the data labels can be drawn inside the points.
In this case the data label will be drawn with maximum contrast by default.
Additionally, it will be given a text-outline style with the opposite
color, to further increase the contrast. This can be overridden by setting
the text-outline style to none in the dataLabels.style option.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setShape:</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the label. Symbols
are predefined functions on the Renderer object.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/shape</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the label. Symbols
are predefined functions on the Renderer object.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/shape</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the label. Symbols
are predefined functions on the Renderer object.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setAllowOverlap:</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow data labels to overlap. To make the labels less
sensitive for overlapping, the dataLabels.padding can be set to 0.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/allowOverlap</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow data labels to overlap. To make the labels less
sensitive for overlapping, the dataLabels.padding can be set to 0.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/allowOverlap</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow data labels to overlap. To make the labels less
sensitive for overlapping, the dataLabels.padding can be set to 0.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setStyle:</TokenIdentifier>
			<Abstract type="html">* description: Styles for the label. The default color setting is &quot;contrast&quot;,
which is a pseudo color that Highcharts picks up and applies the
maximum contrast to the underlying point item, for example the
bar in a bar chart.
The textOutline is a pseudo property that
applies an outline of the given width with the given color, which
by default is the maximum contrast to the text. So a bright text
color will result in a black text outline for maximum readability
on a mixed background. In some cases, especially with grayscale
text, the text outline doesn&apos;t work well, in which cases it can
be disabled by setting it to &quot;none&quot;. When useHTML is true, the
textOutline will not be picked up. In this, case, the same effect
can be acheived through the textshadow CSS property.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/style</TokenIdentifier>
			<Abstract type="html">* description: Styles for the label. The default color setting is &quot;contrast&quot;,
which is a pseudo color that Highcharts picks up and applies the
maximum contrast to the underlying point item, for example the
bar in a bar chart.
The textOutline is a pseudo property that
applies an outline of the given width with the given color, which
by default is the maximum contrast to the text. So a bright text
color will result in a black text outline for maximum readability
on a mixed background. In some cases, especially with grayscale
text, the text outline doesn&apos;t work well, in which cases it can
be disabled by setting it to &quot;none&quot;. When useHTML is true, the
textOutline will not be picked up. In this, case, the same effect
can be acheived through the textshadow CSS property.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/style</TokenIdentifier>
			<Abstract type="html">* description: Styles for the label. The default color setting is &quot;contrast&quot;,
which is a pseudo color that Highcharts picks up and applies the
maximum contrast to the underlying point item, for example the
bar in a bar chart.
The textOutline is a pseudo property that
applies an outline of the given width with the given color, which
by default is the maximum contrast to the text. So a bright text
color will result in a black text outline for maximum readability
on a mixed background. In some cases, especially with grayscale
text, the text outline doesn&apos;t work well, in which cases it can
be disabled by setting it to &quot;none&quot;. When useHTML is true, the
textOutline will not be picked up. In this, case, the same effect
can be acheived through the textshadow CSS property.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setAlign:</TokenIdentifier>
			<Abstract type="html">* description: The alignment of the data label compared to the point. If right,
the right side of the label should be touching the point. For
points with an extent, like columns, the alignments also dictates
how to align it inside the box, as given with the inside option. Can be one of &quot;left&quot;, &quot;center&quot;
or &quot;right&quot;.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/align</TokenIdentifier>
			<Abstract type="html">* description: The alignment of the data label compared to the point. If right,
the right side of the label should be touching the point. For
points with an extent, like columns, the alignments also dictates
how to align it inside the box, as given with the inside option. Can be one of &quot;left&quot;, &quot;center&quot;
or &quot;right&quot;.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/align</TokenIdentifier>
			<Abstract type="html">* description: The alignment of the data label compared to the point. If right,
the right side of the label should be touching the point. For
points with an extent, like columns, the alignments also dictates
how to align it inside the box, as given with the inside option. Can be one of &quot;left&quot;, &quot;center&quot;
or &quot;right&quot;.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setY:</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the point.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/y</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the point.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/y</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the point.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setShadow:</TokenIdentifier>
			<Abstract type="html">* description: The shadow of the box. Works best with borderWidth or backgroundColor.
Since 2.3 the shadow can be an object configuration containing color,
offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/shadow</TokenIdentifier>
			<Abstract type="html">* description: The shadow of the box. Works best with borderWidth or backgroundColor.
Since 2.3 the shadow can be an object configuration containing color,
offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/shadow</TokenIdentifier>
			<Abstract type="html">* description: The shadow of the box. Works best with borderWidth or backgroundColor.
Since 2.3 the shadow can be an object configuration containing color,
offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setFormatter:</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the data label. Note that
if a format is defined, the format takes precedence and the formatter
is ignored. Available data are:</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the data label. Note that
if a format is defined, the format takes precedence and the formatter
is ignored. Available data are:</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the data label. Note that
if a format is defined, the format takes precedence and the formatter
is ignored. Available data are:</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setBorderWidth:</TokenIdentifier>
			<Abstract type="html">* description: The border width in pixels for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The border width in pixels for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The border width in pixels for the data label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setVerticalAlign:</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of a data label. Can be one of top, middle
or bottom. The default value depends on the data, for instance
in a column chart, the label is above positive values and below
negative values.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of a data label. Can be one of top, middle
or bottom. The default value depends on the data, for instance
in a column chart, the label is above positive values and below
negative values.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of a data label. Can be one of top, middle
or bottom. The default value depends on the data, for instance
in a column chart, the label is above positive values and below
negative values.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setInside:</TokenIdentifier>
			<Abstract type="html">* description: For points with an extent, like columns or map areas, whether to align the data
label inside the box or to the actual value point. Defaults to false
in most cases, true in stacked columns.
* default: True</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *inside</Declaration>
			
			
			<Anchor>//api/name/inside</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/inside</TokenIdentifier>
			<Abstract type="html">* description: For points with an extent, like columns or map areas, whether to align the data
label inside the box or to the actual value point. Defaults to false
in most cases, true in stacked columns.
* default: True</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *inside</Declaration>
			
			
			<Anchor>//api/name/inside</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/inside</TokenIdentifier>
			<Abstract type="html">* description: For points with an extent, like columns or map areas, whether to align the data
label inside the box or to the actual value point. Defaults to false
in most cases, true in stacked columns.
* default: True</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *inside</Declaration>
			
			
			<Anchor>//api/name/inside</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setX:</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the point.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/x</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the point.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/x</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the point.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setRotation:</TokenIdentifier>
			<Abstract type="html">* description: Text rotation in degrees. Note that due to a more complex structure,
backgrounds, borders and padding will be lost on a rotated data
label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/rotation</TokenIdentifier>
			<Abstract type="html">* description: Text rotation in degrees. Note that due to a more complex structure,
backgrounds, borders and padding will be lost on a rotated data
label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/rotation</TokenIdentifier>
			<Abstract type="html">* description: Text rotation in degrees. Note that due to a more complex structure,
backgrounds, borders and padding will be lost on a rotated data
label.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setFormat:</TokenIdentifier>
			<Abstract type="html">* description: A http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string for the data label. Available variables are
the same as for formatter.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/format</TokenIdentifier>
			<Abstract type="html">* description: A http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string for the data label. Available variables are
the same as for formatter.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/format</TokenIdentifier>
			<Abstract type="html">* description: A http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string for the data label. Available variables are
the same as for formatter.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setDefer:</TokenIdentifier>
			<Abstract type="html">* description: Whether to defer displaying the data labels until the initial series
animation has finished.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *defer</Declaration>
			
			
			<Anchor>//api/name/defer</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/defer</TokenIdentifier>
			<Abstract type="html">* description: Whether to defer displaying the data labels until the initial series
animation has finished.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *defer</Declaration>
			
			
			<Anchor>//api/name/defer</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/defer</TokenIdentifier>
			<Abstract type="html">* description: Whether to defer displaying the data labels until the initial series
animation has finished.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *defer</Declaration>
			
			
			<Anchor>//api/name/defer</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setCrop:</TokenIdentifier>
			<Abstract type="html">* description: Whether to hide data labels that are outside the plot area. By default,
the data label is moved inside the plot area according to the overflow option.
* default: true</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *crop</Declaration>
			
			
			<Anchor>//api/name/crop</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/crop</TokenIdentifier>
			<Abstract type="html">* description: Whether to hide data labels that are outside the plot area. By default,
the data label is moved inside the plot area according to the overflow option.
* default: true</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *crop</Declaration>
			
			
			<Anchor>//api/name/crop</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/crop</TokenIdentifier>
			<Abstract type="html">* description: Whether to hide data labels that are outside the plot area. By default,
the data label is moved inside the plot area according to the overflow option.
* default: true</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *crop</Declaration>
			
			
			<Anchor>//api/name/crop</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setRotationMode:</TokenIdentifier>
			<Abstract type="html">* description: Decides how the data label will be rotated according to the perimeter
of the sunburst. It can either be parallel or perpendicular to the
perimeter.
series.rotation takes precedence over rotationMode.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *rotationMode</Declaration>
			
			
			<Anchor>//api/name/rotationMode</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/rotationMode</TokenIdentifier>
			<Abstract type="html">* description: Decides how the data label will be rotated according to the perimeter
of the sunburst. It can either be parallel or perpendicular to the
perimeter.
series.rotation takes precedence over rotationMode.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *rotationMode</Declaration>
			
			
			<Anchor>//api/name/rotationMode</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/rotationMode</TokenIdentifier>
			<Abstract type="html">* description: Decides how the data label will be rotated according to the perimeter
of the sunburst. It can either be parallel or perpendicular to the
perimeter.
series.rotation takes precedence over rotationMode.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *rotationMode</Declaration>
			
			
			<Anchor>//api/name/rotationMode</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setConnectorPadding:</TokenIdentifier>
			<Abstract type="html">* description: The distance from the data label to the connector.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorPadding</Declaration>
			
			
			<Anchor>//api/name/connectorPadding</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/connectorPadding</TokenIdentifier>
			<Abstract type="html">* description: The distance from the data label to the connector.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorPadding</Declaration>
			
			
			<Anchor>//api/name/connectorPadding</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/connectorPadding</TokenIdentifier>
			<Abstract type="html">* description: The distance from the data label to the connector.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorPadding</Declaration>
			
			
			<Anchor>//api/name/connectorPadding</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setConnectorColor:</TokenIdentifier>
			<Abstract type="html">* description: The color of the line connecting the data label to the pie slice.
The default color is the same as the point&apos;s color.
In styled mode, the connector stroke is given in the
.highcharts-data-label-connector class.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *connectorColor</Declaration>
			
			
			<Anchor>//api/name/connectorColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/connectorColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the line connecting the data label to the pie slice.
The default color is the same as the point&apos;s color.
In styled mode, the connector stroke is given in the
.highcharts-data-label-connector class.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *connectorColor</Declaration>
			
			
			<Anchor>//api/name/connectorColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/connectorColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the line connecting the data label to the pie slice.
The default color is the same as the point&apos;s color.
In styled mode, the connector stroke is given in the
.highcharts-data-label-connector class.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *connectorColor</Declaration>
			
			
			<Anchor>//api/name/connectorColor</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setDistance:</TokenIdentifier>
			<Abstract type="html">* description: The distance of the data label from the pie&apos;s edge. Negative numbers
put the data label on top of the pie slices. Connectors are only
shown for data labels outside the pie.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *distance</Declaration>
			
			
			<Anchor>//api/name/distance</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/distance</TokenIdentifier>
			<Abstract type="html">* description: The distance of the data label from the pie&apos;s edge. Negative numbers
put the data label on top of the pie slices. Connectors are only
shown for data labels outside the pie.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *distance</Declaration>
			
			
			<Anchor>//api/name/distance</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/distance</TokenIdentifier>
			<Abstract type="html">* description: The distance of the data label from the pie&apos;s edge. Negative numbers
put the data label on top of the pie slices. Connectors are only
shown for data labels outside the pie.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *distance</Declaration>
			
			
			<Anchor>//api/name/distance</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setConnectorWidth:</TokenIdentifier>
			<Abstract type="html">* description: The width of the line connecting the data label to the pie slice.
In styled mode, the connector stroke width is given in the
.highcharts-data-label-connector class.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorWidth</Declaration>
			
			
			<Anchor>//api/name/connectorWidth</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/connectorWidth</TokenIdentifier>
			<Abstract type="html">* description: The width of the line connecting the data label to the pie slice.
In styled mode, the connector stroke width is given in the
.highcharts-data-label-connector class.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorWidth</Declaration>
			
			
			<Anchor>//api/name/connectorWidth</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/connectorWidth</TokenIdentifier>
			<Abstract type="html">* description: The width of the line connecting the data label to the pie slice.
In styled mode, the connector stroke width is given in the
.highcharts-data-label-connector class.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorWidth</Declaration>
			
			
			<Anchor>//api/name/connectorWidth</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setSoftConnector:</TokenIdentifier>
			<Abstract type="html">* description: Whether to render the connector as a soft arc or a line with sharp
break.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softConnector</Declaration>
			
			
			<Anchor>//api/name/softConnector</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/softConnector</TokenIdentifier>
			<Abstract type="html">* description: Whether to render the connector as a soft arc or a line with sharp
break.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softConnector</Declaration>
			
			
			<Anchor>//api/name/softConnector</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/softConnector</TokenIdentifier>
			<Abstract type="html">* description: Whether to render the connector as a soft arc or a line with sharp
break.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softConnector</Declaration>
			
			
			<Anchor>//api/name/softConnector</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setXHigh:</TokenIdentifier>
			<Abstract type="html">* description: X offset of the higher data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *xHigh</Declaration>
			
			
			<Anchor>//api/name/xHigh</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/xHigh</TokenIdentifier>
			<Abstract type="html">* description: X offset of the higher data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *xHigh</Declaration>
			
			
			<Anchor>//api/name/xHigh</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/xHigh</TokenIdentifier>
			<Abstract type="html">* description: X offset of the higher data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *xHigh</Declaration>
			
			
			<Anchor>//api/name/xHigh</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setYHigh:</TokenIdentifier>
			<Abstract type="html">* description: Y offset of the higher data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *yHigh</Declaration>
			
			
			<Anchor>//api/name/yHigh</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/yHigh</TokenIdentifier>
			<Abstract type="html">* description: Y offset of the higher data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *yHigh</Declaration>
			
			
			<Anchor>//api/name/yHigh</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/yHigh</TokenIdentifier>
			<Abstract type="html">* description: Y offset of the higher data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *yHigh</Declaration>
			
			
			<Anchor>//api/name/yHigh</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setXLow:</TokenIdentifier>
			<Abstract type="html">* description: X offset of the lower data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *xLow</Declaration>
			
			
			<Anchor>//api/name/xLow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/xLow</TokenIdentifier>
			<Abstract type="html">* description: X offset of the lower data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *xLow</Declaration>
			
			
			<Anchor>//api/name/xLow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/xLow</TokenIdentifier>
			<Abstract type="html">* description: X offset of the lower data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *xLow</Declaration>
			
			
			<Anchor>//api/name/xLow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setYLow:</TokenIdentifier>
			<Abstract type="html">* description: Y offset of the lower data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *yLow</Declaration>
			
			
			<Anchor>//api/name/yLow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/yLow</TokenIdentifier>
			<Abstract type="html">* description: Y offset of the lower data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *yLow</Declaration>
			
			
			<Anchor>//api/name/yLow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/yLow</TokenIdentifier>
			<Abstract type="html">* description: Y offset of the lower data labels relative to the point value.</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *yLow</Declaration>
			
			
			<Anchor>//api/name/yLow</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/setNodeFormat:</TokenIdentifier>
			<Abstract type="html">* description: The http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string specifying what to show for nodes in the
sankey diagram.
* default: {point.name}</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *nodeFormat</Declaration>
			
			
			<Anchor>//api/name/nodeFormat</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIDataLabels/nodeFormat</TokenIdentifier>
			<Abstract type="html">* description: The http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string specifying what to show for nodes in the
sankey diagram.
* default: {point.name}</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *nodeFormat</Declaration>
			
			
			<Anchor>//api/name/nodeFormat</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIDataLabels/nodeFormat</TokenIdentifier>
			<Abstract type="html">* description: The http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string specifying what to show for nodes in the
sankey diagram.
* default: {point.name}</Abstract>
			<DeclaredIn>HIDataLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *nodeFormat</Declaration>
			
			
			<Anchor>//api/name/nodeFormat</Anchor>
            <NodeRef refid="38"/>
		</Token>
		
        
        
	</File>
</Tokens>