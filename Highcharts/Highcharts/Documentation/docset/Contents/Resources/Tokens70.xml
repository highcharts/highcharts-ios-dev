<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HILabel.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HILabel</TokenIdentifier>
			<Abstract type="html">description: Text labels for the plot bands</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
            
			
			<NodeRef refid="70"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setConnectorAllowed:</TokenIdentifier>
			<Abstract type="html">* description: Allow labels to be placed distant to the graph if necessary,
and draw a connector line to the graph.
* default: True</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorAllowed</Declaration>
			
			
			<Anchor>//api/name/connectorAllowed</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/connectorAllowed</TokenIdentifier>
			<Abstract type="html">* description: Allow labels to be placed distant to the graph if necessary,
and draw a connector line to the graph.
* default: True</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorAllowed</Declaration>
			
			
			<Anchor>//api/name/connectorAllowed</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/connectorAllowed</TokenIdentifier>
			<Abstract type="html">* description: Allow labels to be placed distant to the graph if necessary,
and draw a connector line to the graph.
* default: True</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorAllowed</Declaration>
			
			
			<Anchor>//api/name/connectorAllowed</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setBoxesToAvoid:</TokenIdentifier>
			<Abstract type="html">* description: An array of boxes to avoid when laying out the labels. Each
item has a left, right, top and bottom property.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *boxesToAvoid</Declaration>
			
			
			<Anchor>//api/name/boxesToAvoid</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/boxesToAvoid</TokenIdentifier>
			<Abstract type="html">* description: An array of boxes to avoid when laying out the labels. Each
item has a left, right, top and bottom property.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *boxesToAvoid</Declaration>
			
			
			<Anchor>//api/name/boxesToAvoid</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/boxesToAvoid</TokenIdentifier>
			<Abstract type="html">* description: An array of boxes to avoid when laying out the labels. Each
item has a left, right, top and bottom property.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *boxesToAvoid</Declaration>
			
			
			<Anchor>//api/name/boxesToAvoid</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setOnArea:</TokenIdentifier>
			<Abstract type="html">* description: Draw the label on the area of an area series. By default it
is drawn on the area. Set it to false to draw it next to
the graph instead.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *onArea</Declaration>
			
			
			<Anchor>//api/name/onArea</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/onArea</TokenIdentifier>
			<Abstract type="html">* description: Draw the label on the area of an area series. By default it
is drawn on the area. Set it to false to draw it next to
the graph instead.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *onArea</Declaration>
			
			
			<Anchor>//api/name/onArea</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/onArea</TokenIdentifier>
			<Abstract type="html">* description: Draw the label on the area of an area series. By default it
is drawn on the area. Set it to false to draw it next to
the graph instead.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *onArea</Declaration>
			
			
			<Anchor>//api/name/onArea</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setMaxFontSize:</TokenIdentifier>
			<Abstract type="html">* description: For area-like series, allow the font size to vary so that
small areas get a smaller font size. The default applies this
effect to area-like series but not line-like series.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxFontSize</Declaration>
			
			
			<Anchor>//api/name/maxFontSize</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/maxFontSize</TokenIdentifier>
			<Abstract type="html">* description: For area-like series, allow the font size to vary so that
small areas get a smaller font size. The default applies this
effect to area-like series but not line-like series.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxFontSize</Declaration>
			
			
			<Anchor>//api/name/maxFontSize</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/maxFontSize</TokenIdentifier>
			<Abstract type="html">* description: For area-like series, allow the font size to vary so that
small areas get a smaller font size. The default applies this
effect to area-like series but not line-like series.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxFontSize</Declaration>
			
			
			<Anchor>//api/name/maxFontSize</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setConnectorNeighbourDistance:</TokenIdentifier>
			<Abstract type="html">* description: If the label is closer than this to a neighbour graph, draw a
connector.
* default: 24</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorNeighbourDistance</Declaration>
			
			
			<Anchor>//api/name/connectorNeighbourDistance</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/connectorNeighbourDistance</TokenIdentifier>
			<Abstract type="html">* description: If the label is closer than this to a neighbour graph, draw a
connector.
* default: 24</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorNeighbourDistance</Declaration>
			
			
			<Anchor>//api/name/connectorNeighbourDistance</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/connectorNeighbourDistance</TokenIdentifier>
			<Abstract type="html">* description: If the label is closer than this to a neighbour graph, draw a
connector.
* default: 24</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *connectorNeighbourDistance</Declaration>
			
			
			<Anchor>//api/name/connectorNeighbourDistance</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setMinFontSize:</TokenIdentifier>
			<Abstract type="html">* description: For area-like series, allow the font size to vary so that
small areas get a smaller font size. The default applies this
effect to area-like series but not line-like series.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minFontSize</Declaration>
			
			
			<Anchor>//api/name/minFontSize</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/minFontSize</TokenIdentifier>
			<Abstract type="html">* description: For area-like series, allow the font size to vary so that
small areas get a smaller font size. The default applies this
effect to area-like series but not line-like series.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minFontSize</Declaration>
			
			
			<Anchor>//api/name/minFontSize</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/minFontSize</TokenIdentifier>
			<Abstract type="html">* description: For area-like series, allow the font size to vary so that
small areas get a smaller font size. The default applies this
effect to area-like series but not line-like series.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minFontSize</Declaration>
			
			
			<Anchor>//api/name/minFontSize</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setStyle:</TokenIdentifier>
			<Abstract type="html">* description: Styles for the series label. The color defaults to the series
color, or a contrast color if onArea.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/style</TokenIdentifier>
			<Abstract type="html">* description: Styles for the series label. The color defaults to the series
color, or a contrast color if onArea.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/style</TokenIdentifier>
			<Abstract type="html">* description: Styles for the series label. The color defaults to the series
color, or a contrast color if onArea.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setEnabled:</TokenIdentifier>
			<Abstract type="html">description: Enable the series label per series.
default: True</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/enabled</TokenIdentifier>
			<Abstract type="html">description: Enable the series label per series.
default: True</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/enabled</TokenIdentifier>
			<Abstract type="html">description: Enable the series label per series.
default: True</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setUseHTML:</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the labels.
* default: false</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the labels.
* default: false</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the labels.
* default: false</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setX:</TokenIdentifier>
			<Abstract type="html">* description: Horizontal position relative the alignment. Default varies by orientation.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/x</TokenIdentifier>
			<Abstract type="html">* description: Horizontal position relative the alignment. Default varies by orientation.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/x</TokenIdentifier>
			<Abstract type="html">* description: Horizontal position relative the alignment. Default varies by orientation.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setRotation:</TokenIdentifier>
			<Abstract type="html">* description: Rotation of the text label in degrees .</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/rotation</TokenIdentifier>
			<Abstract type="html">* description: Rotation of the text label in degrees .</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/rotation</TokenIdentifier>
			<Abstract type="html">* description: Rotation of the text label in degrees .</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setText:</TokenIdentifier>
			<Abstract type="html">description: The string text itself. A subset of HTML is supported.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/text</TokenIdentifier>
			<Abstract type="html">description: The string text itself. A subset of HTML is supported.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/text</TokenIdentifier>
			<Abstract type="html">description: The string text itself. A subset of HTML is supported.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setY:</TokenIdentifier>
			<Abstract type="html">* description: Vertical position of the text baseline relative to the alignment.
Default varies by orientation.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/y</TokenIdentifier>
			<Abstract type="html">* description: Vertical position of the text baseline relative to the alignment.
Default varies by orientation.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/y</TokenIdentifier>
			<Abstract type="html">* description: Vertical position of the text baseline relative to the alignment.
Default varies by orientation.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setAlign:</TokenIdentifier>
			<Abstract type="html">* description: Horizontal alignment of the label. Can be one of &quot;left&quot;, &quot;center&quot;
or &quot;right&quot;.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/align</TokenIdentifier>
			<Abstract type="html">* description: Horizontal alignment of the label. Can be one of &quot;left&quot;, &quot;center&quot;
or &quot;right&quot;.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/align</TokenIdentifier>
			<Abstract type="html">* description: Horizontal alignment of the label. Can be one of &quot;left&quot;, &quot;center&quot;
or &quot;right&quot;.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setTextAlign:</TokenIdentifier>
			<Abstract type="html">* description: The text alignment for the label. While align determines where
the texts anchor point is placed within the plot band, textAlign
determines how the text is aligned against its anchor point. Possible
values are &quot;left&quot;, &quot;center&quot; and &quot;right&quot;. Defaults to the same as
the align option.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *textAlign</Declaration>
			
			
			<Anchor>//api/name/textAlign</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/textAlign</TokenIdentifier>
			<Abstract type="html">* description: The text alignment for the label. While align determines where
the texts anchor point is placed within the plot band, textAlign
determines how the text is aligned against its anchor point. Possible
values are &quot;left&quot;, &quot;center&quot; and &quot;right&quot;. Defaults to the same as
the align option.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *textAlign</Declaration>
			
			
			<Anchor>//api/name/textAlign</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/textAlign</TokenIdentifier>
			<Abstract type="html">* description: The text alignment for the label. While align determines where
the texts anchor point is placed within the plot band, textAlign
determines how the text is aligned against its anchor point. Possible
values are &quot;left&quot;, &quot;center&quot; and &quot;right&quot;. Defaults to the same as
the align option.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *textAlign</Declaration>
			
			
			<Anchor>//api/name/textAlign</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/setVerticalAlign:</TokenIdentifier>
			<Abstract type="html">* description: Vertical alignment of the label relative to the plot band. Can be
one of &quot;top&quot;, &quot;middle&quot; or &quot;bottom&quot;.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabel/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: Vertical alignment of the label relative to the plot band. Can be
one of &quot;top&quot;, &quot;middle&quot; or &quot;bottom&quot;.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabel/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: Vertical alignment of the label relative to the plot band. Can be
one of &quot;top&quot;, &quot;middle&quot; or &quot;bottom&quot;.</Abstract>
			<DeclaredIn>HILabel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="70"/>
		</Token>
		
        
        
	</File>
</Tokens>