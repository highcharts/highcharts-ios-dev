<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HILabelOptions.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HILabelOptions</TokenIdentifier>
			<Abstract type="html">* description: Options for annotation&apos;s labels. Each label inherits options
from the labelOptions object. An option from the labelOptions can be
overwritten by config for a specific label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
            
			
			<NodeRef refid="71"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setBackgroundColor:</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setOverflow:</TokenIdentifier>
			<Abstract type="html">* description: How to handle the annotation&apos;s label that flow outside the plot
area. The justify option aligns the label inside the plot area.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *overflow</Declaration>
			
			
			<Anchor>//api/name/overflow</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/overflow</TokenIdentifier>
			<Abstract type="html">* description: How to handle the annotation&apos;s label that flow outside the plot
area. The justify option aligns the label inside the plot area.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *overflow</Declaration>
			
			
			<Anchor>//api/name/overflow</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/overflow</TokenIdentifier>
			<Abstract type="html">* description: How to handle the annotation&apos;s label that flow outside the plot
area. The justify option aligns the label inside the plot area.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *overflow</Declaration>
			
			
			<Anchor>//api/name/overflow</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setBorderWidth:</TokenIdentifier>
			<Abstract type="html">* description: The border width in pixels for the annotation&apos;s label</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The border width in pixels for the annotation&apos;s label</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The border width in pixels for the annotation&apos;s label</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setBorderColor:</TokenIdentifier>
			<Abstract type="html">* description: The border color for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The border color for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The border color for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setDistance:</TokenIdentifier>
			<Abstract type="html">* description: The label&apos;s pixel distance from the point.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *distance</Declaration>
			
			
			<Anchor>//api/name/distance</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/distance</TokenIdentifier>
			<Abstract type="html">* description: The label&apos;s pixel distance from the point.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *distance</Declaration>
			
			
			<Anchor>//api/name/distance</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/distance</TokenIdentifier>
			<Abstract type="html">* description: The label&apos;s pixel distance from the point.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *distance</Declaration>
			
			
			<Anchor>//api/name/distance</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setUseHTML:</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the annotation&apos;s label.
* default: false</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the annotation&apos;s label.
* default: false</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the annotation&apos;s label.
* default: false</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setCrop:</TokenIdentifier>
			<Abstract type="html">* description: Whether to hide the annotation&apos;s label that is outside the plot area.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *crop</Declaration>
			
			
			<Anchor>//api/name/crop</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/crop</TokenIdentifier>
			<Abstract type="html">* description: Whether to hide the annotation&apos;s label that is outside the plot area.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *crop</Declaration>
			
			
			<Anchor>//api/name/crop</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/crop</TokenIdentifier>
			<Abstract type="html">* description: Whether to hide the annotation&apos;s label that is outside the plot area.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *crop</Declaration>
			
			
			<Anchor>//api/name/crop</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setShadow:</TokenIdentifier>
			<Abstract type="html">* description: The shadow of the box. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/shadow</TokenIdentifier>
			<Abstract type="html">* description: The shadow of the box. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/shadow</TokenIdentifier>
			<Abstract type="html">* description: The shadow of the box. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setVerticalAlign:</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setAlign:</TokenIdentifier>
			<Abstract type="html">* description: The alignment of the annotation&apos;s label. If right,
the right side of the label should be touching the point.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/align</TokenIdentifier>
			<Abstract type="html">* description: The alignment of the annotation&apos;s label. If right,
the right side of the label should be touching the point.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/align</TokenIdentifier>
			<Abstract type="html">* description: The alignment of the annotation&apos;s label. If right,
the right side of the label should be touching the point.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setStyle:</TokenIdentifier>
			<Abstract type="html">* description: Styles for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/style</TokenIdentifier>
			<Abstract type="html">* description: Styles for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/style</TokenIdentifier>
			<Abstract type="html">* description: Styles for the annotation&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setAllowOverlap:</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow the annotation&apos;s labels to overlap.
To make the labels less sensitive for overlapping,
the can be set to 0.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/allowOverlap</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow the annotation&apos;s labels to overlap.
To make the labels less sensitive for overlapping,
the can be set to 0.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/allowOverlap</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow the annotation&apos;s labels to overlap.
To make the labels less sensitive for overlapping,
the can be set to 0.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setPadding:</TokenIdentifier>
			<Abstract type="html">* description: When either the borderWidth or the backgroundColor is set,
this    is the padding within the box.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/padding</TokenIdentifier>
			<Abstract type="html">* description: When either the borderWidth or the backgroundColor is set,
this    is the padding within the box.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/padding</TokenIdentifier>
			<Abstract type="html">* description: When either the borderWidth or the backgroundColor is set,
this    is the padding within the box.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setX:</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the point.
Note that if a distance is defined, the distance takes
precedence over x and y options.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/x</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the point.
Note that if a distance is defined, the distance takes
precedence over x and y options.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/x</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the point.
Note that if a distance is defined, the distance takes
precedence over x and y options.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setY:</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the point.
Note that if a distance is defined, the distance takes
precedence over x and y options.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/y</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the point.
Note that if a distance is defined, the distance takes
precedence over x and y options.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/y</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the point.
Note that if a distance is defined, the distance takes
precedence over x and y options.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setBorderRadius:</TokenIdentifier>
			<Abstract type="html">* description: The border radius in pixels for the annotaiton&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The border radius in pixels for the annotaiton&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The border radius in pixels for the annotaiton&apos;s label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setText:</TokenIdentifier>
			<Abstract type="html">* description: Alias for the format option.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/text</TokenIdentifier>
			<Abstract type="html">* description: Alias for the format option.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/text</TokenIdentifier>
			<Abstract type="html">* description: Alias for the format option.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setFormatter:</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the annotation&apos;s label. Note that
if a format or text are defined, the format or text take precedence
and the formatter is ignored. This refers to a point object.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the annotation&apos;s label. Note that
if a format or text are defined, the format or text take precedence
and the formatter is ignored. This refers to a point object.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the annotation&apos;s label. Note that
if a format or text are defined, the format or text take precedence
and the formatter is ignored. This refers to a point object.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setShape:</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the label.
Symbols are predefined functions on the Renderer object.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/shape</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the label.
Symbols are predefined functions on the Renderer object.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/shape</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the label.
Symbols are predefined functions on the Renderer object.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/setFormat:</TokenIdentifier>
			<Abstract type="html">* description: A https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting : format string for the data label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILabelOptions/format</TokenIdentifier>
			<Abstract type="html">* description: A https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting : format string for the data label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILabelOptions/format</TokenIdentifier>
			<Abstract type="html">* description: A https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting : format string for the data label.</Abstract>
			<DeclaredIn>HILabelOptions.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
        
        
	</File>
</Tokens>