<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HISolidgauge.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HISolidgauge</TokenIdentifier>
			<Abstract type="html">* description: A solidgauge series. If the type option
is not specified, it is inherited from chart.type.
For options that apply to multiple series, it is recommended to add
them to the plotOptions.series options structure.
To apply to all series of this specific type, apply it to plotOptions.
solidgauge.</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
            
			
			<NodeRef refid="115"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/setWrap:</TokenIdentifier>
			<Abstract type="html">* description: When this option is true, the dial will wrap around the axes. For
instance, in a full-range gauge going from 0 to 360, a value of 400
will point to 40. When wrap is false, the dial stops at 360.
* default: true</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *wrap</Declaration>
			
			
			<Anchor>//api/name/wrap</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/wrap</TokenIdentifier>
			<Abstract type="html">* description: When this option is true, the dial will wrap around the axes. For
instance, in a full-range gauge going from 0 to 360, a value of 400
will point to 40. When wrap is false, the dial stops at 360.
* default: true</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *wrap</Declaration>
			
			
			<Anchor>//api/name/wrap</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HISolidgauge/wrap</TokenIdentifier>
			<Abstract type="html">* description: When this option is true, the dial will wrap around the axes. For
instance, in a full-range gauge going from 0 to 360, a value of 400
will point to 40. When wrap is false, the dial stops at 360.
* default: true</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *wrap</Declaration>
			
			
			<Anchor>//api/name/wrap</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/setOvershoot:</TokenIdentifier>
			<Abstract type="html">* description: Allow the dial to overshoot the end of the perimeter axis by this
many degrees. Say if the gauge axis goes from 0 to 60, a value of
100, or 1000, will show 5 degrees beyond the end of the axis.</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *overshoot</Declaration>
			
			
			<Anchor>//api/name/overshoot</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/overshoot</TokenIdentifier>
			<Abstract type="html">* description: Allow the dial to overshoot the end of the perimeter axis by this
many degrees. Say if the gauge axis goes from 0 to 60, a value of
100, or 1000, will show 5 degrees beyond the end of the axis.</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *overshoot</Declaration>
			
			
			<Anchor>//api/name/overshoot</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HISolidgauge/overshoot</TokenIdentifier>
			<Abstract type="html">* description: Allow the dial to overshoot the end of the perimeter axis by this
many degrees. Say if the gauge axis goes from 0 to 60, a value of
100, or 1000, will show 5 degrees beyond the end of the axis.</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *overshoot</Declaration>
			
			
			<Anchor>//api/name/overshoot</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/setRounded:</TokenIdentifier>
			<Abstract type="html">* description: Wether to draw rounded edges on the gauge.</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rounded</Declaration>
			
			
			<Anchor>//api/name/rounded</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/rounded</TokenIdentifier>
			<Abstract type="html">* description: Wether to draw rounded edges on the gauge.</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rounded</Declaration>
			
			
			<Anchor>//api/name/rounded</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HISolidgauge/rounded</TokenIdentifier>
			<Abstract type="html">* description: Wether to draw rounded edges on the gauge.</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rounded</Declaration>
			
			
			<Anchor>//api/name/rounded</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/setColorByPoint:</TokenIdentifier>
			<Abstract type="html">description: Whether to give each point an individual color.
default: True</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *colorByPoint</Declaration>
			
			
			<Anchor>//api/name/colorByPoint</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HISolidgauge/colorByPoint</TokenIdentifier>
			<Abstract type="html">description: Whether to give each point an individual color.
default: True</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *colorByPoint</Declaration>
			
			
			<Anchor>//api/name/colorByPoint</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HISolidgauge/colorByPoint</TokenIdentifier>
			<Abstract type="html">description: Whether to give each point an individual color.
default: True</Abstract>
			<DeclaredIn>HISolidgauge.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *colorByPoint</Declaration>
			
			
			<Anchor>//api/name/colorByPoint</Anchor>
            <NodeRef refid="115"/>
		</Token>
		
        
        
	</File>
</Tokens>