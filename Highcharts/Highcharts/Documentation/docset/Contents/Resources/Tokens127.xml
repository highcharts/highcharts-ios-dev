<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HITooltip.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HITooltip</TokenIdentifier>
			<Abstract type="html">* description: Options for the tooltip that appears when the user hovers over a
series or point.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
            
			
			<NodeRef refid="127"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setSplit:</TokenIdentifier>
			<Abstract type="html">* description: Split the tooltip into one label per series, with the header close
to the axis. This is recommended over shared tooltips
for charts with multiple line series, generally making them easier
to read.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *split</Declaration>
			
			
			<Anchor>//api/name/split</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/split</TokenIdentifier>
			<Abstract type="html">* description: Split the tooltip into one label per series, with the header close
to the axis. This is recommended over shared tooltips
for charts with multiple line series, generally making them easier
to read.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *split</Declaration>
			
			
			<Anchor>//api/name/split</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/split</TokenIdentifier>
			<Abstract type="html">* description: Split the tooltip into one label per series, with the header close
to the axis. This is recommended over shared tooltips
for charts with multiple line series, generally making them easier
to read.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *split</Declaration>
			
			
			<Anchor>//api/name/split</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setValuePrefix:</TokenIdentifier>
			<Abstract type="html">* description: A string to prepend to each series&apos; y value. Overridable in each
series&apos; tooltip options object.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *valuePrefix</Declaration>
			
			
			<Anchor>//api/name/valuePrefix</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/valuePrefix</TokenIdentifier>
			<Abstract type="html">* description: A string to prepend to each series&apos; y value. Overridable in each
series&apos; tooltip options object.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *valuePrefix</Declaration>
			
			
			<Anchor>//api/name/valuePrefix</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/valuePrefix</TokenIdentifier>
			<Abstract type="html">* description: A string to prepend to each series&apos; y value. Overridable in each
series&apos; tooltip options object.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *valuePrefix</Declaration>
			
			
			<Anchor>//api/name/valuePrefix</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setHideDelay:</TokenIdentifier>
			<Abstract type="html">* description: The number of milliseconds to wait until the tooltip is hidden when
mouse out from a point or chart.
* default: 500</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *hideDelay</Declaration>
			
			
			<Anchor>//api/name/hideDelay</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/hideDelay</TokenIdentifier>
			<Abstract type="html">* description: The number of milliseconds to wait until the tooltip is hidden when
mouse out from a point or chart.
* default: 500</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *hideDelay</Declaration>
			
			
			<Anchor>//api/name/hideDelay</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/hideDelay</TokenIdentifier>
			<Abstract type="html">* description: The number of milliseconds to wait until the tooltip is hidden when
mouse out from a point or chart.
* default: 500</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *hideDelay</Declaration>
			
			
			<Anchor>//api/name/hideDelay</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setHeaderFormat:</TokenIdentifier>
			<Abstract type="html">* description: The HTML of the tooltip header line. Variables are enclosed by
curly brackets. Available variables are point.key, series.name,
series.color and other members from the point and series
objects. The point.key variable contains the category name, x
value or datetime string depending on the type of axis. For datetime
axes, the point.key date format can be set using tooltip.xDateFormat.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *headerFormat</Declaration>
			
			
			<Anchor>//api/name/headerFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/headerFormat</TokenIdentifier>
			<Abstract type="html">* description: The HTML of the tooltip header line. Variables are enclosed by
curly brackets. Available variables are point.key, series.name,
series.color and other members from the point and series
objects. The point.key variable contains the category name, x
value or datetime string depending on the type of axis. For datetime
axes, the point.key date format can be set using tooltip.xDateFormat.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *headerFormat</Declaration>
			
			
			<Anchor>//api/name/headerFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/headerFormat</TokenIdentifier>
			<Abstract type="html">* description: The HTML of the tooltip header line. Variables are enclosed by
curly brackets. Available variables are point.key, series.name,
series.color and other members from the point and series
objects. The point.key variable contains the category name, x
value or datetime string depending on the type of axis. For datetime
axes, the point.key date format can be set using tooltip.xDateFormat.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *headerFormat</Declaration>
			
			
			<Anchor>//api/name/headerFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setPointFormatter:</TokenIdentifier>
			<Abstract type="html">* description: A callback function for formatting the HTML output for a single point
in the tooltip. Like the pointFormat string, but with more flexibility.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *pointFormatter</Declaration>
			
			
			<Anchor>//api/name/pointFormatter</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/pointFormatter</TokenIdentifier>
			<Abstract type="html">* description: A callback function for formatting the HTML output for a single point
in the tooltip. Like the pointFormat string, but with more flexibility.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *pointFormatter</Declaration>
			
			
			<Anchor>//api/name/pointFormatter</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/pointFormatter</TokenIdentifier>
			<Abstract type="html">* description: A callback function for formatting the HTML output for a single point
in the tooltip. Like the pointFormat string, but with more flexibility.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *pointFormatter</Declaration>
			
			
			<Anchor>//api/name/pointFormatter</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setFooterFormat:</TokenIdentifier>
			<Abstract type="html">* description: A string to append to the tooltip format.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *footerFormat</Declaration>
			
			
			<Anchor>//api/name/footerFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/footerFormat</TokenIdentifier>
			<Abstract type="html">* description: A string to append to the tooltip format.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *footerFormat</Declaration>
			
			
			<Anchor>//api/name/footerFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/footerFormat</TokenIdentifier>
			<Abstract type="html">* description: A string to append to the tooltip format.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *footerFormat</Declaration>
			
			
			<Anchor>//api/name/footerFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setDateTimeLabelFormats:</TokenIdentifier>
			<Abstract type="html">* description: For series on a datetime axes, the date format in the tooltip&apos;s
header will by default be guessed based on the closest data points.
This member gives the default string representations used for
each unit. For an overview of the replacement codes, see dateFormat.
Defaults to:
{
    millisecond:&quot;%A, %b %e, %H:%M:%S.%L&quot;,
    second:&quot;%A, %b %e, %H:%M:%S&quot;,
    minute:&quot;%A, %b %e, %H:%M&quot;,
    hour:&quot;%A, %b %e, %H:%M&quot;,
    day:&quot;%A, %b %e, %Y&quot;,
    week:&quot;Week from %A, %b %e, %Y&quot;,
    month:&quot;%B %Y&quot;,
    year:&quot;%Y&quot;
}</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDateTimeLabelFormats *dateTimeLabelFormats</Declaration>
			
			
			<Anchor>//api/name/dateTimeLabelFormats</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/dateTimeLabelFormats</TokenIdentifier>
			<Abstract type="html">* description: For series on a datetime axes, the date format in the tooltip&apos;s
header will by default be guessed based on the closest data points.
This member gives the default string representations used for
each unit. For an overview of the replacement codes, see dateFormat.
Defaults to:
{
    millisecond:&quot;%A, %b %e, %H:%M:%S.%L&quot;,
    second:&quot;%A, %b %e, %H:%M:%S&quot;,
    minute:&quot;%A, %b %e, %H:%M&quot;,
    hour:&quot;%A, %b %e, %H:%M&quot;,
    day:&quot;%A, %b %e, %Y&quot;,
    week:&quot;Week from %A, %b %e, %Y&quot;,
    month:&quot;%B %Y&quot;,
    year:&quot;%Y&quot;
}</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDateTimeLabelFormats *dateTimeLabelFormats</Declaration>
			
			
			<Anchor>//api/name/dateTimeLabelFormats</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/dateTimeLabelFormats</TokenIdentifier>
			<Abstract type="html">* description: For series on a datetime axes, the date format in the tooltip&apos;s
header will by default be guessed based on the closest data points.
This member gives the default string representations used for
each unit. For an overview of the replacement codes, see dateFormat.
Defaults to:
{
    millisecond:&quot;%A, %b %e, %H:%M:%S.%L&quot;,
    second:&quot;%A, %b %e, %H:%M:%S&quot;,
    minute:&quot;%A, %b %e, %H:%M&quot;,
    hour:&quot;%A, %b %e, %H:%M&quot;,
    day:&quot;%A, %b %e, %Y&quot;,
    week:&quot;Week from %A, %b %e, %Y&quot;,
    month:&quot;%B %Y&quot;,
    year:&quot;%Y&quot;
}</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDateTimeLabelFormats *dateTimeLabelFormats</Declaration>
			
			
			<Anchor>//api/name/dateTimeLabelFormats</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setFollowTouchMove:</TokenIdentifier>
			<Abstract type="html">* description: Whether the tooltip should follow the finger as it moves on a touch
device. If this is true and chart.panning is
set,followTouchMove will take over one-finger touches, so the user
needs to use two fingers for zooming and panning.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *followTouchMove</Declaration>
			
			
			<Anchor>//api/name/followTouchMove</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/followTouchMove</TokenIdentifier>
			<Abstract type="html">* description: Whether the tooltip should follow the finger as it moves on a touch
device. If this is true and chart.panning is
set,followTouchMove will take over one-finger touches, so the user
needs to use two fingers for zooming and panning.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *followTouchMove</Declaration>
			
			
			<Anchor>//api/name/followTouchMove</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/followTouchMove</TokenIdentifier>
			<Abstract type="html">* description: Whether the tooltip should follow the finger as it moves on a touch
device. If this is true and chart.panning is
set,followTouchMove will take over one-finger touches, so the user
needs to use two fingers for zooming and panning.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *followTouchMove</Declaration>
			
			
			<Anchor>//api/name/followTouchMove</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setValueDecimals:</TokenIdentifier>
			<Abstract type="html">* description: How many decimals to show in each series&apos; y value. This is overridable
in each series&apos; tooltip options object. The default is to preserve
all decimals.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *valueDecimals</Declaration>
			
			
			<Anchor>//api/name/valueDecimals</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/valueDecimals</TokenIdentifier>
			<Abstract type="html">* description: How many decimals to show in each series&apos; y value. This is overridable
in each series&apos; tooltip options object. The default is to preserve
all decimals.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *valueDecimals</Declaration>
			
			
			<Anchor>//api/name/valueDecimals</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/valueDecimals</TokenIdentifier>
			<Abstract type="html">* description: How many decimals to show in each series&apos; y value. This is overridable
in each series&apos; tooltip options object. The default is to preserve
all decimals.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *valueDecimals</Declaration>
			
			
			<Anchor>//api/name/valueDecimals</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setFollowPointer:</TokenIdentifier>
			<Abstract type="html">* description: Whether the tooltip should follow the mouse as it moves across columns,
pie slices and other point types with an extent. By default it behaves
this way for scatter, bubble and pie series by override in the plotOptions
for those series types.
For touch moves to behave the same way, followTouchMove must be true also.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *followPointer</Declaration>
			
			
			<Anchor>//api/name/followPointer</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/followPointer</TokenIdentifier>
			<Abstract type="html">* description: Whether the tooltip should follow the mouse as it moves across columns,
pie slices and other point types with an extent. By default it behaves
this way for scatter, bubble and pie series by override in the plotOptions
for those series types.
For touch moves to behave the same way, followTouchMove must be true also.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *followPointer</Declaration>
			
			
			<Anchor>//api/name/followPointer</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/followPointer</TokenIdentifier>
			<Abstract type="html">* description: Whether the tooltip should follow the mouse as it moves across columns,
pie slices and other point types with an extent. By default it behaves
this way for scatter, bubble and pie series by override in the plotOptions
for those series types.
For touch moves to behave the same way, followTouchMove must be true also.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *followPointer</Declaration>
			
			
			<Anchor>//api/name/followPointer</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setValueSuffix:</TokenIdentifier>
			<Abstract type="html">* description: A string to append to each series&apos; y value. Overridable in each series&apos;
tooltip options object.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *valueSuffix</Declaration>
			
			
			<Anchor>//api/name/valueSuffix</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/valueSuffix</TokenIdentifier>
			<Abstract type="html">* description: A string to append to each series&apos; y value. Overridable in each series&apos;
tooltip options object.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *valueSuffix</Declaration>
			
			
			<Anchor>//api/name/valueSuffix</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/valueSuffix</TokenIdentifier>
			<Abstract type="html">* description: A string to append to each series&apos; y value. Overridable in each series&apos;
tooltip options object.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *valueSuffix</Declaration>
			
			
			<Anchor>//api/name/valueSuffix</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setPadding:</TokenIdentifier>
			<Abstract type="html">description: Padding inside the tooltip, in pixels.
default: 8</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/padding</TokenIdentifier>
			<Abstract type="html">description: Padding inside the tooltip, in pixels.
default: 8</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/padding</TokenIdentifier>
			<Abstract type="html">description: Padding inside the tooltip, in pixels.
default: 8</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setPointFormat:</TokenIdentifier>
			<Abstract type="html">* description: The HTML of the point&apos;s line in the tooltip. Variables are enclosed
by curly brackets. Available variables are point.x, point.y, series.
name and series.color and other properties on the same form. Furthermore,
point.y can be extended by the tooltip.valuePrefix and tooltip.
valueSuffix variables. This can also be overridden for each series,
which makes it a good hook for displaying units.
In styled mode, the dot is colored by a class name rather
than the point color.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *pointFormat</Declaration>
			
			
			<Anchor>//api/name/pointFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/pointFormat</TokenIdentifier>
			<Abstract type="html">* description: The HTML of the point&apos;s line in the tooltip. Variables are enclosed
by curly brackets. Available variables are point.x, point.y, series.
name and series.color and other properties on the same form. Furthermore,
point.y can be extended by the tooltip.valuePrefix and tooltip.
valueSuffix variables. This can also be overridden for each series,
which makes it a good hook for displaying units.
In styled mode, the dot is colored by a class name rather
than the point color.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *pointFormat</Declaration>
			
			
			<Anchor>//api/name/pointFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/pointFormat</TokenIdentifier>
			<Abstract type="html">* description: The HTML of the point&apos;s line in the tooltip. Variables are enclosed
by curly brackets. Available variables are point.x, point.y, series.
name and series.color and other properties on the same form. Furthermore,
point.y can be extended by the tooltip.valuePrefix and tooltip.
valueSuffix variables. This can also be overridden for each series,
which makes it a good hook for displaying units.
In styled mode, the dot is colored by a class name rather
than the point color.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *pointFormat</Declaration>
			
			
			<Anchor>//api/name/pointFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setXDateFormat:</TokenIdentifier>
			<Abstract type="html">* description: The format for the date in the tooltip header if the X axis is a
datetime axis. The default is a best guess based on the smallest
distance between points in the chart.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *xDateFormat</Declaration>
			
			
			<Anchor>//api/name/xDateFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/xDateFormat</TokenIdentifier>
			<Abstract type="html">* description: The format for the date in the tooltip header if the X axis is a
datetime axis. The default is a best guess based on the smallest
distance between points in the chart.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *xDateFormat</Declaration>
			
			
			<Anchor>//api/name/xDateFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/xDateFormat</TokenIdentifier>
			<Abstract type="html">* description: The format for the date in the tooltip header if the X axis is a
datetime axis. The default is a best guess based on the smallest
distance between points in the chart.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *xDateFormat</Declaration>
			
			
			<Anchor>//api/name/xDateFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setNodeFormat:</TokenIdentifier>
			<Abstract type="html">* description: The http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string specifying what to show for nodes in tooltip
of a sankey diagram series.
* default: {point.name}: &lt;b&gt;{point.sum}&lt;/b&gt;&lt;br/&gt;</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *nodeFormat</Declaration>
			
			
			<Anchor>//api/name/nodeFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/nodeFormat</TokenIdentifier>
			<Abstract type="html">* description: The http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string specifying what to show for nodes in tooltip
of a sankey diagram series.
* default: {point.name}: &lt;b&gt;{point.sum}&lt;/b&gt;&lt;br/&gt;</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *nodeFormat</Declaration>
			
			
			<Anchor>//api/name/nodeFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/nodeFormat</TokenIdentifier>
			<Abstract type="html">* description: The http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string specifying what to show for nodes in tooltip
of a sankey diagram series.
* default: {point.name}: &lt;b&gt;{point.sum}&lt;/b&gt;&lt;br/&gt;</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *nodeFormat</Declaration>
			
			
			<Anchor>//api/name/nodeFormat</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setStyle:</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the tooltip. The tooltip can also be styled through
the CSS class .highcharts-tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/style</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the tooltip. The tooltip can also be styled through
the CSS class .highcharts-tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/style</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the tooltip. The tooltip can also be styled through
the CSS class .highcharts-tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setUseHTML:</TokenIdentifier>
			<Abstract type="html">* description: Use HTML to render the contents of the tooltip instead of SVG. Using
HTML allows advanced formatting like tables and images in the tooltip.
It is also recommended for rtl languages as it works around rtl
bugs in early Firefox.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Use HTML to render the contents of the tooltip instead of SVG. Using
HTML allows advanced formatting like tables and images in the tooltip.
It is also recommended for rtl languages as it works around rtl
bugs in early Firefox.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Use HTML to render the contents of the tooltip instead of SVG. Using
HTML allows advanced formatting like tables and images in the tooltip.
It is also recommended for rtl languages as it works around rtl
bugs in early Firefox.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setPositioner:</TokenIdentifier>
			<Abstract type="html">* description: A callback function to place the tooltip in a default position. The
callback receives three parameters: labelWidth, labelHeight and
point, where point contains values for plotX and plotY telling
where the reference point is in the plot area. Add chart.plotLeft
and chart.plotTop to get the full coordinates.
The return should be an object containing x and y values, for example
{ x: 100, y: 100 }.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *positioner</Declaration>
			
			
			<Anchor>//api/name/positioner</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/positioner</TokenIdentifier>
			<Abstract type="html">* description: A callback function to place the tooltip in a default position. The
callback receives three parameters: labelWidth, labelHeight and
point, where point contains values for plotX and plotY telling
where the reference point is in the plot area. Add chart.plotLeft
and chart.plotTop to get the full coordinates.
The return should be an object containing x and y values, for example
{ x: 100, y: 100 }.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *positioner</Declaration>
			
			
			<Anchor>//api/name/positioner</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/positioner</TokenIdentifier>
			<Abstract type="html">* description: A callback function to place the tooltip in a default position. The
callback receives three parameters: labelWidth, labelHeight and
point, where point contains values for plotX and plotY telling
where the reference point is in the plot area. Add chart.plotLeft
and chart.plotTop to get the full coordinates.
The return should be an object containing x and y values, for example
{ x: 100, y: 100 }.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *positioner</Declaration>
			
			
			<Anchor>//api/name/positioner</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setShadow:</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/shadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/shadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setFormatter:</TokenIdentifier>
			<Abstract type="html">* description: Callback function to format the text of the tooltip from scratch. Return
false to disable tooltip for a specific point on series.
A subset of HTML is supported. Unless useHTML is true, the HTML of the
tooltip is parsed and converted to SVG, therefore this isn&apos;t a complete HTML
renderer. The following tags are supported: &lt;b&gt;, &lt;strong&gt;, &lt;i&gt;, &lt;em&gt;,
&lt;br/&gt;, &lt;span&gt;. Spans can be styled with a style attribute,
but only text-related CSS that is shared with SVG is handled.
Since version 2.1 the tooltip can be shared between multiple series
through the shared option. The available data in the formatter
differ a bit depending on whether the tooltip is shared or not. In
a shared tooltip, all properties except x, which is common for
all points, are kept in an array, this.points.
Available data are:</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback function to format the text of the tooltip from scratch. Return
false to disable tooltip for a specific point on series.
A subset of HTML is supported. Unless useHTML is true, the HTML of the
tooltip is parsed and converted to SVG, therefore this isn&apos;t a complete HTML
renderer. The following tags are supported: &lt;b&gt;, &lt;strong&gt;, &lt;i&gt;, &lt;em&gt;,
&lt;br/&gt;, &lt;span&gt;. Spans can be styled with a style attribute,
but only text-related CSS that is shared with SVG is handled.
Since version 2.1 the tooltip can be shared between multiple series
through the shared option. The available data in the formatter
differ a bit depending on whether the tooltip is shared or not. In
a shared tooltip, all properties except x, which is common for
all points, are kept in an array, this.points.
Available data are:</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback function to format the text of the tooltip from scratch. Return
false to disable tooltip for a specific point on series.
A subset of HTML is supported. Unless useHTML is true, the HTML of the
tooltip is parsed and converted to SVG, therefore this isn&apos;t a complete HTML
renderer. The following tags are supported: &lt;b&gt;, &lt;strong&gt;, &lt;i&gt;, &lt;em&gt;,
&lt;br/&gt;, &lt;span&gt;. Spans can be styled with a style attribute,
but only text-related CSS that is shared with SVG is handled.
Since version 2.1 the tooltip can be shared between multiple series
through the shared option. The available data in the formatter
differ a bit depending on whether the tooltip is shared or not. In
a shared tooltip, all properties except x, which is common for
all points, are kept in an array, this.points.
Available data are:</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setBorderWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the tooltip border.
In styled mode, the stroke width is set in the .highcharts-tooltip-box class.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the tooltip border.
In styled mode, the stroke width is set in the .highcharts-tooltip-box class.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the tooltip border.
In styled mode, the stroke width is set in the .highcharts-tooltip-box class.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setShared:</TokenIdentifier>
			<Abstract type="html">* description: When the tooltip is shared, the entire plot area will capture mouse
movement or touch events. Tooltip texts for series types with ordered
data (not pie, scatter, flags etc) will be shown in a single bubble.
This is recommended for single series charts and for tablet/mobile
optimized charts.
See also tooltip.split, that is better suited for
charts with many series, especially line-type series.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *shared</Declaration>
			
			
			<Anchor>//api/name/shared</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/shared</TokenIdentifier>
			<Abstract type="html">* description: When the tooltip is shared, the entire plot area will capture mouse
movement or touch events. Tooltip texts for series types with ordered
data (not pie, scatter, flags etc) will be shown in a single bubble.
This is recommended for single series charts and for tablet/mobile
optimized charts.
See also tooltip.split, that is better suited for
charts with many series, especially line-type series.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *shared</Declaration>
			
			
			<Anchor>//api/name/shared</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/shared</TokenIdentifier>
			<Abstract type="html">* description: When the tooltip is shared, the entire plot area will capture mouse
movement or touch events. Tooltip texts for series types with ordered
data (not pie, scatter, flags etc) will be shown in a single bubble.
This is recommended for single series charts and for tablet/mobile
optimized charts.
See also tooltip.split, that is better suited for
charts with many series, especially line-type series.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *shared</Declaration>
			
			
			<Anchor>//api/name/shared</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setAnimation:</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable animation of the tooltip. In slow legacy IE browsers
the animation is disabled by default.
* default: true</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *animation</Declaration>
			
			
			<Anchor>//api/name/animation</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/animation</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable animation of the tooltip. In slow legacy IE browsers
the animation is disabled by default.
* default: true</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *animation</Declaration>
			
			
			<Anchor>//api/name/animation</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/animation</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable animation of the tooltip. In slow legacy IE browsers
the animation is disabled by default.
* default: true</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *animation</Declaration>
			
			
			<Anchor>//api/name/animation</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setBorderRadius:</TokenIdentifier>
			<Abstract type="html">* description: The radius of the rounded border corners.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The radius of the rounded border corners.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The radius of the rounded border corners.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setEnabled:</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setBackgroundColor:</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the tooltip.
In styled mode, the stroke width is set in the .highcharts-tooltip-box class.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the tooltip.
In styled mode, the stroke width is set in the .highcharts-tooltip-box class.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the tooltip.
In styled mode, the stroke width is set in the .highcharts-tooltip-box class.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setShape:</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/shape</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/shape</TokenIdentifier>
			<Abstract type="html">* description: The name of a symbol to use for the border around the tooltip.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *shape</Declaration>
			
			
			<Anchor>//api/name/shape</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setBorderColor:</TokenIdentifier>
			<Abstract type="html">* description: The color of the tooltip border. When null, the border takes the
color of the corresponding series or point.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the tooltip border. When null, the border takes the
color of the corresponding series or point.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the tooltip border. When null, the border takes the
color of the corresponding series or point.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setSnap:</TokenIdentifier>
			<Abstract type="html">* description: Proximity snap for graphs or single points. It defaults to 10 for
mouse-powered devices and 25 for touch devices.
Note that in most cases the whole plot area captures the mouse
movement, and in these cases tooltip.snap doesn&apos;t make sense.
This applies when stickyTracking
is true (default) and when the tooltip is shared
or split.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *snap</Declaration>
			
			
			<Anchor>//api/name/snap</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/snap</TokenIdentifier>
			<Abstract type="html">* description: Proximity snap for graphs or single points. It defaults to 10 for
mouse-powered devices and 25 for touch devices.
Note that in most cases the whole plot area captures the mouse
movement, and in these cases tooltip.snap doesn&apos;t make sense.
This applies when stickyTracking
is true (default) and when the tooltip is shared
or split.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *snap</Declaration>
			
			
			<Anchor>//api/name/snap</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/snap</TokenIdentifier>
			<Abstract type="html">* description: Proximity snap for graphs or single points. It defaults to 10 for
mouse-powered devices and 25 for touch devices.
Note that in most cases the whole plot area captures the mouse
movement, and in these cases tooltip.snap doesn&apos;t make sense.
This applies when stickyTracking
is true (default) and when the tooltip is shared
or split.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *snap</Declaration>
			
			
			<Anchor>//api/name/snap</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/setCrosshairs:</TokenIdentifier>
			<Abstract type="html">* description: Since 4.1, the crosshair definitions are moved to the Axis object
in order for a better separation from the tooltip. See xAxis.crosshair.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id crosshairs</Declaration>
			
			
			<Anchor>//api/name/crosshairs</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HITooltip/crosshairs</TokenIdentifier>
			<Abstract type="html">* description: Since 4.1, the crosshair definitions are moved to the Axis object
in order for a better separation from the tooltip. See xAxis.crosshair.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id crosshairs</Declaration>
			
			
			<Anchor>//api/name/crosshairs</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HITooltip/crosshairs</TokenIdentifier>
			<Abstract type="html">* description: Since 4.1, the crosshair definitions are moved to the Axis object
in order for a better separation from the tooltip. See xAxis.crosshair.</Abstract>
			<DeclaredIn>HITooltip.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id crosshairs</Declaration>
			
			
			<Anchor>//api/name/crosshairs</Anchor>
            <NodeRef refid="127"/>
		</Token>
		
        
        
	</File>
</Tokens>