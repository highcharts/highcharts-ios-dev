<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HIStackLabels.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HIStackLabels</TokenIdentifier>
			<Abstract type="html">* description: The stack labels show the total value for each bar in a stacked
column or bar chart. The label will be placed on top of positive
columns and below negative columns. In case of an inverted column
chart or a bar chart the label is placed to the right of positive
bars and to the left of negative bars.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
            
			
			<NodeRef refid="117"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setTextAlign:</TokenIdentifier>
			<Abstract type="html">* description: The text alignment for the label. While align determines where
the texts anchor point is placed with regards to the stack, textAlign
determines how the text is aligned against its anchor point. Possible
values are &quot;left&quot;, &quot;center&quot; and &quot;right&quot;. The default value
is calculated at runtime and depends on orientation and whether the
stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *textAlign</Declaration>
			
			
			<Anchor>//api/name/textAlign</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/textAlign</TokenIdentifier>
			<Abstract type="html">* description: The text alignment for the label. While align determines where
the texts anchor point is placed with regards to the stack, textAlign
determines how the text is aligned against its anchor point. Possible
values are &quot;left&quot;, &quot;center&quot; and &quot;right&quot;. The default value
is calculated at runtime and depends on orientation and whether the
stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *textAlign</Declaration>
			
			
			<Anchor>//api/name/textAlign</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/textAlign</TokenIdentifier>
			<Abstract type="html">* description: The text alignment for the label. While align determines where
the texts anchor point is placed with regards to the stack, textAlign
determines how the text is aligned against its anchor point. Possible
values are &quot;left&quot;, &quot;center&quot; and &quot;right&quot;. The default value
is calculated at runtime and depends on orientation and whether the
stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *textAlign</Declaration>
			
			
			<Anchor>//api/name/textAlign</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setFormatter:</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the label. The value is
given by this.total. Defaults to:
function() {
    return this.total;
}
* demo: https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/highcharts/yaxis/stacklabels-formatter/ : Added units to stack total value</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the label. The value is
given by this.total. Defaults to:
function() {
    return this.total;
}
* demo: https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/highcharts/yaxis/stacklabels-formatter/ : Added units to stack total value</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/formatter</TokenIdentifier>
			<Abstract type="html">* description: Callback JavaScript function to format the label. The value is
given by this.total. Defaults to:
function() {
    return this.total;
}
* demo: https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/highcharts/yaxis/stacklabels-formatter/ : Added units to stack total value</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *formatter</Declaration>
			
			
			<Anchor>//api/name/formatter</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setAlign:</TokenIdentifier>
			<Abstract type="html">* description: Defines the horizontal alignment of the stack total label. Can be
one of &quot;left&quot;, &quot;center&quot; or &quot;right&quot;. The default value is calculated
at runtime and depends on orientation and whether the stack is positive
or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/align</TokenIdentifier>
			<Abstract type="html">* description: Defines the horizontal alignment of the stack total label. Can be
one of &quot;left&quot;, &quot;center&quot; or &quot;right&quot;. The default value is calculated
at runtime and depends on orientation and whether the stack is positive
or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/align</TokenIdentifier>
			<Abstract type="html">* description: Defines the horizontal alignment of the stack total label. Can be
one of &quot;left&quot;, &quot;center&quot; or &quot;right&quot;. The default value is calculated
at runtime and depends on orientation and whether the stack is positive
or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setY:</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the tick position
on the axis. The default value is calculated at runtime and depends
on orientation and whether the stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/y</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the tick position
on the axis. The default value is calculated at runtime and depends
on orientation and whether the stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/y</TokenIdentifier>
			<Abstract type="html">* description: The y position offset of the label relative to the tick position
on the axis. The default value is calculated at runtime and depends
on orientation and whether the stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setVerticalAlign:</TokenIdentifier>
			<Abstract type="html">* description: Defines the vertical alignment of the stack total label. Can be one
of &quot;top&quot;, &quot;middle&quot; or &quot;bottom&quot;. The default value is calculated
at runtime and depends on orientation and whether the stack is positive
or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: Defines the vertical alignment of the stack total label. Can be one
of &quot;top&quot;, &quot;middle&quot; or &quot;bottom&quot;. The default value is calculated
at runtime and depends on orientation and whether the stack is positive
or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: Defines the vertical alignment of the stack total label. Can be one
of &quot;top&quot;, &quot;middle&quot; or &quot;bottom&quot;. The default value is calculated
at runtime and depends on orientation and whether the stack is positive
or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setRotation:</TokenIdentifier>
			<Abstract type="html">* description: Rotation of the labels in degrees.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/rotation</TokenIdentifier>
			<Abstract type="html">* description: Rotation of the labels in degrees.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/rotation</TokenIdentifier>
			<Abstract type="html">* description: Rotation of the labels in degrees.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rotation</Declaration>
			
			
			<Anchor>//api/name/rotation</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setStyle:</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the label.
In styled mode, the styles are set in the
.highcharts-stack-label class.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/style</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the label.
In styled mode, the styles are set in the
.highcharts-stack-label class.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/style</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the label.
In styled mode, the styles are set in the
.highcharts-stack-label class.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIStyle *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setX:</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the left of the stacked
bar. The default value is calculated at runtime and depends on orientation
and whether the stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/x</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the left of the stacked
bar. The default value is calculated at runtime and depends on orientation
and whether the stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/x</TokenIdentifier>
			<Abstract type="html">* description: The x position offset of the label relative to the left of the stacked
bar. The default value is calculated at runtime and depends on orientation
and whether the stack is positive or negative.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setEnabled:</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the stack total labels.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the stack total labels.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the stack total labels.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setAllowOverlap:</TokenIdentifier>
			<Abstract type="html">* description: Allow the stack labels to overlap.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/allowOverlap</TokenIdentifier>
			<Abstract type="html">* description: Allow the stack labels to overlap.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/allowOverlap</TokenIdentifier>
			<Abstract type="html">* description: Allow the stack labels to overlap.</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowOverlap</Declaration>
			
			
			<Anchor>//api/name/allowOverlap</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setFormat:</TokenIdentifier>
			<Abstract type="html">* description: A http://docs.highcharts.com/#formatting : format string for the
data label. Available variables are the same as for formatter.
* default: {total}</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/format</TokenIdentifier>
			<Abstract type="html">* description: A http://docs.highcharts.com/#formatting : format string for the
data label. Available variables are the same as for formatter.
* default: {total}</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/format</TokenIdentifier>
			<Abstract type="html">* description: A http://docs.highcharts.com/#formatting : format string for the
data label. Available variables are the same as for formatter.
* default: {total}</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *format</Declaration>
			
			
			<Anchor>//api/name/format</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/setUseHTML:</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html : use HTML
to render the labels.
* default: false</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIStackLabels/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html : use HTML
to render the labels.
* default: false</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIStackLabels/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html : use HTML
to render the labels.
* default: false</Abstract>
			<DeclaredIn>HIStackLabels.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="117"/>
		</Token>
		
        
        
	</File>
</Tokens>