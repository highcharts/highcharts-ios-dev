<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HIChart.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HIChart</TokenIdentifier>
			<Abstract type="html">* description: Options regarding the chart area and plot area as well as general
chart options.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
            
			
			<NodeRef refid="23"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setShadow:</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the outer chart area. Requires
that backgroundColor be set. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/shadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the outer chart area. Requires
that backgroundColor be set. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/shadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the outer chart area. Requires
that backgroundColor be set. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPlotBackgroundColor:</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the plot area.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *plotBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/plotBackgroundColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/plotBackgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the plot area.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *plotBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/plotBackgroundColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/plotBackgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the plot area.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *plotBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/plotBackgroundColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPolar:</TokenIdentifier>
			<Abstract type="html">* description: When true, cartesian charts like line, spline, area and column are
transformed into the polar coordinate system. Requires highcharts-
more.js.
* default: false</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *polar</Declaration>
			
			
			<Anchor>//api/name/polar</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/polar</TokenIdentifier>
			<Abstract type="html">* description: When true, cartesian charts like line, spline, area and column are
transformed into the polar coordinate system. Requires highcharts-
more.js.
* default: false</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *polar</Declaration>
			
			
			<Anchor>//api/name/polar</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/polar</TokenIdentifier>
			<Abstract type="html">* description: When true, cartesian charts like line, spline, area and column are
transformed into the polar coordinate system. Requires highcharts-
more.js.
* default: false</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *polar</Declaration>
			
			
			<Anchor>//api/name/polar</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPanKey:</TokenIdentifier>
			<Abstract type="html">* description: Allows setting a key to switch between zooming and panning. Can be
one of alt, ctrl, meta (the command key on Mac and Windows
key on Windows) or shift. The keys are mapped directly to the key
properties of the click event argument (event.altKey, event.ctrlKey,
event.metaKey and event.shiftKey).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *panKey</Declaration>
			
			
			<Anchor>//api/name/panKey</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/panKey</TokenIdentifier>
			<Abstract type="html">* description: Allows setting a key to switch between zooming and panning. Can be
one of alt, ctrl, meta (the command key on Mac and Windows
key on Windows) or shift. The keys are mapped directly to the key
properties of the click event argument (event.altKey, event.ctrlKey,
event.metaKey and event.shiftKey).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *panKey</Declaration>
			
			
			<Anchor>//api/name/panKey</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/panKey</TokenIdentifier>
			<Abstract type="html">* description: Allows setting a key to switch between zooming and panning. Can be
one of alt, ctrl, meta (the command key on Mac and Windows
key on Windows) or shift. The keys are mapped directly to the key
properties of the click event argument (event.altKey, event.ctrlKey,
event.metaKey and event.shiftKey).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *panKey</Declaration>
			
			
			<Anchor>//api/name/panKey</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setEvents:</TokenIdentifier>
			<Abstract type="html">description: Event listeners for the chart.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIEvents *events</Declaration>
			
			
			<Anchor>//api/name/events</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/events</TokenIdentifier>
			<Abstract type="html">description: Event listeners for the chart.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIEvents *events</Declaration>
			
			
			<Anchor>//api/name/events</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/events</TokenIdentifier>
			<Abstract type="html">description: Event listeners for the chart.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIEvents *events</Declaration>
			
			
			<Anchor>//api/name/events</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPlotShadow:</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the plot area. Requires that
plotBackgroundColor be set. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id plotShadow</Declaration>
			
			
			<Anchor>//api/name/plotShadow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/plotShadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the plot area. Requires that
plotBackgroundColor be set. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id plotShadow</Declaration>
			
			
			<Anchor>//api/name/plotShadow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/plotShadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the plot area. Requires that
plotBackgroundColor be set. The shadow can be an object configuration
containing color, offsetX, offsetY, opacity and width.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id plotShadow</Declaration>
			
			
			<Anchor>//api/name/plotShadow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setIgnoreHiddenSeries:</TokenIdentifier>
			<Abstract type="html">* description: If true, the axes will scale to the remaining visible series once
one series is hidden. If false, hiding and showing a series will
not affect the axes or the other series. For stacks, once one series
within the stack is hidden, the rest of the stack will close in
around it even if the axis is not affected.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *ignoreHiddenSeries</Declaration>
			
			
			<Anchor>//api/name/ignoreHiddenSeries</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/ignoreHiddenSeries</TokenIdentifier>
			<Abstract type="html">* description: If true, the axes will scale to the remaining visible series once
one series is hidden. If false, hiding and showing a series will
not affect the axes or the other series. For stacks, once one series
within the stack is hidden, the rest of the stack will close in
around it even if the axis is not affected.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *ignoreHiddenSeries</Declaration>
			
			
			<Anchor>//api/name/ignoreHiddenSeries</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/ignoreHiddenSeries</TokenIdentifier>
			<Abstract type="html">* description: If true, the axes will scale to the remaining visible series once
one series is hidden. If false, hiding and showing a series will
not affect the axes or the other series. For stacks, once one series
within the stack is hidden, the rest of the stack will close in
around it even if the axis is not affected.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *ignoreHiddenSeries</Declaration>
			
			
			<Anchor>//api/name/ignoreHiddenSeries</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setOptions3d:</TokenIdentifier>
			<Abstract type="html">* description: Options to render charts in 3 dimensions. This feature requires
highcharts-3d.js, found in the download package or online at
http://code.highcharts.com/highcharts-
3d.js : code.highcharts.com/highcharts-3d.js.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIOptions3d *options3d</Declaration>
			
			
			<Anchor>//api/name/options3d</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/options3d</TokenIdentifier>
			<Abstract type="html">* description: Options to render charts in 3 dimensions. This feature requires
highcharts-3d.js, found in the download package or online at
http://code.highcharts.com/highcharts-
3d.js : code.highcharts.com/highcharts-3d.js.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIOptions3d *options3d</Declaration>
			
			
			<Anchor>//api/name/options3d</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/options3d</TokenIdentifier>
			<Abstract type="html">* description: Options to render charts in 3 dimensions. This feature requires
highcharts-3d.js, found in the download package or online at
http://code.highcharts.com/highcharts-
3d.js : code.highcharts.com/highcharts-3d.js.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIOptions3d *options3d</Declaration>
			
			
			<Anchor>//api/name/options3d</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setMarginBottom:</TokenIdentifier>
			<Abstract type="html">* description: The margin between the bottom outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingBottom.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginBottom</Declaration>
			
			
			<Anchor>//api/name/marginBottom</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/marginBottom</TokenIdentifier>
			<Abstract type="html">* description: The margin between the bottom outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingBottom.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginBottom</Declaration>
			
			
			<Anchor>//api/name/marginBottom</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/marginBottom</TokenIdentifier>
			<Abstract type="html">* description: The margin between the bottom outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingBottom.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginBottom</Declaration>
			
			
			<Anchor>//api/name/marginBottom</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setParallelAxes:</TokenIdentifier>
			<Abstract type="html">* description: Common options for all yAxes rendered in a parallel coordinates plot.
This feature requires modules/parallel-coordinates.js.
The default options are:</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIParallelAxes *parallelAxes</Declaration>
			
			
			<Anchor>//api/name/parallelAxes</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/parallelAxes</TokenIdentifier>
			<Abstract type="html">* description: Common options for all yAxes rendered in a parallel coordinates plot.
This feature requires modules/parallel-coordinates.js.
The default options are:</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIParallelAxes *parallelAxes</Declaration>
			
			
			<Anchor>//api/name/parallelAxes</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/parallelAxes</TokenIdentifier>
			<Abstract type="html">* description: Common options for all yAxes rendered in a parallel coordinates plot.
This feature requires modules/parallel-coordinates.js.
The default options are:</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIParallelAxes *parallelAxes</Declaration>
			
			
			<Anchor>//api/name/parallelAxes</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setSpacingTop:</TokenIdentifier>
			<Abstract type="html">* description: The space between the top edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top
position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingTop</Declaration>
			
			
			<Anchor>//api/name/spacingTop</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/spacingTop</TokenIdentifier>
			<Abstract type="html">* description: The space between the top edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top
position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingTop</Declaration>
			
			
			<Anchor>//api/name/spacingTop</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/spacingTop</TokenIdentifier>
			<Abstract type="html">* description: The space between the top edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top
position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingTop</Declaration>
			
			
			<Anchor>//api/name/spacingTop</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setDefaultSeriesType:</TokenIdentifier>
			<Abstract type="html">* description: Alias of type.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *defaultSeriesType</Declaration>
			
			
			<Anchor>//api/name/defaultSeriesType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/defaultSeriesType</TokenIdentifier>
			<Abstract type="html">* description: Alias of type.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *defaultSeriesType</Declaration>
			
			
			<Anchor>//api/name/defaultSeriesType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/defaultSeriesType</TokenIdentifier>
			<Abstract type="html">* description: Alias of type.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *defaultSeriesType</Declaration>
			
			
			<Anchor>//api/name/defaultSeriesType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setMarginTop:</TokenIdentifier>
			<Abstract type="html">* description: The margin between the top outer edge of the chart and the plot area.
Use this to set a fixed pixel value for the margin as opposed to
the default dynamic margin. See also spacingTop.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginTop</Declaration>
			
			
			<Anchor>//api/name/marginTop</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/marginTop</TokenIdentifier>
			<Abstract type="html">* description: The margin between the top outer edge of the chart and the plot area.
Use this to set a fixed pixel value for the margin as opposed to
the default dynamic margin. See also spacingTop.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginTop</Declaration>
			
			
			<Anchor>//api/name/marginTop</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/marginTop</TokenIdentifier>
			<Abstract type="html">* description: The margin between the top outer edge of the chart and the plot area.
Use this to set a fixed pixel value for the margin as opposed to
the default dynamic margin. See also spacingTop.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginTop</Declaration>
			
			
			<Anchor>//api/name/marginTop</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setResetZoomButton:</TokenIdentifier>
			<Abstract type="html">* description: The button that appears after a selection zoom, allowing the user
to reset zoom.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIResetZoomButton *resetZoomButton</Declaration>
			
			
			<Anchor>//api/name/resetZoomButton</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/resetZoomButton</TokenIdentifier>
			<Abstract type="html">* description: The button that appears after a selection zoom, allowing the user
to reset zoom.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIResetZoomButton *resetZoomButton</Declaration>
			
			
			<Anchor>//api/name/resetZoomButton</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/resetZoomButton</TokenIdentifier>
			<Abstract type="html">* description: The button that appears after a selection zoom, allowing the user
to reset zoom.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIResetZoomButton *resetZoomButton</Declaration>
			
			
			<Anchor>//api/name/resetZoomButton</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setRenderTo:</TokenIdentifier>
			<Abstract type="html">* description: The HTML element where the chart will be rendered. If it is a string,
the element by that id is used. The HTML element can also be passed
by direct reference, or as the first argument of the chart constructor,
in which case the option is not needed.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id renderTo</Declaration>
			
			
			<Anchor>//api/name/renderTo</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/renderTo</TokenIdentifier>
			<Abstract type="html">* description: The HTML element where the chart will be rendered. If it is a string,
the element by that id is used. The HTML element can also be passed
by direct reference, or as the first argument of the chart constructor,
in which case the option is not needed.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id renderTo</Declaration>
			
			
			<Anchor>//api/name/renderTo</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/renderTo</TokenIdentifier>
			<Abstract type="html">* description: The HTML element where the chart will be rendered. If it is a string,
the element by that id is used. The HTML element can also be passed
by direct reference, or as the first argument of the chart constructor,
in which case the option is not needed.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id renderTo</Declaration>
			
			
			<Anchor>//api/name/renderTo</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPlotBorderWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the plot area border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *plotBorderWidth</Declaration>
			
			
			<Anchor>//api/name/plotBorderWidth</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/plotBorderWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the plot area border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *plotBorderWidth</Declaration>
			
			
			<Anchor>//api/name/plotBorderWidth</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/plotBorderWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the plot area border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *plotBorderWidth</Declaration>
			
			
			<Anchor>//api/name/plotBorderWidth</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setShowAxes:</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the axes initially. This only applies to empty charts
where series are added dynamically, as axes are automatically added
to cartesian series.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showAxes</Declaration>
			
			
			<Anchor>//api/name/showAxes</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/showAxes</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the axes initially. This only applies to empty charts
where series are added dynamically, as axes are automatically added
to cartesian series.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showAxes</Declaration>
			
			
			<Anchor>//api/name/showAxes</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/showAxes</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the axes initially. This only applies to empty charts
where series are added dynamically, as axes are automatically added
to cartesian series.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showAxes</Declaration>
			
			
			<Anchor>//api/name/showAxes</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setDefinition:</TokenIdentifier>
			<Abstract type="html">* description: A text description of the chart.
If the Accessibility module is loaded, this is included by default
as a long description of the chart and its contents in the hidden
screen reader information region.
* default: undefined</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *definition</Declaration>
			
			
			<Anchor>//api/name/definition</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/definition</TokenIdentifier>
			<Abstract type="html">* description: A text description of the chart.
If the Accessibility module is loaded, this is included by default
as a long description of the chart and its contents in the hidden
screen reader information region.
* default: undefined</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *definition</Declaration>
			
			
			<Anchor>//api/name/definition</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/definition</TokenIdentifier>
			<Abstract type="html">* description: A text description of the chart.
If the Accessibility module is loaded, this is included by default
as a long description of the chart and its contents in the hidden
screen reader information region.
* default: undefined</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *definition</Declaration>
			
			
			<Anchor>//api/name/definition</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPinchType:</TokenIdentifier>
			<Abstract type="html">* description: Equivalent to zoomType, but for multitouch gestures
only. By default, the pinchType is the same as the zoomType setting.
However, pinching can be enabled separately in some cases, for example
in stock charts where a mouse drag pans the chart, while pinching
is enabled. When tooltip.followTouchMove
is true, pinchType only applies to two-finger touches.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *pinchType</Declaration>
			
			
			<Anchor>//api/name/pinchType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/pinchType</TokenIdentifier>
			<Abstract type="html">* description: Equivalent to zoomType, but for multitouch gestures
only. By default, the pinchType is the same as the zoomType setting.
However, pinching can be enabled separately in some cases, for example
in stock charts where a mouse drag pans the chart, while pinching
is enabled. When tooltip.followTouchMove
is true, pinchType only applies to two-finger touches.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *pinchType</Declaration>
			
			
			<Anchor>//api/name/pinchType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/pinchType</TokenIdentifier>
			<Abstract type="html">* description: Equivalent to zoomType, but for multitouch gestures
only. By default, the pinchType is the same as the zoomType setting.
However, pinching can be enabled separately in some cases, for example
in stock charts where a mouse drag pans the chart, while pinching
is enabled. When tooltip.followTouchMove
is true, pinchType only applies to two-finger touches.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *pinchType</Declaration>
			
			
			<Anchor>//api/name/pinchType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setMarginRight:</TokenIdentifier>
			<Abstract type="html">* description: The margin between the right outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingRight.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginRight</Declaration>
			
			
			<Anchor>//api/name/marginRight</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/marginRight</TokenIdentifier>
			<Abstract type="html">* description: The margin between the right outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingRight.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginRight</Declaration>
			
			
			<Anchor>//api/name/marginRight</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/marginRight</TokenIdentifier>
			<Abstract type="html">* description: The margin between the right outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingRight.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginRight</Declaration>
			
			
			<Anchor>//api/name/marginRight</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setMargin:</TokenIdentifier>
			<Abstract type="html">* description: The margin between the outer edge of the chart and the plot area.
The numbers in the array designate top, right, bottom and left
respectively. Use the options marginTop, marginRight,
marginBottom and marginLeft for shorthand setting of one option.
By default there is no margin. The actual space is dynamically calculated
from the offset of axis labels, axis title, title, subtitle and legend
in addition to the spacingTop, spacingRight, spacingBottom
and spacingLeft options.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/margin</TokenIdentifier>
			<Abstract type="html">* description: The margin between the outer edge of the chart and the plot area.
The numbers in the array designate top, right, bottom and left
respectively. Use the options marginTop, marginRight,
marginBottom and marginLeft for shorthand setting of one option.
By default there is no margin. The actual space is dynamically calculated
from the offset of axis labels, axis title, title, subtitle and legend
in addition to the spacingTop, spacingRight, spacingBottom
and spacingLeft options.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/margin</TokenIdentifier>
			<Abstract type="html">* description: The margin between the outer edge of the chart and the plot area.
The numbers in the array designate top, right, bottom and left
respectively. Use the options marginTop, marginRight,
marginBottom and marginLeft for shorthand setting of one option.
By default there is no margin. The actual space is dynamically calculated
from the offset of axis labels, axis title, title, subtitle and legend
in addition to the spacingTop, spacingRight, spacingBottom
and spacingLeft options.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setTypeDescription:</TokenIdentifier>
			<Abstract type="html">* description: A text description of the chart type.
If the Accessibility module is loaded, this will be included in the
description of the chart in the screen reader information region.
Highcharts will by default attempt to guess the chart type, but for
more complex charts it is recommended to specify this property for
clarity.
* default: undefined</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *typeDescription</Declaration>
			
			
			<Anchor>//api/name/typeDescription</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/typeDescription</TokenIdentifier>
			<Abstract type="html">* description: A text description of the chart type.
If the Accessibility module is loaded, this will be included in the
description of the chart in the screen reader information region.
Highcharts will by default attempt to guess the chart type, but for
more complex charts it is recommended to specify this property for
clarity.
* default: undefined</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *typeDescription</Declaration>
			
			
			<Anchor>//api/name/typeDescription</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/typeDescription</TokenIdentifier>
			<Abstract type="html">* description: A text description of the chart type.
If the Accessibility module is loaded, this will be included in the
description of the chart in the screen reader information region.
Highcharts will by default attempt to guess the chart type, but for
more complex charts it is recommended to specify this property for
clarity.
* default: undefined</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *typeDescription</Declaration>
			
			
			<Anchor>//api/name/typeDescription</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setType:</TokenIdentifier>
			<Abstract type="html">* description: The default series type for the chart. Can be any of the chart types
listed under plotOptions.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/type</TokenIdentifier>
			<Abstract type="html">* description: The default series type for the chart. Can be any of the chart types
listed under plotOptions.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/type</TokenIdentifier>
			<Abstract type="html">* description: The default series type for the chart. Can be any of the chart types
listed under plotOptions.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setSpacingRight:</TokenIdentifier>
			<Abstract type="html">* description: The space between the right edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top
position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingRight</Declaration>
			
			
			<Anchor>//api/name/spacingRight</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/spacingRight</TokenIdentifier>
			<Abstract type="html">* description: The space between the right edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top
position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingRight</Declaration>
			
			
			<Anchor>//api/name/spacingRight</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/spacingRight</TokenIdentifier>
			<Abstract type="html">* description: The space between the right edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top
position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingRight</Declaration>
			
			
			<Anchor>//api/name/spacingRight</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setClassName:</TokenIdentifier>
			<Abstract type="html">* description: A CSS class name to apply to the charts container div, allowing
unique CSS styling for each chart.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/className</TokenIdentifier>
			<Abstract type="html">* description: A CSS class name to apply to the charts container div, allowing
unique CSS styling for each chart.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/className</TokenIdentifier>
			<Abstract type="html">* description: A CSS class name to apply to the charts container div, allowing
unique CSS styling for each chart.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setStyle:</TokenIdentifier>
			<Abstract type="html">* description: Additional CSS styles to apply inline to the container div. Note
that since the default font styles are applied in the renderer, it
is ignorant of the individual chart options and must be set globally.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSDictionary *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/style</TokenIdentifier>
			<Abstract type="html">* description: Additional CSS styles to apply inline to the container div. Note
that since the default font styles are applied in the renderer, it
is ignorant of the individual chart options and must be set globally.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSDictionary *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/style</TokenIdentifier>
			<Abstract type="html">* description: Additional CSS styles to apply inline to the container div. Note
that since the default font styles are applied in the renderer, it
is ignorant of the individual chart options and must be set globally.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSDictionary *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setReflow:</TokenIdentifier>
			<Abstract type="html">* description: Whether to reflow the chart to fit the width of the container div
on resizing the window.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reflow</Declaration>
			
			
			<Anchor>//api/name/reflow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/reflow</TokenIdentifier>
			<Abstract type="html">* description: Whether to reflow the chart to fit the width of the container div
on resizing the window.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reflow</Declaration>
			
			
			<Anchor>//api/name/reflow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/reflow</TokenIdentifier>
			<Abstract type="html">* description: Whether to reflow the chart to fit the width of the container div
on resizing the window.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reflow</Declaration>
			
			
			<Anchor>//api/name/reflow</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setAnimation:</TokenIdentifier>
			<Abstract type="html">* description: Set the overall animation for all chart updating. Animation can be
disabled throughout the chart by setting it to false here. It can
be overridden for each individual API method as a function parameter.
The only animation not affected by this option is the initial series
animation, see plotOptions.series.animation.
The animation can either be set as a boolean or a configuration
object. If true, it will use the &apos;swing&apos; jQuery easing and a
duration of 500 ms. If used as a configuration object, the following
properties are supported:</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id animation</Declaration>
			
			
			<Anchor>//api/name/animation</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/animation</TokenIdentifier>
			<Abstract type="html">* description: Set the overall animation for all chart updating. Animation can be
disabled throughout the chart by setting it to false here. It can
be overridden for each individual API method as a function parameter.
The only animation not affected by this option is the initial series
animation, see plotOptions.series.animation.
The animation can either be set as a boolean or a configuration
object. If true, it will use the &apos;swing&apos; jQuery easing and a
duration of 500 ms. If used as a configuration object, the following
properties are supported:</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id animation</Declaration>
			
			
			<Anchor>//api/name/animation</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/animation</TokenIdentifier>
			<Abstract type="html">* description: Set the overall animation for all chart updating. Animation can be
disabled throughout the chart by setting it to false here. It can
be overridden for each individual API method as a function parameter.
The only animation not affected by this option is the initial series
animation, see plotOptions.series.animation.
The animation can either be set as a boolean or a configuration
object. If true, it will use the &apos;swing&apos; jQuery easing and a
duration of 500 ms. If used as a configuration object, the following
properties are supported:</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id animation</Declaration>
			
			
			<Anchor>//api/name/animation</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setWidth:</TokenIdentifier>
			<Abstract type="html">* description: An explicit width for the chart. By default (when null) the width
is calculated from the offset width of the containing element.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/width</TokenIdentifier>
			<Abstract type="html">* description: An explicit width for the chart. By default (when null) the width
is calculated from the offset width of the containing element.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/width</TokenIdentifier>
			<Abstract type="html">* description: An explicit width for the chart. By default (when null) the width
is calculated from the offset width of the containing element.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setBackgroundColor:</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the outer chart area.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the outer chart area.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color or gradient for the outer chart area.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setInverted:</TokenIdentifier>
			<Abstract type="html">* description: Whether to invert the axes so that the x axis is vertical and y axis
is horizontal. When true, the x axis is reversed
by default.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *inverted</Declaration>
			
			
			<Anchor>//api/name/inverted</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/inverted</TokenIdentifier>
			<Abstract type="html">* description: Whether to invert the axes so that the x axis is vertical and y axis
is horizontal. When true, the x axis is reversed
by default.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *inverted</Declaration>
			
			
			<Anchor>//api/name/inverted</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/inverted</TokenIdentifier>
			<Abstract type="html">* description: Whether to invert the axes so that the x axis is vertical and y axis
is horizontal. When true, the x axis is reversed
by default.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *inverted</Declaration>
			
			
			<Anchor>//api/name/inverted</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPlotBackgroundImage:</TokenIdentifier>
			<Abstract type="html">* description: The URL for an image to use as the plot background. To set an image
as the background for the entire chart, set a CSS background image
to the container element. Note that for the image to be applied to
exported charts, its URL needs to be accessible by the export server.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *plotBackgroundImage</Declaration>
			
			
			<Anchor>//api/name/plotBackgroundImage</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/plotBackgroundImage</TokenIdentifier>
			<Abstract type="html">* description: The URL for an image to use as the plot background. To set an image
as the background for the entire chart, set a CSS background image
to the container element. Note that for the image to be applied to
exported charts, its URL needs to be accessible by the export server.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *plotBackgroundImage</Declaration>
			
			
			<Anchor>//api/name/plotBackgroundImage</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/plotBackgroundImage</TokenIdentifier>
			<Abstract type="html">* description: The URL for an image to use as the plot background. To set an image
as the background for the entire chart, set a CSS background image
to the container element. Note that for the image to be applied to
exported charts, its URL needs to be accessible by the export server.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *plotBackgroundImage</Declaration>
			
			
			<Anchor>//api/name/plotBackgroundImage</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setBorderRadius:</TokenIdentifier>
			<Abstract type="html">* description: The corner radius of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The corner radius of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The corner radius of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setSpacingBottom:</TokenIdentifier>
			<Abstract type="html">* description: The space between the bottom edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingBottom</Declaration>
			
			
			<Anchor>//api/name/spacingBottom</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/spacingBottom</TokenIdentifier>
			<Abstract type="html">* description: The space between the bottom edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingBottom</Declaration>
			
			
			<Anchor>//api/name/spacingBottom</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/spacingBottom</TokenIdentifier>
			<Abstract type="html">* description: The space between the bottom edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingBottom</Declaration>
			
			
			<Anchor>//api/name/spacingBottom</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setParallelCoordinates:</TokenIdentifier>
			<Abstract type="html">* description: Flag to render charts as a parallel coordinates plot. In a parallel
coordinates plot (||-coords) by default all required yAxes are generated
and the legend is disabled. This feature requires
modules/parallel-coordinates.js.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *parallelCoordinates</Declaration>
			
			
			<Anchor>//api/name/parallelCoordinates</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/parallelCoordinates</TokenIdentifier>
			<Abstract type="html">* description: Flag to render charts as a parallel coordinates plot. In a parallel
coordinates plot (||-coords) by default all required yAxes are generated
and the legend is disabled. This feature requires
modules/parallel-coordinates.js.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *parallelCoordinates</Declaration>
			
			
			<Anchor>//api/name/parallelCoordinates</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/parallelCoordinates</TokenIdentifier>
			<Abstract type="html">* description: Flag to render charts as a parallel coordinates plot. In a parallel
coordinates plot (||-coords) by default all required yAxes are generated
and the legend is disabled. This feature requires
modules/parallel-coordinates.js.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *parallelCoordinates</Declaration>
			
			
			<Anchor>//api/name/parallelCoordinates</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setSelectionMarkerFill:</TokenIdentifier>
			<Abstract type="html">* description: The background color of the marker square when selecting (zooming
in on) an area of the chart.
* default: rgba(51,92,173,0.25)</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *selectionMarkerFill</Declaration>
			
			
			<Anchor>//api/name/selectionMarkerFill</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/selectionMarkerFill</TokenIdentifier>
			<Abstract type="html">* description: The background color of the marker square when selecting (zooming
in on) an area of the chart.
* default: rgba(51,92,173,0.25)</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *selectionMarkerFill</Declaration>
			
			
			<Anchor>//api/name/selectionMarkerFill</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/selectionMarkerFill</TokenIdentifier>
			<Abstract type="html">* description: The background color of the marker square when selecting (zooming
in on) an area of the chart.
* default: rgba(51,92,173,0.25)</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *selectionMarkerFill</Declaration>
			
			
			<Anchor>//api/name/selectionMarkerFill</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setBorderWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setSpacing:</TokenIdentifier>
			<Abstract type="html">* description: The distance between the outer edge of the chart and the content,
like title or legend, or axis title and labels if present. The
numbers in the array designate top, right, bottom and left respectively.
Use the options spacingTop, spacingRight, spacingBottom and spacingLeft
options for shorthand setting of one option.
* default: [10, 10, 15, 10]</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSNumber*&gt; *spacing</Declaration>
			
			
			<Anchor>//api/name/spacing</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/spacing</TokenIdentifier>
			<Abstract type="html">* description: The distance between the outer edge of the chart and the content,
like title or legend, or axis title and labels if present. The
numbers in the array designate top, right, bottom and left respectively.
Use the options spacingTop, spacingRight, spacingBottom and spacingLeft
options for shorthand setting of one option.
* default: [10, 10, 15, 10]</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSNumber*&gt; *spacing</Declaration>
			
			
			<Anchor>//api/name/spacing</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/spacing</TokenIdentifier>
			<Abstract type="html">* description: The distance between the outer edge of the chart and the content,
like title or legend, or axis title and labels if present. The
numbers in the array designate top, right, bottom and left respectively.
Use the options spacingTop, spacingRight, spacingBottom and spacingLeft
options for shorthand setting of one option.
* default: [10, 10, 15, 10]</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSNumber*&gt; *spacing</Declaration>
			
			
			<Anchor>//api/name/spacing</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPlotBorderColor:</TokenIdentifier>
			<Abstract type="html">* description: The color of the inner chart or plot area border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *plotBorderColor</Declaration>
			
			
			<Anchor>//api/name/plotBorderColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/plotBorderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the inner chart or plot area border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *plotBorderColor</Declaration>
			
			
			<Anchor>//api/name/plotBorderColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/plotBorderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the inner chart or plot area border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *plotBorderColor</Declaration>
			
			
			<Anchor>//api/name/plotBorderColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setPanning:</TokenIdentifier>
			<Abstract type="html">* description: Allow panning in a chart. Best used with panKey
to combine zooming and panning.
On touch devices, when the tooltip.followTouchMove
option is true (default), panning requires two fingers. To allow
panning with one finger, set followTouchMove to false.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *panning</Declaration>
			
			
			<Anchor>//api/name/panning</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/panning</TokenIdentifier>
			<Abstract type="html">* description: Allow panning in a chart. Best used with panKey
to combine zooming and panning.
On touch devices, when the tooltip.followTouchMove
option is true (default), panning requires two fingers. To allow
panning with one finger, set followTouchMove to false.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *panning</Declaration>
			
			
			<Anchor>//api/name/panning</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/panning</TokenIdentifier>
			<Abstract type="html">* description: Allow panning in a chart. Best used with panKey
to combine zooming and panning.
On touch devices, when the tooltip.followTouchMove
option is true (default), panning requires two fingers. To allow
panning with one finger, set followTouchMove to false.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *panning</Declaration>
			
			
			<Anchor>//api/name/panning</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setZoomType:</TokenIdentifier>
			<Abstract type="html">* description: Decides in what dimensions the user can zoom by dragging the mouse.
Can be one of x, y or xy.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *zoomType</Declaration>
			
			
			<Anchor>//api/name/zoomType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/zoomType</TokenIdentifier>
			<Abstract type="html">* description: Decides in what dimensions the user can zoom by dragging the mouse.
Can be one of x, y or xy.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *zoomType</Declaration>
			
			
			<Anchor>//api/name/zoomType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/zoomType</TokenIdentifier>
			<Abstract type="html">* description: Decides in what dimensions the user can zoom by dragging the mouse.
Can be one of x, y or xy.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *zoomType</Declaration>
			
			
			<Anchor>//api/name/zoomType</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setColorCount:</TokenIdentifier>
			<Abstract type="html">* description: In styled mode, this sets how many colors the class names
should rotate between. With ten colors, series (or points) are
given class names like highcharts-color-0, highcharts-color-
0 [...] highcharts-color-9. The equivalent in non-styled mode
is to set colors using the colors setting.
* default: 10</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *colorCount</Declaration>
			
			
			<Anchor>//api/name/colorCount</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/colorCount</TokenIdentifier>
			<Abstract type="html">* description: In styled mode, this sets how many colors the class names
should rotate between. With ten colors, series (or points) are
given class names like highcharts-color-0, highcharts-color-
0 [...] highcharts-color-9. The equivalent in non-styled mode
is to set colors using the colors setting.
* default: 10</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *colorCount</Declaration>
			
			
			<Anchor>//api/name/colorCount</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/colorCount</TokenIdentifier>
			<Abstract type="html">* description: In styled mode, this sets how many colors the class names
should rotate between. With ten colors, series (or points) are
given class names like highcharts-color-0, highcharts-color-
0 [...] highcharts-color-9. The equivalent in non-styled mode
is to set colors using the colors setting.
* default: 10</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *colorCount</Declaration>
			
			
			<Anchor>//api/name/colorCount</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setBorderColor:</TokenIdentifier>
			<Abstract type="html">* description: The color of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the outer chart border.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setAlignTicks:</TokenIdentifier>
			<Abstract type="html">* description: When using multiple axis, the ticks of two or more opposite axes
will automatically be aligned by adding ticks to the axis or axes
with the least ticks, as if tickAmount were specified.
This can be prevented by setting alignTicks to false. If the grid
lines look messy, it&apos;s a good idea to hide them for the secondary
axis by setting gridLineWidth to 0.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *alignTicks</Declaration>
			
			
			<Anchor>//api/name/alignTicks</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/alignTicks</TokenIdentifier>
			<Abstract type="html">* description: When using multiple axis, the ticks of two or more opposite axes
will automatically be aligned by adding ticks to the axis or axes
with the least ticks, as if tickAmount were specified.
This can be prevented by setting alignTicks to false. If the grid
lines look messy, it&apos;s a good idea to hide them for the secondary
axis by setting gridLineWidth to 0.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *alignTicks</Declaration>
			
			
			<Anchor>//api/name/alignTicks</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/alignTicks</TokenIdentifier>
			<Abstract type="html">* description: When using multiple axis, the ticks of two or more opposite axes
will automatically be aligned by adding ticks to the axis or axes
with the least ticks, as if tickAmount were specified.
This can be prevented by setting alignTicks to false. If the grid
lines look messy, it&apos;s a good idea to hide them for the secondary
axis by setting gridLineWidth to 0.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *alignTicks</Declaration>
			
			
			<Anchor>//api/name/alignTicks</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setHeight:</TokenIdentifier>
			<Abstract type="html">* description: An explicit height for the chart. If a number, the height is
given in pixels. If given a percentage string (for example &apos;56%&apos;),
the height is given as the percentage of the actual chart width.
This allows for preserving the aspect ratio across responsive
sizes.
By default (when null) the height is calculated from the offset
height of the containing element, or 400 pixels if the containing
element&apos;s height is 0.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/height</TokenIdentifier>
			<Abstract type="html">* description: An explicit height for the chart. If a number, the height is
given in pixels. If given a percentage string (for example &apos;56%&apos;),
the height is given as the percentage of the actual chart width.
This allows for preserving the aspect ratio across responsive
sizes.
By default (when null) the height is calculated from the offset
height of the containing element, or 400 pixels if the containing
element&apos;s height is 0.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/height</TokenIdentifier>
			<Abstract type="html">* description: An explicit height for the chart. If a number, the height is
given in pixels. If given a percentage string (for example &apos;56%&apos;),
the height is given as the percentage of the actual chart width.
This allows for preserving the aspect ratio across responsive
sizes.
By default (when null) the height is calculated from the offset
height of the containing element, or 400 pixels if the containing
element&apos;s height is 0.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setMarginLeft:</TokenIdentifier>
			<Abstract type="html">* description: The margin between the left outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingLeft.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginLeft</Declaration>
			
			
			<Anchor>//api/name/marginLeft</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/marginLeft</TokenIdentifier>
			<Abstract type="html">* description: The margin between the left outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingLeft.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginLeft</Declaration>
			
			
			<Anchor>//api/name/marginLeft</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/marginLeft</TokenIdentifier>
			<Abstract type="html">* description: The margin between the left outer edge of the chart and the plot
area. Use this to set a fixed pixel value for the margin as opposed
to the default dynamic margin. See also spacingLeft.</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *marginLeft</Declaration>
			
			
			<Anchor>//api/name/marginLeft</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/setSpacingLeft:</TokenIdentifier>
			<Abstract type="html">* description: The space between the left edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingLeft</Declaration>
			
			
			<Anchor>//api/name/spacingLeft</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIChart/spacingLeft</TokenIdentifier>
			<Abstract type="html">* description: The space between the left edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingLeft</Declaration>
			
			
			<Anchor>//api/name/spacingLeft</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIChart/spacingLeft</TokenIdentifier>
			<Abstract type="html">* description: The space between the left edge of the chart and the content (plot
area, axis title and labels, title, subtitle or legend in top position).</Abstract>
			<DeclaredIn>HIChart.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *spacingLeft</Declaration>
			
			
			<Anchor>//api/name/spacingLeft</Anchor>
            <NodeRef refid="23"/>
		</Token>
		
        
        
	</File>
</Tokens>