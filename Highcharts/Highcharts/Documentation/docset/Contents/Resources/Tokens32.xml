<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HIContextButton.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HIContextButton</TokenIdentifier>
			<Abstract type="html">* description: Options for the export button.
In styled mode, export button styles can be applied with the
.highcharts-contextbutton class.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
            
			
			<NodeRef refid="32"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setSymbolStrokeWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel stroke width of the symbol on the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolStrokeWidth</Declaration>
			
			
			<Anchor>//api/name/symbolStrokeWidth</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/symbolStrokeWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel stroke width of the symbol on the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolStrokeWidth</Declaration>
			
			
			<Anchor>//api/name/symbolStrokeWidth</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/symbolStrokeWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel stroke width of the symbol on the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolStrokeWidth</Declaration>
			
			
			<Anchor>//api/name/symbolStrokeWidth</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setVerticalAlign:</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the buttons. Can be one of &quot;top&quot;, &quot;middle&quot;
or &quot;bottom&quot;.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the buttons. Can be one of &quot;top&quot;, &quot;middle&quot;
or &quot;bottom&quot;.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the buttons. Can be one of &quot;top&quot;, &quot;middle&quot;
or &quot;bottom&quot;.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setAlign:</TokenIdentifier>
			<Abstract type="html">* description: Alignment for the buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/align</TokenIdentifier>
			<Abstract type="html">* description: Alignment for the buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/align</TokenIdentifier>
			<Abstract type="html">* description: Alignment for the buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setSymbolSize:</TokenIdentifier>
			<Abstract type="html">* description: The pixel size of the symbol on the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolSize</Declaration>
			
			
			<Anchor>//api/name/symbolSize</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/symbolSize</TokenIdentifier>
			<Abstract type="html">* description: The pixel size of the symbol on the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolSize</Declaration>
			
			
			<Anchor>//api/name/symbolSize</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/symbolSize</TokenIdentifier>
			<Abstract type="html">* description: The pixel size of the symbol on the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolSize</Declaration>
			
			
			<Anchor>//api/name/symbolSize</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/width</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/width</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setButtonSpacing:</TokenIdentifier>
			<Abstract type="html">description: The pixel spacing between buttons.
default: 3</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *buttonSpacing</Declaration>
			
			
			<Anchor>//api/name/buttonSpacing</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/buttonSpacing</TokenIdentifier>
			<Abstract type="html">description: The pixel spacing between buttons.
default: 3</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *buttonSpacing</Declaration>
			
			
			<Anchor>//api/name/buttonSpacing</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/buttonSpacing</TokenIdentifier>
			<Abstract type="html">description: The pixel spacing between buttons.
default: 3</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *buttonSpacing</Declaration>
			
			
			<Anchor>//api/name/buttonSpacing</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setClassName:</TokenIdentifier>
			<Abstract type="html">description: The class name of the context button.
default: highcharts-contextbutton</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/className</TokenIdentifier>
			<Abstract type="html">description: The class name of the context button.
default: highcharts-contextbutton</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/className</TokenIdentifier>
			<Abstract type="html">description: The class name of the context button.
default: highcharts-contextbutton</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setY:</TokenIdentifier>
			<Abstract type="html">* description: The vertical offset of the button&apos;s position relative to its
verticalAlign.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/y</TokenIdentifier>
			<Abstract type="html">* description: The vertical offset of the button&apos;s position relative to its
verticalAlign.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/y</TokenIdentifier>
			<Abstract type="html">* description: The vertical offset of the button&apos;s position relative to its
verticalAlign.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setX:</TokenIdentifier>
			<Abstract type="html">* description: The horizontal position of the button relative to the align
option.
* default: -10</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/x</TokenIdentifier>
			<Abstract type="html">* description: The horizontal position of the button relative to the align
option.
* default: -10</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/x</TokenIdentifier>
			<Abstract type="html">* description: The horizontal position of the button relative to the align
option.
* default: -10</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setSymbol:</TokenIdentifier>
			<Abstract type="html">* description: The symbol for the button. Points to a definition function in
the Highcharts.Renderer.symbols collection. The default exportIcon
function is part of the exporting module.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *symbol</Declaration>
			
			
			<Anchor>//api/name/symbol</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/symbol</TokenIdentifier>
			<Abstract type="html">* description: The symbol for the button. Points to a definition function in
the Highcharts.Renderer.symbols collection. The default exportIcon
function is part of the exporting module.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *symbol</Declaration>
			
			
			<Anchor>//api/name/symbol</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/symbol</TokenIdentifier>
			<Abstract type="html">* description: The symbol for the button. Points to a definition function in
the Highcharts.Renderer.symbols collection. The default exportIcon
function is part of the exporting module.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *symbol</Declaration>
			
			
			<Anchor>//api/name/symbol</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setEnabled:</TokenIdentifier>
			<Abstract type="html">* description: Whether to enable buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/enabled</TokenIdentifier>
			<Abstract type="html">* description: Whether to enable buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/enabled</TokenIdentifier>
			<Abstract type="html">* description: Whether to enable buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setOnclick:</TokenIdentifier>
			<Abstract type="html">* description: A click handler callback to use on the button directly instead of
the popup menu.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *onclick</Declaration>
			
			
			<Anchor>//api/name/onclick</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/onclick</TokenIdentifier>
			<Abstract type="html">* description: A click handler callback to use on the button directly instead of
the popup menu.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *onclick</Declaration>
			
			
			<Anchor>//api/name/onclick</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/onclick</TokenIdentifier>
			<Abstract type="html">* description: A click handler callback to use on the button directly instead of
the popup menu.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *onclick</Declaration>
			
			
			<Anchor>//api/name/onclick</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setSymbolFill:</TokenIdentifier>
			<Abstract type="html">* description: See navigation.buttonOptions.symbolFill.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *symbolFill</Declaration>
			
			
			<Anchor>//api/name/symbolFill</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/symbolFill</TokenIdentifier>
			<Abstract type="html">* description: See navigation.buttonOptions.symbolFill.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *symbolFill</Declaration>
			
			
			<Anchor>//api/name/symbolFill</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/symbolFill</TokenIdentifier>
			<Abstract type="html">* description: See navigation.buttonOptions.symbolFill.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *symbolFill</Declaration>
			
			
			<Anchor>//api/name/symbolFill</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setSymbolY:</TokenIdentifier>
			<Abstract type="html">* description: The y position of the center of the symbol inside the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolY</Declaration>
			
			
			<Anchor>//api/name/symbolY</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/symbolY</TokenIdentifier>
			<Abstract type="html">* description: The y position of the center of the symbol inside the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolY</Declaration>
			
			
			<Anchor>//api/name/symbolY</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/symbolY</TokenIdentifier>
			<Abstract type="html">* description: The y position of the center of the symbol inside the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolY</Declaration>
			
			
			<Anchor>//api/name/symbolY</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setSymbolStroke:</TokenIdentifier>
			<Abstract type="html">* description: The color of the symbol&apos;s stroke or line.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *symbolStroke</Declaration>
			
			
			<Anchor>//api/name/symbolStroke</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/symbolStroke</TokenIdentifier>
			<Abstract type="html">* description: The color of the symbol&apos;s stroke or line.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *symbolStroke</Declaration>
			
			
			<Anchor>//api/name/symbolStroke</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/symbolStroke</TokenIdentifier>
			<Abstract type="html">* description: The color of the symbol&apos;s stroke or line.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *symbolStroke</Declaration>
			
			
			<Anchor>//api/name/symbolStroke</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setHeight:</TokenIdentifier>
			<Abstract type="html">* description: Pixel height of the buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/height</TokenIdentifier>
			<Abstract type="html">* description: Pixel height of the buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/height</TokenIdentifier>
			<Abstract type="html">* description: Pixel height of the buttons.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *height</Declaration>
			
			
			<Anchor>//api/name/height</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setText:</TokenIdentifier>
			<Abstract type="html">* description: A text string to add to the individual button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/text</TokenIdentifier>
			<Abstract type="html">* description: A text string to add to the individual button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/text</TokenIdentifier>
			<Abstract type="html">* description: A text string to add to the individual button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *text</Declaration>
			
			
			<Anchor>//api/name/text</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setMenuClassName:</TokenIdentifier>
			<Abstract type="html">description: The class name of the menu appearing from the button.
default: highcharts-contextmenu</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *menuClassName</Declaration>
			
			
			<Anchor>//api/name/menuClassName</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/menuClassName</TokenIdentifier>
			<Abstract type="html">description: The class name of the menu appearing from the button.
default: highcharts-contextmenu</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *menuClassName</Declaration>
			
			
			<Anchor>//api/name/menuClassName</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/menuClassName</TokenIdentifier>
			<Abstract type="html">description: The class name of the menu appearing from the button.
default: highcharts-contextmenu</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *menuClassName</Declaration>
			
			
			<Anchor>//api/name/menuClassName</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/set_titleKey:</TokenIdentifier>
			<Abstract type="html">* description: The key to a lang option setting that is used for the
buttons title tooltip. When the key iscontextButtonTitle`, it
refers to lang.contextButtonTitle
that defaults to &quot;Chart context menu&quot;.
* default: contextButtonTitle</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *_titleKey</Declaration>
			
			
			<Anchor>//api/name/_titleKey</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/_titleKey</TokenIdentifier>
			<Abstract type="html">* description: The key to a lang option setting that is used for the
buttons title tooltip. When the key iscontextButtonTitle`, it
refers to lang.contextButtonTitle
that defaults to &quot;Chart context menu&quot;.
* default: contextButtonTitle</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *_titleKey</Declaration>
			
			
			<Anchor>//api/name/_titleKey</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/_titleKey</TokenIdentifier>
			<Abstract type="html">* description: The key to a lang option setting that is used for the
buttons title tooltip. When the key iscontextButtonTitle`, it
refers to lang.contextButtonTitle
that defaults to &quot;Chart context menu&quot;.
* default: contextButtonTitle</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *_titleKey</Declaration>
			
			
			<Anchor>//api/name/_titleKey</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setSymbolX:</TokenIdentifier>
			<Abstract type="html">* description: The x position of the center of the symbol inside the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolX</Declaration>
			
			
			<Anchor>//api/name/symbolX</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/symbolX</TokenIdentifier>
			<Abstract type="html">* description: The x position of the center of the symbol inside the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolX</Declaration>
			
			
			<Anchor>//api/name/symbolX</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/symbolX</TokenIdentifier>
			<Abstract type="html">* description: The x position of the center of the symbol inside the button.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolX</Declaration>
			
			
			<Anchor>//api/name/symbolX</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setTheme:</TokenIdentifier>
			<Abstract type="html">* description: A configuration object for the button theme. The object accepts
SVG properties like strokewidth, stroke and fill. Tri-state
button styles are supported by the states.hover and states.select
objects.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITheme *theme</Declaration>
			
			
			<Anchor>//api/name/theme</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/theme</TokenIdentifier>
			<Abstract type="html">* description: A configuration object for the button theme. The object accepts
SVG properties like strokewidth, stroke and fill. Tri-state
button styles are supported by the states.hover and states.select
objects.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITheme *theme</Declaration>
			
			
			<Anchor>//api/name/theme</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/theme</TokenIdentifier>
			<Abstract type="html">* description: A configuration object for the button theme. The object accepts
SVG properties like strokewidth, stroke and fill. Tri-state
button styles are supported by the states.hover and states.select
objects.</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITheme *theme</Declaration>
			
			
			<Anchor>//api/name/theme</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/setMenuItems:</TokenIdentifier>
			<Abstract type="html">* description: A collection of strings pointing to config options for the menu
items. The config options are defined in the
menuItemDefinitions option.
By default, there is the &quot;Print&quot; menu item plus one menu item
for each of the available export types.
Defaults to</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *menuItems</Declaration>
			
			
			<Anchor>//api/name/menuItems</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIContextButton/menuItems</TokenIdentifier>
			<Abstract type="html">* description: A collection of strings pointing to config options for the menu
items. The config options are defined in the
menuItemDefinitions option.
By default, there is the &quot;Print&quot; menu item plus one menu item
for each of the available export types.
Defaults to</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *menuItems</Declaration>
			
			
			<Anchor>//api/name/menuItems</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIContextButton/menuItems</TokenIdentifier>
			<Abstract type="html">* description: A collection of strings pointing to config options for the menu
items. The config options are defined in the
menuItemDefinitions option.
By default, there is the &quot;Print&quot; menu item plus one menu item
for each of the available export types.
Defaults to</Abstract>
			<DeclaredIn>HIContextButton.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *menuItems</Declaration>
			
			
			<Anchor>//api/name/menuItems</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
        
        
	</File>
</Tokens>