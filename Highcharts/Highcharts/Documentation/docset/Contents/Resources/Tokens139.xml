<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HIZAxis.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HIZAxis</TokenIdentifier>
			<Abstract type="html">* description: The Z axis or depth axis for 3D plots.
See the Axis object for programmatic access to the axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
            
			
			<NodeRef refid="139"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorTickInterval:</TokenIdentifier>
			<Abstract type="html">* description: Specific tick interval in axis units for the minor ticks. On a linear axis,
if &quot;auto&quot;, the minor tick interval is calculated as a fifth of
the tickInterval. If null, minor ticks are not shown.
On logarithmic axes, the unit is the power of the value. For example,
setting the minorTickInterval to 1 puts one tick on each of 0.1,
1, 10, 100 etc. Setting the minorTickInterval to 0.1 produces 9
ticks between 1 and 10, 10 and 100 etc.
If user settings dictate minor ticks to become too dense, they don&apos;t
make sense, and will be ignored to prevent performance problems.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickInterval</Declaration>
			
			
			<Anchor>//api/name/minorTickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorTickInterval</TokenIdentifier>
			<Abstract type="html">* description: Specific tick interval in axis units for the minor ticks. On a linear axis,
if &quot;auto&quot;, the minor tick interval is calculated as a fifth of
the tickInterval. If null, minor ticks are not shown.
On logarithmic axes, the unit is the power of the value. For example,
setting the minorTickInterval to 1 puts one tick on each of 0.1,
1, 10, 100 etc. Setting the minorTickInterval to 0.1 produces 9
ticks between 1 and 10, 10 and 100 etc.
If user settings dictate minor ticks to become too dense, they don&apos;t
make sense, and will be ignored to prevent performance problems.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickInterval</Declaration>
			
			
			<Anchor>//api/name/minorTickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorTickInterval</TokenIdentifier>
			<Abstract type="html">* description: Specific tick interval in axis units for the minor ticks. On a linear axis,
if &quot;auto&quot;, the minor tick interval is calculated as a fifth of
the tickInterval. If null, minor ticks are not shown.
On logarithmic axes, the unit is the power of the value. For example,
setting the minorTickInterval to 1 puts one tick on each of 0.1,
1, 10, 100 etc. Setting the minorTickInterval to 0.1 produces 9
ticks between 1 and 10, 10 and 100 etc.
If user settings dictate minor ticks to become too dense, they don&apos;t
make sense, and will be ignored to prevent performance problems.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickInterval</Declaration>
			
			
			<Anchor>//api/name/minorTickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickPositioner:</TokenIdentifier>
			<Abstract type="html">* description: A callback function returning array defining where the ticks are
laid out on the axis. This overrides the default behaviour of tickPixelInterval and tickInterval. The automatic
tick positions are accessible through this.tickPositions and can
be modified by the callback.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *tickPositioner</Declaration>
			
			
			<Anchor>//api/name/tickPositioner</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickPositioner</TokenIdentifier>
			<Abstract type="html">* description: A callback function returning array defining where the ticks are
laid out on the axis. This overrides the default behaviour of tickPixelInterval and tickInterval. The automatic
tick positions are accessible through this.tickPositions and can
be modified by the callback.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *tickPositioner</Declaration>
			
			
			<Anchor>//api/name/tickPositioner</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickPositioner</TokenIdentifier>
			<Abstract type="html">* description: A callback function returning array defining where the ticks are
laid out on the axis. This overrides the default behaviour of tickPixelInterval and tickInterval. The automatic
tick positions are accessible through this.tickPositions and can
be modified by the callback.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *tickPositioner</Declaration>
			
			
			<Anchor>//api/name/tickPositioner</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setFloor:</TokenIdentifier>
			<Abstract type="html">* description: The lowest allowed value for automatically computed axis extremes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *floor</Declaration>
			
			
			<Anchor>//api/name/floor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/floor</TokenIdentifier>
			<Abstract type="html">* description: The lowest allowed value for automatically computed axis extremes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *floor</Declaration>
			
			
			<Anchor>//api/name/floor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/floor</TokenIdentifier>
			<Abstract type="html">* description: The lowest allowed value for automatically computed axis extremes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *floor</Declaration>
			
			
			<Anchor>//api/name/floor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setGridLineDashStyle:</TokenIdentifier>
			<Abstract type="html">* description: The dash or dot style of the grid lines. For possible values, see
http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-
dashstyle-all/ : this demonstration.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *gridLineDashStyle</Declaration>
			
			
			<Anchor>//api/name/gridLineDashStyle</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/gridLineDashStyle</TokenIdentifier>
			<Abstract type="html">* description: The dash or dot style of the grid lines. For possible values, see
http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-
dashstyle-all/ : this demonstration.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *gridLineDashStyle</Declaration>
			
			
			<Anchor>//api/name/gridLineDashStyle</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/gridLineDashStyle</TokenIdentifier>
			<Abstract type="html">* description: The dash or dot style of the grid lines. For possible values, see
http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-
dashstyle-all/ : this demonstration.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *gridLineDashStyle</Declaration>
			
			
			<Anchor>//api/name/gridLineDashStyle</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setGridZIndex:</TokenIdentifier>
			<Abstract type="html">* description: The Z index of the grid lines.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *gridZIndex</Declaration>
			
			
			<Anchor>//api/name/gridZIndex</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/gridZIndex</TokenIdentifier>
			<Abstract type="html">* description: The Z index of the grid lines.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *gridZIndex</Declaration>
			
			
			<Anchor>//api/name/gridZIndex</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/gridZIndex</TokenIdentifier>
			<Abstract type="html">* description: The Z index of the grid lines.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *gridZIndex</Declaration>
			
			
			<Anchor>//api/name/gridZIndex</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setUnits:</TokenIdentifier>
			<Abstract type="html">* description: Datetime axis only. An array determining what time intervals the
ticks are allowed to fall on. Each array item is an array where the
first value is the time unit and the second value another array of
allowed multiples. Defaults to:
units: [[
    &apos;millisecond&apos;, // unit name
    [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples
], [
    &apos;second&apos;,
    [1, 2, 5, 10, 15, 30]
], [
    &apos;minute&apos;,
    [1, 2, 5, 10, 15, 30]
], [
    &apos;hour&apos;,
    [1, 2, 3, 4, 6, 8, 12]
], [
    &apos;day&apos;,
    [1]
], [
    &apos;week&apos;,
    [1]
], [
    &apos;month&apos;,
    [1, 3, 6]
], [
    &apos;year&apos;,
    null
]]</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *units</Declaration>
			
			
			<Anchor>//api/name/units</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/units</TokenIdentifier>
			<Abstract type="html">* description: Datetime axis only. An array determining what time intervals the
ticks are allowed to fall on. Each array item is an array where the
first value is the time unit and the second value another array of
allowed multiples. Defaults to:
units: [[
    &apos;millisecond&apos;, // unit name
    [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples
], [
    &apos;second&apos;,
    [1, 2, 5, 10, 15, 30]
], [
    &apos;minute&apos;,
    [1, 2, 5, 10, 15, 30]
], [
    &apos;hour&apos;,
    [1, 2, 3, 4, 6, 8, 12]
], [
    &apos;day&apos;,
    [1]
], [
    &apos;week&apos;,
    [1]
], [
    &apos;month&apos;,
    [1, 3, 6]
], [
    &apos;year&apos;,
    null
]]</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *units</Declaration>
			
			
			<Anchor>//api/name/units</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/units</TokenIdentifier>
			<Abstract type="html">* description: Datetime axis only. An array determining what time intervals the
ticks are allowed to fall on. Each array item is an array where the
first value is the time unit and the second value another array of
allowed multiples. Defaults to:
units: [[
    &apos;millisecond&apos;, // unit name
    [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples
], [
    &apos;second&apos;,
    [1, 2, 5, 10, 15, 30]
], [
    &apos;minute&apos;,
    [1, 2, 5, 10, 15, 30]
], [
    &apos;hour&apos;,
    [1, 2, 3, 4, 6, 8, 12]
], [
    &apos;day&apos;,
    [1]
], [
    &apos;week&apos;,
    [1]
], [
    &apos;month&apos;,
    [1, 3, 6]
], [
    &apos;year&apos;,
    null
]]</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray *units</Declaration>
			
			
			<Anchor>//api/name/units</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setId:</TokenIdentifier>
			<Abstract type="html">* description: An id for the axis. This can be used after render time to get a pointer
to the axis object through chart.get().</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *id</Declaration>
			
			
			<Anchor>//api/name/id</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/id</TokenIdentifier>
			<Abstract type="html">* description: An id for the axis. This can be used after render time to get a pointer
to the axis object through chart.get().</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *id</Declaration>
			
			
			<Anchor>//api/name/id</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/id</TokenIdentifier>
			<Abstract type="html">* description: An id for the axis. This can be used after render time to get a pointer
to the axis object through chart.get().</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *id</Declaration>
			
			
			<Anchor>//api/name/id</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinRange:</TokenIdentifier>
			<Abstract type="html">* description: The minimum range to display on this axis. The entire axis will not
be allowed to span over a smaller interval than this. For example,
for a datetime axis the main unit is milliseconds. If minRange is
set to 3600000, you can&apos;t zoom in more than to one hour.
The default minRange for the x axis is five times the smallest interval
between any of the data points.
On a logarithmic axis, the unit for the minimum range is the power.
So a minRange of 1 means that the axis can be zoomed to 10-100,
100-1000, 1000-10000 etc.
Note that the minPadding, maxPadding, startOnTick and endOnTick
settings also affect how the extremes of the axis are computed.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minRange</Declaration>
			
			
			<Anchor>//api/name/minRange</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minRange</TokenIdentifier>
			<Abstract type="html">* description: The minimum range to display on this axis. The entire axis will not
be allowed to span over a smaller interval than this. For example,
for a datetime axis the main unit is milliseconds. If minRange is
set to 3600000, you can&apos;t zoom in more than to one hour.
The default minRange for the x axis is five times the smallest interval
between any of the data points.
On a logarithmic axis, the unit for the minimum range is the power.
So a minRange of 1 means that the axis can be zoomed to 10-100,
100-1000, 1000-10000 etc.
Note that the minPadding, maxPadding, startOnTick and endOnTick
settings also affect how the extremes of the axis are computed.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minRange</Declaration>
			
			
			<Anchor>//api/name/minRange</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minRange</TokenIdentifier>
			<Abstract type="html">* description: The minimum range to display on this axis. The entire axis will not
be allowed to span over a smaller interval than this. For example,
for a datetime axis the main unit is milliseconds. If minRange is
set to 3600000, you can&apos;t zoom in more than to one hour.
The default minRange for the x axis is five times the smallest interval
between any of the data points.
On a logarithmic axis, the unit for the minimum range is the power.
So a minRange of 1 means that the axis can be zoomed to 10-100,
100-1000, 1000-10000 etc.
Note that the minPadding, maxPadding, startOnTick and endOnTick
settings also affect how the extremes of the axis are computed.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minRange</Declaration>
			
			
			<Anchor>//api/name/minRange</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setDateTimeLabelFormats:</TokenIdentifier>
			<Abstract type="html">* description: For a datetime axis, the scale will automatically adjust to the
appropriate unit. This member gives the default string
representations used for each unit. For intermediate values,
different units may be used, for example the day unit can be used
on midnight and hour unit be used for intermediate values on the
same axis. For an overview of the replacement codes, see
dateFormat. Defaults to:
{
    millisecond: &apos;%H:%M:%S.%L&apos;,
    second: &apos;%H:%M:%S&apos;,
    minute: &apos;%H:%M&apos;,
    hour: &apos;%H:%M&apos;,
    day: &apos;%e. %b&apos;,
    week: &apos;%e. %b&apos;,
    month: &apos;%b \&apos;%y&apos;,
    year: &apos;%Y&apos;
}
* demo: https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/highcharts/xaxis/datetimelabelformats/ : Different day format on X axis
https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/stock/xaxis/datetimelabelformats/ : More information in x axis labels</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDateTimeLabelFormats *dateTimeLabelFormats</Declaration>
			
			
			<Anchor>//api/name/dateTimeLabelFormats</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/dateTimeLabelFormats</TokenIdentifier>
			<Abstract type="html">* description: For a datetime axis, the scale will automatically adjust to the
appropriate unit. This member gives the default string
representations used for each unit. For intermediate values,
different units may be used, for example the day unit can be used
on midnight and hour unit be used for intermediate values on the
same axis. For an overview of the replacement codes, see
dateFormat. Defaults to:
{
    millisecond: &apos;%H:%M:%S.%L&apos;,
    second: &apos;%H:%M:%S&apos;,
    minute: &apos;%H:%M&apos;,
    hour: &apos;%H:%M&apos;,
    day: &apos;%e. %b&apos;,
    week: &apos;%e. %b&apos;,
    month: &apos;%b \&apos;%y&apos;,
    year: &apos;%Y&apos;
}
* demo: https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/highcharts/xaxis/datetimelabelformats/ : Different day format on X axis
https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/stock/xaxis/datetimelabelformats/ : More information in x axis labels</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDateTimeLabelFormats *dateTimeLabelFormats</Declaration>
			
			
			<Anchor>//api/name/dateTimeLabelFormats</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/dateTimeLabelFormats</TokenIdentifier>
			<Abstract type="html">* description: For a datetime axis, the scale will automatically adjust to the
appropriate unit. This member gives the default string
representations used for each unit. For intermediate values,
different units may be used, for example the day unit can be used
on midnight and hour unit be used for intermediate values on the
same axis. For an overview of the replacement codes, see
dateFormat. Defaults to:
{
    millisecond: &apos;%H:%M:%S.%L&apos;,
    second: &apos;%H:%M:%S&apos;,
    minute: &apos;%H:%M&apos;,
    hour: &apos;%H:%M&apos;,
    day: &apos;%e. %b&apos;,
    week: &apos;%e. %b&apos;,
    month: &apos;%b \&apos;%y&apos;,
    year: &apos;%Y&apos;
}
* demo: https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/highcharts/xaxis/datetimelabelformats/ : Different day format on X axis
https://jsfiddle.net/gh/library/pure/highcharts/highcharts/tree/master/samples/stock/xaxis/datetimelabelformats/ : More information in x axis labels</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIDateTimeLabelFormats *dateTimeLabelFormats</Declaration>
			
			
			<Anchor>//api/name/dateTimeLabelFormats</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorGridLineColor:</TokenIdentifier>
			<Abstract type="html">* description: Color of the minor, secondary grid lines.
In styled mode, the stroke width is given in the
.highcharts-minor-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *minorGridLineColor</Declaration>
			
			
			<Anchor>//api/name/minorGridLineColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorGridLineColor</TokenIdentifier>
			<Abstract type="html">* description: Color of the minor, secondary grid lines.
In styled mode, the stroke width is given in the
.highcharts-minor-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *minorGridLineColor</Declaration>
			
			
			<Anchor>//api/name/minorGridLineColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorGridLineColor</TokenIdentifier>
			<Abstract type="html">* description: Color of the minor, secondary grid lines.
In styled mode, the stroke width is given in the
.highcharts-minor-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *minorGridLineColor</Declaration>
			
			
			<Anchor>//api/name/minorGridLineColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setClassName:</TokenIdentifier>
			<Abstract type="html">* description: A class name that opens for styling the axis by CSS, especially in
Highcharts styled mode. The class name is applied to group elements
for the grid, axis elements and labels.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/className</TokenIdentifier>
			<Abstract type="html">* description: A class name that opens for styling the axis by CSS, especially in
Highcharts styled mode. The class name is applied to group elements
for the grid, axis elements and labels.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/className</TokenIdentifier>
			<Abstract type="html">* description: A class name that opens for styling the axis by CSS, especially in
Highcharts styled mode. The class name is applied to group elements
for the grid, axis elements and labels.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *className</Declaration>
			
			
			<Anchor>//api/name/className</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setLabels:</TokenIdentifier>
			<Abstract type="html">description: The axis labels show the number or category for each tick.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HILabels *labels</Declaration>
			
			
			<Anchor>//api/name/labels</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/labels</TokenIdentifier>
			<Abstract type="html">description: The axis labels show the number or category for each tick.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HILabels *labels</Declaration>
			
			
			<Anchor>//api/name/labels</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/labels</TokenIdentifier>
			<Abstract type="html">description: The axis labels show the number or category for each tick.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HILabels *labels</Declaration>
			
			
			<Anchor>//api/name/labels</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setOpposite:</TokenIdentifier>
			<Abstract type="html">* description: Whether to display the axis on the opposite side of the normal. The
normal is on the left side for vertical axes and bottom for horizontal,
so the opposite sides will be right and top respectively. This is
typically used with dual or multiple axes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *opposite</Declaration>
			
			
			<Anchor>//api/name/opposite</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/opposite</TokenIdentifier>
			<Abstract type="html">* description: Whether to display the axis on the opposite side of the normal. The
normal is on the left side for vertical axes and bottom for horizontal,
so the opposite sides will be right and top respectively. This is
typically used with dual or multiple axes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *opposite</Declaration>
			
			
			<Anchor>//api/name/opposite</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/opposite</TokenIdentifier>
			<Abstract type="html">* description: Whether to display the axis on the opposite side of the normal. The
normal is on the left side for vertical axes and bottom for horizontal,
so the opposite sides will be right and top respectively. This is
typically used with dual or multiple axes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *opposite</Declaration>
			
			
			<Anchor>//api/name/opposite</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setGridLineWidth:</TokenIdentifier>
			<Abstract type="html">* description: The width of the grid lines extending the ticks across the plot area.
In styled mode, the stroke width is given in the .highcharts-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *gridLineWidth</Declaration>
			
			
			<Anchor>//api/name/gridLineWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/gridLineWidth</TokenIdentifier>
			<Abstract type="html">* description: The width of the grid lines extending the ticks across the plot area.
In styled mode, the stroke width is given in the .highcharts-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *gridLineWidth</Declaration>
			
			
			<Anchor>//api/name/gridLineWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/gridLineWidth</TokenIdentifier>
			<Abstract type="html">* description: The width of the grid lines extending the ticks across the plot area.
In styled mode, the stroke width is given in the .highcharts-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *gridLineWidth</Declaration>
			
			
			<Anchor>//api/name/gridLineWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorTicks:</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable minor ticks. Unless
minorTickInterval is set, the tick interval is
calculated as a fifth of the tickInterval.
On a logarithmic axis, minor ticks are laid out based on a best guess,
attempting to enter approximately 5 minor ticks between each major tick.
Prior to v6.0.0, ticks were unabled in auto layout by setting
minorTickInterval to &quot;auto&quot;.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTicks</Declaration>
			
			
			<Anchor>//api/name/minorTicks</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorTicks</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable minor ticks. Unless
minorTickInterval is set, the tick interval is
calculated as a fifth of the tickInterval.
On a logarithmic axis, minor ticks are laid out based on a best guess,
attempting to enter approximately 5 minor ticks between each major tick.
Prior to v6.0.0, ticks were unabled in auto layout by setting
minorTickInterval to &quot;auto&quot;.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTicks</Declaration>
			
			
			<Anchor>//api/name/minorTicks</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorTicks</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable minor ticks. Unless
minorTickInterval is set, the tick interval is
calculated as a fifth of the tickInterval.
On a logarithmic axis, minor ticks are laid out based on a best guess,
attempting to enter approximately 5 minor ticks between each major tick.
Prior to v6.0.0, ticks were unabled in auto layout by setting
minorTickInterval to &quot;auto&quot;.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTicks</Declaration>
			
			
			<Anchor>//api/name/minorTicks</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setVisible:</TokenIdentifier>
			<Abstract type="html">* description: Whether axis, including axis title, line, ticks and labels, should
be visible.
* default: true</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *visible</Declaration>
			
			
			<Anchor>//api/name/visible</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/visible</TokenIdentifier>
			<Abstract type="html">* description: Whether axis, including axis title, line, ticks and labels, should
be visible.
* default: true</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *visible</Declaration>
			
			
			<Anchor>//api/name/visible</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/visible</TokenIdentifier>
			<Abstract type="html">* description: Whether axis, including axis title, line, ticks and labels, should
be visible.
* default: true</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *visible</Declaration>
			
			
			<Anchor>//api/name/visible</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setPlotBands:</TokenIdentifier>
			<Abstract type="html">* description: An array of colored bands stretching across the plot area marking
an interval on the axis.
In styled mode, the plot bands are styled by the .highcharts-plot-band class in addition to the className option.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;HIPlotBands*&gt; *plotBands</Declaration>
			
			
			<Anchor>//api/name/plotBands</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/plotBands</TokenIdentifier>
			<Abstract type="html">* description: An array of colored bands stretching across the plot area marking
an interval on the axis.
In styled mode, the plot bands are styled by the .highcharts-plot-band class in addition to the className option.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;HIPlotBands*&gt; *plotBands</Declaration>
			
			
			<Anchor>//api/name/plotBands</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/plotBands</TokenIdentifier>
			<Abstract type="html">* description: An array of colored bands stretching across the plot area marking
an interval on the axis.
In styled mode, the plot bands are styled by the .highcharts-plot-band class in addition to the className option.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;HIPlotBands*&gt; *plotBands</Declaration>
			
			
			<Anchor>//api/name/plotBands</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setGridLineColor:</TokenIdentifier>
			<Abstract type="html">* description: Color of the grid lines extending the ticks across the plot area.
In styled mode, the stroke is given in the .highcharts-grid-line
class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *gridLineColor</Declaration>
			
			
			<Anchor>//api/name/gridLineColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/gridLineColor</TokenIdentifier>
			<Abstract type="html">* description: Color of the grid lines extending the ticks across the plot area.
In styled mode, the stroke is given in the .highcharts-grid-line
class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *gridLineColor</Declaration>
			
			
			<Anchor>//api/name/gridLineColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/gridLineColor</TokenIdentifier>
			<Abstract type="html">* description: Color of the grid lines extending the ticks across the plot area.
In styled mode, the stroke is given in the .highcharts-grid-line
class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *gridLineColor</Declaration>
			
			
			<Anchor>//api/name/gridLineColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickLength:</TokenIdentifier>
			<Abstract type="html">* description: The pixel length of the main tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickLength</Declaration>
			
			
			<Anchor>//api/name/tickLength</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickLength</TokenIdentifier>
			<Abstract type="html">* description: The pixel length of the main tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickLength</Declaration>
			
			
			<Anchor>//api/name/tickLength</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickLength</TokenIdentifier>
			<Abstract type="html">* description: The pixel length of the main tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickLength</Declaration>
			
			
			<Anchor>//api/name/tickLength</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setStartOnTick:</TokenIdentifier>
			<Abstract type="html">* description: Whether to force the axis to start on a tick. Use this option with
the minPadding option to control the axis start.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *startOnTick</Declaration>
			
			
			<Anchor>//api/name/startOnTick</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/startOnTick</TokenIdentifier>
			<Abstract type="html">* description: Whether to force the axis to start on a tick. Use this option with
the minPadding option to control the axis start.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *startOnTick</Declaration>
			
			
			<Anchor>//api/name/startOnTick</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/startOnTick</TokenIdentifier>
			<Abstract type="html">* description: Whether to force the axis to start on a tick. Use this option with
the minPadding option to control the axis start.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *startOnTick</Declaration>
			
			
			<Anchor>//api/name/startOnTick</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the major tick marks.
In styled mode, the stroke width is given in the .highcharts-tick class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickWidth</Declaration>
			
			
			<Anchor>//api/name/tickWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the major tick marks.
In styled mode, the stroke width is given in the .highcharts-tick class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickWidth</Declaration>
			
			
			<Anchor>//api/name/tickWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the major tick marks.
In styled mode, the stroke width is given in the .highcharts-tick class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickWidth</Declaration>
			
			
			<Anchor>//api/name/tickWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setAllowDecimals:</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow decimals in this axis&apos; ticks. When counting integers,
like persons or hits on a web page, decimals should be avoided in
the labels.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowDecimals</Declaration>
			
			
			<Anchor>//api/name/allowDecimals</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/allowDecimals</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow decimals in this axis&apos; ticks. When counting integers,
like persons or hits on a web page, decimals should be avoided in
the labels.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowDecimals</Declaration>
			
			
			<Anchor>//api/name/allowDecimals</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/allowDecimals</TokenIdentifier>
			<Abstract type="html">* description: Whether to allow decimals in this axis&apos; ticks. When counting integers,
like persons or hits on a web page, decimals should be avoided in
the labels.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *allowDecimals</Declaration>
			
			
			<Anchor>//api/name/allowDecimals</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setOffset:</TokenIdentifier>
			<Abstract type="html">* description: The distance in pixels from the plot area to the axis line. A positive
offset moves the axis with it&apos;s line, labels and ticks away from
the plot area. This is typically used when two or more axes are displayed
on the same side of the plot. With multiple axes the offset is dynamically
adjusted to avoid collision, this can be overridden by setting offset
explicitly.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *offset</Declaration>
			
			
			<Anchor>//api/name/offset</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/offset</TokenIdentifier>
			<Abstract type="html">* description: The distance in pixels from the plot area to the axis line. A positive
offset moves the axis with it&apos;s line, labels and ticks away from
the plot area. This is typically used when two or more axes are displayed
on the same side of the plot. With multiple axes the offset is dynamically
adjusted to avoid collision, this can be overridden by setting offset
explicitly.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *offset</Declaration>
			
			
			<Anchor>//api/name/offset</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/offset</TokenIdentifier>
			<Abstract type="html">* description: The distance in pixels from the plot area to the axis line. A positive
offset moves the axis with it&apos;s line, labels and ticks away from
the plot area. This is typically used when two or more axes are displayed
on the same side of the plot. With multiple axes the offset is dynamically
adjusted to avoid collision, this can be overridden by setting offset
explicitly.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *offset</Declaration>
			
			
			<Anchor>//api/name/offset</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setLinkedTo:</TokenIdentifier>
			<Abstract type="html">* description: Index of another axis that this axis is linked to. When an axis is
linked to a master axis, it will take the same extremes as the master,
but as assigned by min or max or by setExtremes. It can be used
to show additional info, or to ease reading the chart by duplicating
the scales.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *linkedTo</Declaration>
			
			
			<Anchor>//api/name/linkedTo</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/linkedTo</TokenIdentifier>
			<Abstract type="html">* description: Index of another axis that this axis is linked to. When an axis is
linked to a master axis, it will take the same extremes as the master,
but as assigned by min or max or by setExtremes. It can be used
to show additional info, or to ease reading the chart by duplicating
the scales.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *linkedTo</Declaration>
			
			
			<Anchor>//api/name/linkedTo</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/linkedTo</TokenIdentifier>
			<Abstract type="html">* description: Index of another axis that this axis is linked to. When an axis is
linked to a master axis, it will take the same extremes as the master,
but as assigned by min or max or by setExtremes. It can be used
to show additional info, or to ease reading the chart by duplicating
the scales.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *linkedTo</Declaration>
			
			
			<Anchor>//api/name/linkedTo</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorTickColor:</TokenIdentifier>
			<Abstract type="html">* description: Color for the minor tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *minorTickColor</Declaration>
			
			
			<Anchor>//api/name/minorTickColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorTickColor</TokenIdentifier>
			<Abstract type="html">* description: Color for the minor tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *minorTickColor</Declaration>
			
			
			<Anchor>//api/name/minorTickColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorTickColor</TokenIdentifier>
			<Abstract type="html">* description: Color for the minor tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *minorTickColor</Declaration>
			
			
			<Anchor>//api/name/minorTickColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinTickInterval:</TokenIdentifier>
			<Abstract type="html">* description: The minimum tick interval allowed in axis values. For example on
zooming in on an axis with daily data, this can be used to prevent
the axis from showing hours. Defaults to the closest distance between
two points on the axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minTickInterval</Declaration>
			
			
			<Anchor>//api/name/minTickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minTickInterval</TokenIdentifier>
			<Abstract type="html">* description: The minimum tick interval allowed in axis values. For example on
zooming in on an axis with daily data, this can be used to prevent
the axis from showing hours. Defaults to the closest distance between
two points on the axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minTickInterval</Declaration>
			
			
			<Anchor>//api/name/minTickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minTickInterval</TokenIdentifier>
			<Abstract type="html">* description: The minimum tick interval allowed in axis values. For example on
zooming in on an axis with daily data, this can be used to prevent
the axis from showing hours. Defaults to the closest distance between
two points on the axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minTickInterval</Declaration>
			
			
			<Anchor>//api/name/minTickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorGridLineWidth:</TokenIdentifier>
			<Abstract type="html">* description: Width of the minor, secondary grid lines.
In styled mode, the stroke width is given in the
.highcharts-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorGridLineWidth</Declaration>
			
			
			<Anchor>//api/name/minorGridLineWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorGridLineWidth</TokenIdentifier>
			<Abstract type="html">* description: Width of the minor, secondary grid lines.
In styled mode, the stroke width is given in the
.highcharts-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorGridLineWidth</Declaration>
			
			
			<Anchor>//api/name/minorGridLineWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorGridLineWidth</TokenIdentifier>
			<Abstract type="html">* description: Width of the minor, secondary grid lines.
In styled mode, the stroke width is given in the
.highcharts-grid-line class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorGridLineWidth</Declaration>
			
			
			<Anchor>//api/name/minorGridLineWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setUniqueNames:</TokenIdentifier>
			<Abstract type="html">* description: Applies only when the axis type is category. When uniqueNames
is true, points are placed on the X axis according to their names.
If the same point name is repeated in the same or another series,
the point is placed on the same X position as other points of the
same name. When uniqueNames is false, the points are laid out in
increasing X positions regardless of their names, and the X axis
category will take the name of the last point in each position.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *uniqueNames</Declaration>
			
			
			<Anchor>//api/name/uniqueNames</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/uniqueNames</TokenIdentifier>
			<Abstract type="html">* description: Applies only when the axis type is category. When uniqueNames
is true, points are placed on the X axis according to their names.
If the same point name is repeated in the same or another series,
the point is placed on the same X position as other points of the
same name. When uniqueNames is false, the points are laid out in
increasing X positions regardless of their names, and the X axis
category will take the name of the last point in each position.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *uniqueNames</Declaration>
			
			
			<Anchor>//api/name/uniqueNames</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/uniqueNames</TokenIdentifier>
			<Abstract type="html">* description: Applies only when the axis type is category. When uniqueNames
is true, points are placed on the X axis according to their names.
If the same point name is repeated in the same or another series,
the point is placed on the same X position as other points of the
same name. When uniqueNames is false, the points are laid out in
increasing X positions regardless of their names, and the X axis
category will take the name of the last point in each position.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *uniqueNames</Declaration>
			
			
			<Anchor>//api/name/uniqueNames</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickAmount:</TokenIdentifier>
			<Abstract type="html">* description: The amount of ticks to draw on the axis. This opens up for aligning
the ticks of multiple charts or panes within a chart. This option
overrides the tickPixelInterval option.
This option only has an effect on linear axes. Datetime, logarithmic
or category axes are not affected.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickAmount</Declaration>
			
			
			<Anchor>//api/name/tickAmount</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickAmount</TokenIdentifier>
			<Abstract type="html">* description: The amount of ticks to draw on the axis. This opens up for aligning
the ticks of multiple charts or panes within a chart. This option
overrides the tickPixelInterval option.
This option only has an effect on linear axes. Datetime, logarithmic
or category axes are not affected.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickAmount</Declaration>
			
			
			<Anchor>//api/name/tickAmount</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickAmount</TokenIdentifier>
			<Abstract type="html">* description: The amount of ticks to draw on the axis. This opens up for aligning
the ticks of multiple charts or panes within a chart. This option
overrides the tickPixelInterval option.
This option only has an effect on linear axes. Datetime, logarithmic
or category axes are not affected.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickAmount</Declaration>
			
			
			<Anchor>//api/name/tickAmount</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setStartOfWeek:</TokenIdentifier>
			<Abstract type="html">* description: For datetime axes, this decides where to put the tick between weeks.
0 = Sunday, 1 = Monday.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *startOfWeek</Declaration>
			
			
			<Anchor>//api/name/startOfWeek</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/startOfWeek</TokenIdentifier>
			<Abstract type="html">* description: For datetime axes, this decides where to put the tick between weeks.
0 = Sunday, 1 = Monday.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *startOfWeek</Declaration>
			
			
			<Anchor>//api/name/startOfWeek</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/startOfWeek</TokenIdentifier>
			<Abstract type="html">* description: For datetime axes, this decides where to put the tick between weeks.
0 = Sunday, 1 = Monday.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *startOfWeek</Declaration>
			
			
			<Anchor>//api/name/startOfWeek</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorGridLineDashStyle:</TokenIdentifier>
			<Abstract type="html">* description: The dash or dot style of the minor grid lines. For possible values,
see http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-
dashstyle-all/ : this demonstration.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *minorGridLineDashStyle</Declaration>
			
			
			<Anchor>//api/name/minorGridLineDashStyle</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorGridLineDashStyle</TokenIdentifier>
			<Abstract type="html">* description: The dash or dot style of the minor grid lines. For possible values,
see http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-
dashstyle-all/ : this demonstration.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *minorGridLineDashStyle</Declaration>
			
			
			<Anchor>//api/name/minorGridLineDashStyle</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorGridLineDashStyle</TokenIdentifier>
			<Abstract type="html">* description: The dash or dot style of the minor grid lines. For possible values,
see http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-
dashstyle-all/ : this demonstration.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *minorGridLineDashStyle</Declaration>
			
			
			<Anchor>//api/name/minorGridLineDashStyle</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickColor:</TokenIdentifier>
			<Abstract type="html">* description: Color for the main tick marks.
In styled mode, the stroke is given in the .highcharts-tick
class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *tickColor</Declaration>
			
			
			<Anchor>//api/name/tickColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickColor</TokenIdentifier>
			<Abstract type="html">* description: Color for the main tick marks.
In styled mode, the stroke is given in the .highcharts-tick
class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *tickColor</Declaration>
			
			
			<Anchor>//api/name/tickColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickColor</TokenIdentifier>
			<Abstract type="html">* description: Color for the main tick marks.
In styled mode, the stroke is given in the .highcharts-tick
class.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *tickColor</Declaration>
			
			
			<Anchor>//api/name/tickColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorTickWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the minor tick mark.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickWidth</Declaration>
			
			
			<Anchor>//api/name/minorTickWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorTickWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the minor tick mark.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickWidth</Declaration>
			
			
			<Anchor>//api/name/minorTickWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorTickWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the minor tick mark.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickWidth</Declaration>
			
			
			<Anchor>//api/name/minorTickWidth</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setShowFirstLabel:</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the first tick label.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showFirstLabel</Declaration>
			
			
			<Anchor>//api/name/showFirstLabel</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/showFirstLabel</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the first tick label.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showFirstLabel</Declaration>
			
			
			<Anchor>//api/name/showFirstLabel</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/showFirstLabel</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the first tick label.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showFirstLabel</Declaration>
			
			
			<Anchor>//api/name/showFirstLabel</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setPlotLines:</TokenIdentifier>
			<Abstract type="html">* description: An array of lines stretching across the plot area, marking a specific
value on one of the axes.
In styled mode, the plot lines are styled by the .highcharts-plot-line class in addition to the className option.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;HIPlotLines*&gt; *plotLines</Declaration>
			
			
			<Anchor>//api/name/plotLines</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/plotLines</TokenIdentifier>
			<Abstract type="html">* description: An array of lines stretching across the plot area, marking a specific
value on one of the axes.
In styled mode, the plot lines are styled by the .highcharts-plot-line class in addition to the className option.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;HIPlotLines*&gt; *plotLines</Declaration>
			
			
			<Anchor>//api/name/plotLines</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/plotLines</TokenIdentifier>
			<Abstract type="html">* description: An array of lines stretching across the plot area, marking a specific
value on one of the axes.
In styled mode, the plot lines are styled by the .highcharts-plot-line class in addition to the className option.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;HIPlotLines*&gt; *plotLines</Declaration>
			
			
			<Anchor>//api/name/plotLines</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setCategories:</TokenIdentifier>
			<Abstract type="html">* description: If categories are present for the xAxis, names are used instead of
numbers for that axis. Since Highcharts 3.0, categories can also
be extracted by giving each point a name and setting
axis type to category. However, if you have multiple
series, best practice remains defining the categories array.
Example:
categories: [&apos;Apples&apos;, &apos;Bananas&apos;, &apos;Oranges&apos;]
Defaults to null</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSString*&gt; *categories</Declaration>
			
			
			<Anchor>//api/name/categories</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/categories</TokenIdentifier>
			<Abstract type="html">* description: If categories are present for the xAxis, names are used instead of
numbers for that axis. Since Highcharts 3.0, categories can also
be extracted by giving each point a name and setting
axis type to category. However, if you have multiple
series, best practice remains defining the categories array.
Example:
categories: [&apos;Apples&apos;, &apos;Bananas&apos;, &apos;Oranges&apos;]
Defaults to null</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSString*&gt; *categories</Declaration>
			
			
			<Anchor>//api/name/categories</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/categories</TokenIdentifier>
			<Abstract type="html">* description: If categories are present for the xAxis, names are used instead of
numbers for that axis. Since Highcharts 3.0, categories can also
be extracted by giving each point a name and setting
axis type to category. However, if you have multiple
series, best practice remains defining the categories array.
Example:
categories: [&apos;Apples&apos;, &apos;Bananas&apos;, &apos;Oranges&apos;]
Defaults to null</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSString*&gt; *categories</Declaration>
			
			
			<Anchor>//api/name/categories</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setReversed:</TokenIdentifier>
			<Abstract type="html">* description: Whether to reverse the axis so that the highest number is closest
to the origin. If the chart is inverted, the x axis is reversed by
default.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reversed</Declaration>
			
			
			<Anchor>//api/name/reversed</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/reversed</TokenIdentifier>
			<Abstract type="html">* description: Whether to reverse the axis so that the highest number is closest
to the origin. If the chart is inverted, the x axis is reversed by
default.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reversed</Declaration>
			
			
			<Anchor>//api/name/reversed</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/reversed</TokenIdentifier>
			<Abstract type="html">* description: Whether to reverse the axis so that the highest number is closest
to the origin. If the chart is inverted, the x axis is reversed by
default.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reversed</Declaration>
			
			
			<Anchor>//api/name/reversed</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickPosition:</TokenIdentifier>
			<Abstract type="html">* description: The position of the major tick marks relative to the axis line.
Can be one of inside and outside.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *tickPosition</Declaration>
			
			
			<Anchor>//api/name/tickPosition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickPosition</TokenIdentifier>
			<Abstract type="html">* description: The position of the major tick marks relative to the axis line.
Can be one of inside and outside.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *tickPosition</Declaration>
			
			
			<Anchor>//api/name/tickPosition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickPosition</TokenIdentifier>
			<Abstract type="html">* description: The position of the major tick marks relative to the axis line.
Can be one of inside and outside.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *tickPosition</Declaration>
			
			
			<Anchor>//api/name/tickPosition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setSoftMax:</TokenIdentifier>
			<Abstract type="html">* description: A soft maximum for the axis. If the series data maximum is less than
this, the axis will stay at this maximum, but if the series data
maximum is higher, the axis will flex to show all data.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softMax</Declaration>
			
			
			<Anchor>//api/name/softMax</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/softMax</TokenIdentifier>
			<Abstract type="html">* description: A soft maximum for the axis. If the series data maximum is less than
this, the axis will stay at this maximum, but if the series data
maximum is higher, the axis will flex to show all data.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softMax</Declaration>
			
			
			<Anchor>//api/name/softMax</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/softMax</TokenIdentifier>
			<Abstract type="html">* description: A soft maximum for the axis. If the series data maximum is less than
this, the axis will stay at this maximum, but if the series data
maximum is higher, the axis will flex to show all data.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softMax</Declaration>
			
			
			<Anchor>//api/name/softMax</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setType:</TokenIdentifier>
			<Abstract type="html">* description: The type of axis. Can be one of linear, logarithmic, datetime
or category. In a datetime axis, the numbers are given in
milliseconds, and tick marks are placed on appropriate values like
full hours or days. In a category axis, the
point names of the chart&apos;s series are used
for categories, if not a categories array is
defined.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/type</TokenIdentifier>
			<Abstract type="html">* description: The type of axis. Can be one of linear, logarithmic, datetime
or category. In a datetime axis, the numbers are given in
milliseconds, and tick marks are placed on appropriate values like
full hours or days. In a category axis, the
point names of the chart&apos;s series are used
for categories, if not a categories array is
defined.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/type</TokenIdentifier>
			<Abstract type="html">* description: The type of axis. Can be one of linear, logarithmic, datetime
or category. In a datetime axis, the numbers are given in
milliseconds, and tick marks are placed on appropriate values like
full hours or days. In a category axis, the
point names of the chart&apos;s series are used
for categories, if not a categories array is
defined.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *type</Declaration>
			
			
			<Anchor>//api/name/type</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMin:</TokenIdentifier>
			<Abstract type="html">* description: The minimum value of the axis. If null the min value is automatically
calculated. If the startOnTick option is true, the min value
might be rounded down.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *min</Declaration>
			
			
			<Anchor>//api/name/min</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/min</TokenIdentifier>
			<Abstract type="html">* description: The minimum value of the axis. If null the min value is automatically
calculated. If the startOnTick option is true, the min value
might be rounded down.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *min</Declaration>
			
			
			<Anchor>//api/name/min</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/min</TokenIdentifier>
			<Abstract type="html">* description: The minimum value of the axis. If null the min value is automatically
calculated. If the startOnTick option is true, the min value
might be rounded down.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *min</Declaration>
			
			
			<Anchor>//api/name/min</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setSoftMin:</TokenIdentifier>
			<Abstract type="html">* description: A soft minimum for the axis. If the series data minimum is greater
than this, the axis will stay at this minimum, but if the series
data minimum is lower, the axis will flex to show all data.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softMin</Declaration>
			
			
			<Anchor>//api/name/softMin</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/softMin</TokenIdentifier>
			<Abstract type="html">* description: A soft minimum for the axis. If the series data minimum is greater
than this, the axis will stay at this minimum, but if the series
data minimum is lower, the axis will flex to show all data.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softMin</Declaration>
			
			
			<Anchor>//api/name/softMin</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/softMin</TokenIdentifier>
			<Abstract type="html">* description: A soft minimum for the axis. If the series data minimum is greater
than this, the axis will stay at this minimum, but if the series
data minimum is lower, the axis will flex to show all data.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *softMin</Declaration>
			
			
			<Anchor>//api/name/softMin</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMax:</TokenIdentifier>
			<Abstract type="html">* description: The maximum value of the axis. If null, the max value is automatically
calculated. If the endOnTick option is true, the max value might
be rounded up.
If a tickAmount is set, the axis may be extended
beyond the set max in order to reach the given number of ticks. The
same may happen in a chart with multiple axes, determined by chart.
alignTicks, where a tickAmount is applied internally.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *max</Declaration>
			
			
			<Anchor>//api/name/max</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/max</TokenIdentifier>
			<Abstract type="html">* description: The maximum value of the axis. If null, the max value is automatically
calculated. If the endOnTick option is true, the max value might
be rounded up.
If a tickAmount is set, the axis may be extended
beyond the set max in order to reach the given number of ticks. The
same may happen in a chart with multiple axes, determined by chart.
alignTicks, where a tickAmount is applied internally.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *max</Declaration>
			
			
			<Anchor>//api/name/max</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/max</TokenIdentifier>
			<Abstract type="html">* description: The maximum value of the axis. If null, the max value is automatically
calculated. If the endOnTick option is true, the max value might
be rounded up.
If a tickAmount is set, the axis may be extended
beyond the set max in order to reach the given number of ticks. The
same may happen in a chart with multiple axes, determined by chart.
alignTicks, where a tickAmount is applied internally.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *max</Declaration>
			
			
			<Anchor>//api/name/max</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setCeiling:</TokenIdentifier>
			<Abstract type="html">* description: The highest allowed value for automatically computed axis extremes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *ceiling</Declaration>
			
			
			<Anchor>//api/name/ceiling</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/ceiling</TokenIdentifier>
			<Abstract type="html">* description: The highest allowed value for automatically computed axis extremes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *ceiling</Declaration>
			
			
			<Anchor>//api/name/ceiling</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/ceiling</TokenIdentifier>
			<Abstract type="html">* description: The highest allowed value for automatically computed axis extremes.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *ceiling</Declaration>
			
			
			<Anchor>//api/name/ceiling</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickPixelInterval:</TokenIdentifier>
			<Abstract type="html">* description: If tickInterval is null this option sets the approximate pixel
interval of the tick marks. Not applicable to categorized axis.
The tick interval is also influenced by the minTickInterval option, that, by default prevents ticks from being
denser than the data points.
Defaults to 72 for the Y axis and 100 for the X axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickPixelInterval</Declaration>
			
			
			<Anchor>//api/name/tickPixelInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickPixelInterval</TokenIdentifier>
			<Abstract type="html">* description: If tickInterval is null this option sets the approximate pixel
interval of the tick marks. Not applicable to categorized axis.
The tick interval is also influenced by the minTickInterval option, that, by default prevents ticks from being
denser than the data points.
Defaults to 72 for the Y axis and 100 for the X axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickPixelInterval</Declaration>
			
			
			<Anchor>//api/name/tickPixelInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickPixelInterval</TokenIdentifier>
			<Abstract type="html">* description: If tickInterval is null this option sets the approximate pixel
interval of the tick marks. Not applicable to categorized axis.
The tick interval is also influenced by the minTickInterval option, that, by default prevents ticks from being
denser than the data points.
Defaults to 72 for the Y axis and 100 for the X axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickPixelInterval</Declaration>
			
			
			<Anchor>//api/name/tickPixelInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTitle:</TokenIdentifier>
			<Abstract type="html">description: The axis title, showing next to the axis line.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITitle *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/title</TokenIdentifier>
			<Abstract type="html">description: The axis title, showing next to the axis line.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITitle *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/title</TokenIdentifier>
			<Abstract type="html">description: The axis title, showing next to the axis line.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITitle *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setEvents:</TokenIdentifier>
			<Abstract type="html">description: Event handlers for the axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIEvents *events</Declaration>
			
			
			<Anchor>//api/name/events</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/events</TokenIdentifier>
			<Abstract type="html">description: Event handlers for the axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIEvents *events</Declaration>
			
			
			<Anchor>//api/name/events</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/events</TokenIdentifier>
			<Abstract type="html">description: Event handlers for the axis.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIEvents *events</Declaration>
			
			
			<Anchor>//api/name/events</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setAlternateGridColor:</TokenIdentifier>
			<Abstract type="html">* description: When using an alternate grid color, a band is painted across the
plot area between every other grid line.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *alternateGridColor</Declaration>
			
			
			<Anchor>//api/name/alternateGridColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/alternateGridColor</TokenIdentifier>
			<Abstract type="html">* description: When using an alternate grid color, a band is painted across the
plot area between every other grid line.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *alternateGridColor</Declaration>
			
			
			<Anchor>//api/name/alternateGridColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/alternateGridColor</TokenIdentifier>
			<Abstract type="html">* description: When using an alternate grid color, a band is painted across the
plot area between every other grid line.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *alternateGridColor</Declaration>
			
			
			<Anchor>//api/name/alternateGridColor</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setShowLastLabel:</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the last tick label.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showLastLabel</Declaration>
			
			
			<Anchor>//api/name/showLastLabel</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/showLastLabel</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the last tick label.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showLastLabel</Declaration>
			
			
			<Anchor>//api/name/showLastLabel</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/showLastLabel</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the last tick label.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *showLastLabel</Declaration>
			
			
			<Anchor>//api/name/showLastLabel</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorTickLength:</TokenIdentifier>
			<Abstract type="html">* description: The pixel length of the minor tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickLength</Declaration>
			
			
			<Anchor>//api/name/minorTickLength</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorTickLength</TokenIdentifier>
			<Abstract type="html">* description: The pixel length of the minor tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickLength</Declaration>
			
			
			<Anchor>//api/name/minorTickLength</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorTickLength</TokenIdentifier>
			<Abstract type="html">* description: The pixel length of the minor tick marks.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minorTickLength</Declaration>
			
			
			<Anchor>//api/name/minorTickLength</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickInterval:</TokenIdentifier>
			<Abstract type="html">* description: The interval of the tick marks in axis units. When null, the tick
interval is computed to approximately follow the tickPixelInterval on linear and datetime axes. On categorized axes,
a null tickInterval will default to 1, one category. Note that
datetime axes are based on milliseconds, so for example an interval
of one day is expressed as 24  3600  1000.
On logarithmic axes, the tickInterval is based on powers, so a tickInterval
of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval
of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts
a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.
If the tickInterval is too dense for labels to be drawn, Highcharts
may remove ticks.
If the chart has multiple axes, the alignTicks
option may interfere with the tickInterval setting.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickInterval</Declaration>
			
			
			<Anchor>//api/name/tickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickInterval</TokenIdentifier>
			<Abstract type="html">* description: The interval of the tick marks in axis units. When null, the tick
interval is computed to approximately follow the tickPixelInterval on linear and datetime axes. On categorized axes,
a null tickInterval will default to 1, one category. Note that
datetime axes are based on milliseconds, so for example an interval
of one day is expressed as 24  3600  1000.
On logarithmic axes, the tickInterval is based on powers, so a tickInterval
of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval
of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts
a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.
If the tickInterval is too dense for labels to be drawn, Highcharts
may remove ticks.
If the chart has multiple axes, the alignTicks
option may interfere with the tickInterval setting.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickInterval</Declaration>
			
			
			<Anchor>//api/name/tickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickInterval</TokenIdentifier>
			<Abstract type="html">* description: The interval of the tick marks in axis units. When null, the tick
interval is computed to approximately follow the tickPixelInterval on linear and datetime axes. On categorized axes,
a null tickInterval will default to 1, one category. Note that
datetime axes are based on milliseconds, so for example an interval
of one day is expressed as 24  3600  1000.
On logarithmic axes, the tickInterval is based on powers, so a tickInterval
of 1 means one tick on each of 0.1, 1, 10, 100 etc. A tickInterval
of 2 means a tick of 0.1, 10, 1000 etc. A tickInterval of 0.2 puts
a tick on 0.1, 0.2, 0.4, 0.6, 0.8, 1, 2, 4, 6, 8, 10, 20, 40 etc.
If the tickInterval is too dense for labels to be drawn, Highcharts
may remove ticks.
If the chart has multiple axes, the alignTicks
option may interfere with the tickInterval setting.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *tickInterval</Declaration>
			
			
			<Anchor>//api/name/tickInterval</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMaxPadding:</TokenIdentifier>
			<Abstract type="html">* description: Padding of the max value relative to the length of the axis. A
padding of 0.05 will make a 100px axis 5px longer. This is useful
when you don&apos;t want the highest data value to appear on the edge
of the plot area. When the axis&apos; max option is set or a max extreme
is set using axis.setExtremes(), the maxPadding will be ignored.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxPadding</Declaration>
			
			
			<Anchor>//api/name/maxPadding</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/maxPadding</TokenIdentifier>
			<Abstract type="html">* description: Padding of the max value relative to the length of the axis. A
padding of 0.05 will make a 100px axis 5px longer. This is useful
when you don&apos;t want the highest data value to appear on the edge
of the plot area. When the axis&apos; max option is set or a max extreme
is set using axis.setExtremes(), the maxPadding will be ignored.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxPadding</Declaration>
			
			
			<Anchor>//api/name/maxPadding</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/maxPadding</TokenIdentifier>
			<Abstract type="html">* description: Padding of the max value relative to the length of the axis. A
padding of 0.05 will make a 100px axis 5px longer. This is useful
when you don&apos;t want the highest data value to appear on the edge
of the plot area. When the axis&apos; max option is set or a max extreme
is set using axis.setExtremes(), the maxPadding will be ignored.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxPadding</Declaration>
			
			
			<Anchor>//api/name/maxPadding</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickmarkPlacement:</TokenIdentifier>
			<Abstract type="html">* description: For categorized axes only. If on the tick mark is placed in the
center of the category, if between the tick mark is placed between
categories. The default is between if the tickInterval is 1,
else on.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *tickmarkPlacement</Declaration>
			
			
			<Anchor>//api/name/tickmarkPlacement</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickmarkPlacement</TokenIdentifier>
			<Abstract type="html">* description: For categorized axes only. If on the tick mark is placed in the
center of the category, if between the tick mark is placed between
categories. The default is between if the tickInterval is 1,
else on.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *tickmarkPlacement</Declaration>
			
			
			<Anchor>//api/name/tickmarkPlacement</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickmarkPlacement</TokenIdentifier>
			<Abstract type="html">* description: For categorized axes only. If on the tick mark is placed in the
center of the category, if between the tick mark is placed between
categories. The default is between if the tickInterval is 1,
else on.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *tickmarkPlacement</Declaration>
			
			
			<Anchor>//api/name/tickmarkPlacement</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setEndOnTick:</TokenIdentifier>
			<Abstract type="html">* description: Whether to force the axis to end on a tick. Use this option with
the maxPadding option to control the axis end.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *endOnTick</Declaration>
			
			
			<Anchor>//api/name/endOnTick</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/endOnTick</TokenIdentifier>
			<Abstract type="html">* description: Whether to force the axis to end on a tick. Use this option with
the maxPadding option to control the axis end.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *endOnTick</Declaration>
			
			
			<Anchor>//api/name/endOnTick</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/endOnTick</TokenIdentifier>
			<Abstract type="html">* description: Whether to force the axis to end on a tick. Use this option with
the maxPadding option to control the axis end.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *endOnTick</Declaration>
			
			
			<Anchor>//api/name/endOnTick</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinorTickPosition:</TokenIdentifier>
			<Abstract type="html">* description: The position of the minor tick marks relative to the axis line.
Can be one of inside and outside.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *minorTickPosition</Declaration>
			
			
			<Anchor>//api/name/minorTickPosition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minorTickPosition</TokenIdentifier>
			<Abstract type="html">* description: The position of the minor tick marks relative to the axis line.
Can be one of inside and outside.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *minorTickPosition</Declaration>
			
			
			<Anchor>//api/name/minorTickPosition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minorTickPosition</TokenIdentifier>
			<Abstract type="html">* description: The position of the minor tick marks relative to the axis line.
Can be one of inside and outside.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *minorTickPosition</Declaration>
			
			
			<Anchor>//api/name/minorTickPosition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setTickPositions:</TokenIdentifier>
			<Abstract type="html">* description: An array defining where the ticks are laid out on the axis. This
overrides the default behaviour of tickPixelInterval
and tickInterval.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSNumber*&gt; *tickPositions</Declaration>
			
			
			<Anchor>//api/name/tickPositions</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/tickPositions</TokenIdentifier>
			<Abstract type="html">* description: An array defining where the ticks are laid out on the axis. This
overrides the default behaviour of tickPixelInterval
and tickInterval.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSNumber*&gt; *tickPositions</Declaration>
			
			
			<Anchor>//api/name/tickPositions</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/tickPositions</TokenIdentifier>
			<Abstract type="html">* description: An array defining where the ticks are laid out on the axis. This
overrides the default behaviour of tickPixelInterval
and tickInterval.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSArray&lt;NSNumber*&gt; *tickPositions</Declaration>
			
			
			<Anchor>//api/name/tickPositions</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMaxZoom:</TokenIdentifier>
			<Abstract type="html">description: Deprecated. Use minRange instead.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxZoom</Declaration>
			
			
			<Anchor>//api/name/maxZoom</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/maxZoom</TokenIdentifier>
			<Abstract type="html">description: Deprecated. Use minRange instead.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxZoom</Declaration>
			
			
			<Anchor>//api/name/maxZoom</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/maxZoom</TokenIdentifier>
			<Abstract type="html">description: Deprecated. Use minRange instead.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxZoom</Declaration>
			
			
			<Anchor>//api/name/maxZoom</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setDefinition:</TokenIdentifier>
			<Abstract type="html">* description: Requires Accessibility module
Description of the axis to screen reader users.
* default: undefined</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *definition</Declaration>
			
			
			<Anchor>//api/name/definition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/definition</TokenIdentifier>
			<Abstract type="html">* description: Requires Accessibility module
Description of the axis to screen reader users.
* default: undefined</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *definition</Declaration>
			
			
			<Anchor>//api/name/definition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/definition</TokenIdentifier>
			<Abstract type="html">* description: Requires Accessibility module
Description of the axis to screen reader users.
* default: undefined</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *definition</Declaration>
			
			
			<Anchor>//api/name/definition</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/setMinPadding:</TokenIdentifier>
			<Abstract type="html">* description: Padding of the min value relative to the length of the axis. A
padding of 0.05 will make a 100px axis 5px longer. This is useful
when you don&apos;t want the lowest data value to appear on the edge
of the plot area. When the axis&apos; min option is set or a min extreme
is set using axis.setExtremes(), the minPadding will be ignored.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minPadding</Declaration>
			
			
			<Anchor>//api/name/minPadding</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HIZAxis/minPadding</TokenIdentifier>
			<Abstract type="html">* description: Padding of the min value relative to the length of the axis. A
padding of 0.05 will make a 100px axis 5px longer. This is useful
when you don&apos;t want the lowest data value to appear on the edge
of the plot area. When the axis&apos; min option is set or a min extreme
is set using axis.setExtremes(), the minPadding will be ignored.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minPadding</Declaration>
			
			
			<Anchor>//api/name/minPadding</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HIZAxis/minPadding</TokenIdentifier>
			<Abstract type="html">* description: Padding of the min value relative to the length of the axis. A
padding of 0.05 will make a 100px axis 5px longer. This is useful
when you don&apos;t want the lowest data value to appear on the edge
of the plot area. When the axis&apos; min option is set or a min extreme
is set using axis.setExtremes(), the minPadding will be ignored.</Abstract>
			<DeclaredIn>HIZAxis.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *minPadding</Declaration>
			
			
			<Anchor>//api/name/minPadding</Anchor>
            <NodeRef refid="139"/>
		</Token>
		
        
        
	</File>
</Tokens>