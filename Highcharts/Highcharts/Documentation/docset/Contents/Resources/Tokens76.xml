<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HILegend.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HILegend</TokenIdentifier>
			<Abstract type="html">* description: The legend is a box containing a symbol and name for each series
item or point item in the chart. Each series (or points in case
of pie charts) is represented by a symbol and its name in the legend.
It is possible to override the symbol creator function and
create http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/studies/legend-
custom-symbol/ : custom legend symbols.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
            
			
			<NodeRef refid="76"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setMaxHeight:</TokenIdentifier>
			<Abstract type="html">* description: Maximum pixel height for the legend. When the maximum height is extended,
navigation will show.
* default: undefined</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxHeight</Declaration>
			
			
			<Anchor>//api/name/maxHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/maxHeight</TokenIdentifier>
			<Abstract type="html">* description: Maximum pixel height for the legend. When the maximum height is extended,
navigation will show.
* default: undefined</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxHeight</Declaration>
			
			
			<Anchor>//api/name/maxHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/maxHeight</TokenIdentifier>
			<Abstract type="html">* description: Maximum pixel height for the legend. When the maximum height is extended,
navigation will show.
* default: undefined</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *maxHeight</Declaration>
			
			
			<Anchor>//api/name/maxHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setNavigation:</TokenIdentifier>
			<Abstract type="html">* description: Options for the paging or navigation appearing when the legend
is overflown. Navigation works well on screen, but not in static
exported images. One way of working around that is to http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/legend/navigation-
enabled-false/ : increase
the chart height in export.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HINavigation *navigation</Declaration>
			
			
			<Anchor>//api/name/navigation</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/navigation</TokenIdentifier>
			<Abstract type="html">* description: Options for the paging or navigation appearing when the legend
is overflown. Navigation works well on screen, but not in static
exported images. One way of working around that is to http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/legend/navigation-
enabled-false/ : increase
the chart height in export.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HINavigation *navigation</Declaration>
			
			
			<Anchor>//api/name/navigation</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/navigation</TokenIdentifier>
			<Abstract type="html">* description: Options for the paging or navigation appearing when the legend
is overflown. Navigation works well on screen, but not in static
exported images. One way of working around that is to http://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/legend/navigation-
enabled-false/ : increase
the chart height in export.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HINavigation *navigation</Declaration>
			
			
			<Anchor>//api/name/navigation</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setY:</TokenIdentifier>
			<Abstract type="html">* description: The vertical offset of the legend relative to it&apos;s vertical alignment
verticalAlign within chart.spacingTop and chart.spacingBottom.
Negative y moves it up, positive y moves it down.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/y</TokenIdentifier>
			<Abstract type="html">* description: The vertical offset of the legend relative to it&apos;s vertical alignment
verticalAlign within chart.spacingTop and chart.spacingBottom.
Negative y moves it up, positive y moves it down.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/y</TokenIdentifier>
			<Abstract type="html">* description: The vertical offset of the legend relative to it&apos;s vertical alignment
verticalAlign within chart.spacingTop and chart.spacingBottom.
Negative y moves it up, positive y moves it down.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *y</Declaration>
			
			
			<Anchor>//api/name/y</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setX:</TokenIdentifier>
			<Abstract type="html">* description: The x offset of the legend relative to its horizontal alignment
align within chart.spacingLeft and chart.spacingRight. Negative
x moves it to the left, positive x moves it to the right.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/x</TokenIdentifier>
			<Abstract type="html">* description: The x offset of the legend relative to its horizontal alignment
align within chart.spacingLeft and chart.spacingRight. Negative
x moves it to the left, positive x moves it to the right.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/x</TokenIdentifier>
			<Abstract type="html">* description: The x offset of the legend relative to its horizontal alignment
align within chart.spacingLeft and chart.spacingRight. Negative
x moves it to the left, positive x moves it to the right.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *x</Declaration>
			
			
			<Anchor>//api/name/x</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setUseHTML:</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the legend item texts. Prior
to 4.1.7, when using HTML, legend.navigation
was disabled.
* default: false</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the legend item texts. Prior
to 4.1.7, when using HTML, legend.navigation
was disabled.
* default: false</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/useHTML</TokenIdentifier>
			<Abstract type="html">* description: Whether to http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting#html : use HTML to render the legend item texts. Prior
to 4.1.7, when using HTML, legend.navigation
was disabled.
* default: false</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *useHTML</Declaration>
			
			
			<Anchor>//api/name/useHTML</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemMarginBottom:</TokenIdentifier>
			<Abstract type="html">* description: The pixel bottom margin for each legend item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemMarginBottom</Declaration>
			
			
			<Anchor>//api/name/itemMarginBottom</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemMarginBottom</TokenIdentifier>
			<Abstract type="html">* description: The pixel bottom margin for each legend item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemMarginBottom</Declaration>
			
			
			<Anchor>//api/name/itemMarginBottom</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemMarginBottom</TokenIdentifier>
			<Abstract type="html">* description: The pixel bottom margin for each legend item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemMarginBottom</Declaration>
			
			
			<Anchor>//api/name/itemMarginBottom</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setReversed:</TokenIdentifier>
			<Abstract type="html">* description: Whether to reverse the order of the legend items compared to the
order of the series or points as defined in the configuration object.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reversed</Declaration>
			
			
			<Anchor>//api/name/reversed</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/reversed</TokenIdentifier>
			<Abstract type="html">* description: Whether to reverse the order of the legend items compared to the
order of the series or points as defined in the configuration object.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reversed</Declaration>
			
			
			<Anchor>//api/name/reversed</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/reversed</TokenIdentifier>
			<Abstract type="html">* description: Whether to reverse the order of the legend items compared to the
order of the series or points as defined in the configuration object.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *reversed</Declaration>
			
			
			<Anchor>//api/name/reversed</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemCheckboxStyle:</TokenIdentifier>
			<Abstract type="html">* description: Default styling for the checkbox next to a legend item when
showCheckbox is true.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemCheckboxStyle *itemCheckboxStyle</Declaration>
			
			
			<Anchor>//api/name/itemCheckboxStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemCheckboxStyle</TokenIdentifier>
			<Abstract type="html">* description: Default styling for the checkbox next to a legend item when
showCheckbox is true.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemCheckboxStyle *itemCheckboxStyle</Declaration>
			
			
			<Anchor>//api/name/itemCheckboxStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemCheckboxStyle</TokenIdentifier>
			<Abstract type="html">* description: Default styling for the checkbox next to a legend item when
showCheckbox is true.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemCheckboxStyle *itemCheckboxStyle</Declaration>
			
			
			<Anchor>//api/name/itemCheckboxStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setBackgroundColor:</TokenIdentifier>
			<Abstract type="html">* description: The background color of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/backgroundColor</TokenIdentifier>
			<Abstract type="html">* description: The background color of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *backgroundColor</Declaration>
			
			
			<Anchor>//api/name/backgroundColor</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setKeyboardNavigation:</TokenIdentifier>
			<Abstract type="html">description: Keyboard navigation for the legend. Requires the Accessibility module.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIKeyboardNavigation *keyboardNavigation</Declaration>
			
			
			<Anchor>//api/name/keyboardNavigation</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/keyboardNavigation</TokenIdentifier>
			<Abstract type="html">description: Keyboard navigation for the legend. Requires the Accessibility module.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIKeyboardNavigation *keyboardNavigation</Declaration>
			
			
			<Anchor>//api/name/keyboardNavigation</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/keyboardNavigation</TokenIdentifier>
			<Abstract type="html">description: Keyboard navigation for the legend. Requires the Accessibility module.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIKeyboardNavigation *keyboardNavigation</Declaration>
			
			
			<Anchor>//api/name/keyboardNavigation</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemDistance:</TokenIdentifier>
			<Abstract type="html">* description: In a legend with horizontal layout, the itemDistance defines the
pixel distance between each item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemDistance</Declaration>
			
			
			<Anchor>//api/name/itemDistance</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemDistance</TokenIdentifier>
			<Abstract type="html">* description: In a legend with horizontal layout, the itemDistance defines the
pixel distance between each item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemDistance</Declaration>
			
			
			<Anchor>//api/name/itemDistance</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemDistance</TokenIdentifier>
			<Abstract type="html">* description: In a legend with horizontal layout, the itemDistance defines the
pixel distance between each item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemDistance</Declaration>
			
			
			<Anchor>//api/name/itemDistance</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemWidth:</TokenIdentifier>
			<Abstract type="html">* description: The width for each legend item. This is useful in a horizontal layout
with many items when you want the items to align vertically. .</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemWidth</Declaration>
			
			
			<Anchor>//api/name/itemWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemWidth</TokenIdentifier>
			<Abstract type="html">* description: The width for each legend item. This is useful in a horizontal layout
with many items when you want the items to align vertically. .</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemWidth</Declaration>
			
			
			<Anchor>//api/name/itemWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemWidth</TokenIdentifier>
			<Abstract type="html">* description: The width for each legend item. This is useful in a horizontal layout
with many items when you want the items to align vertically. .</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemWidth</Declaration>
			
			
			<Anchor>//api/name/itemWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setLabelFormat:</TokenIdentifier>
			<Abstract type="html">* description: A http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string for each legend label. Available variables
relates to properties on the series, or the point in case of pies.
* default: {name}</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *labelFormat</Declaration>
			
			
			<Anchor>//api/name/labelFormat</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/labelFormat</TokenIdentifier>
			<Abstract type="html">* description: A http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string for each legend label. Available variables
relates to properties on the series, or the point in case of pies.
* default: {name}</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *labelFormat</Declaration>
			
			
			<Anchor>//api/name/labelFormat</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/labelFormat</TokenIdentifier>
			<Abstract type="html">* description: A http://www.highcharts.com/docs/chart-concepts/labels-
and-string-formatting : format string for each legend label. Available variables
relates to properties on the series, or the point in case of pies.
* default: {name}</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *labelFormat</Declaration>
			
			
			<Anchor>//api/name/labelFormat</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setTitle:</TokenIdentifier>
			<Abstract type="html">* description: A title to be added on top of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITitle *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/title</TokenIdentifier>
			<Abstract type="html">* description: A title to be added on top of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITitle *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/title</TokenIdentifier>
			<Abstract type="html">* description: A title to be added on top of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HITitle *title</Declaration>
			
			
			<Anchor>//api/name/title</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemStyle:</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item. Only a subset of CSS is supported,
notably those options related to text. The default textOverflow
property makes long texts truncate. Set it to null to wrap text
instead. A width property can be added to control the text width.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemStyle *itemStyle</Declaration>
			
			
			<Anchor>//api/name/itemStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemStyle</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item. Only a subset of CSS is supported,
notably those options related to text. The default textOverflow
property makes long texts truncate. Set it to null to wrap text
instead. A width property can be added to control the text width.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemStyle *itemStyle</Declaration>
			
			
			<Anchor>//api/name/itemStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemStyle</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item. Only a subset of CSS is supported,
notably those options related to text. The default textOverflow
property makes long texts truncate. Set it to null to wrap text
instead. A width property can be added to control the text width.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemStyle *itemStyle</Declaration>
			
			
			<Anchor>//api/name/itemStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setLayout:</TokenIdentifier>
			<Abstract type="html">* description: The layout of the legend items. Can be one of &quot;horizontal&quot; or &quot;vertical&quot;.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *layout</Declaration>
			
			
			<Anchor>//api/name/layout</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/layout</TokenIdentifier>
			<Abstract type="html">* description: The layout of the legend items. Can be one of &quot;horizontal&quot; or &quot;vertical&quot;.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *layout</Declaration>
			
			
			<Anchor>//api/name/layout</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/layout</TokenIdentifier>
			<Abstract type="html">* description: The layout of the legend items. Can be one of &quot;horizontal&quot; or &quot;vertical&quot;.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *layout</Declaration>
			
			
			<Anchor>//api/name/layout</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setSymbolPadding:</TokenIdentifier>
			<Abstract type="html">* description: The pixel padding between the legend item symbol and the legend
item text.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolPadding</Declaration>
			
			
			<Anchor>//api/name/symbolPadding</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/symbolPadding</TokenIdentifier>
			<Abstract type="html">* description: The pixel padding between the legend item symbol and the legend
item text.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolPadding</Declaration>
			
			
			<Anchor>//api/name/symbolPadding</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/symbolPadding</TokenIdentifier>
			<Abstract type="html">* description: The pixel padding between the legend item symbol and the legend
item text.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolPadding</Declaration>
			
			
			<Anchor>//api/name/symbolPadding</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemHoverStyle:</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item in hover mode. Only a subset of
CSS is supported, notably those options related to text. Properties
are inherited from style unless overridden here.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemHoverStyle *itemHoverStyle</Declaration>
			
			
			<Anchor>//api/name/itemHoverStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemHoverStyle</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item in hover mode. Only a subset of
CSS is supported, notably those options related to text. Properties
are inherited from style unless overridden here.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemHoverStyle *itemHoverStyle</Declaration>
			
			
			<Anchor>//api/name/itemHoverStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemHoverStyle</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item in hover mode. Only a subset of
CSS is supported, notably those options related to text. Properties
are inherited from style unless overridden here.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemHoverStyle *itemHoverStyle</Declaration>
			
			
			<Anchor>//api/name/itemHoverStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setBorderWidth:</TokenIdentifier>
			<Abstract type="html">* description: The width of the drawn border around the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The width of the drawn border around the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/borderWidth</TokenIdentifier>
			<Abstract type="html">* description: The width of the drawn border around the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderWidth</Declaration>
			
			
			<Anchor>//api/name/borderWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setLabelFormatter:</TokenIdentifier>
			<Abstract type="html">* description: Callback function to format each of the series&apos; labels. The this
keyword refers to the series object, or the point object in case
of pie charts. By default the series or point name is printed.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *labelFormatter</Declaration>
			
			
			<Anchor>//api/name/labelFormatter</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/labelFormatter</TokenIdentifier>
			<Abstract type="html">* description: Callback function to format each of the series&apos; labels. The this
keyword refers to the series object, or the point object in case
of pie charts. By default the series or point name is printed.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *labelFormatter</Declaration>
			
			
			<Anchor>//api/name/labelFormatter</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/labelFormatter</TokenIdentifier>
			<Abstract type="html">* description: Callback function to format each of the series&apos; labels. The this
keyword refers to the series object, or the point object in case
of pie charts. By default the series or point name is printed.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *labelFormatter</Declaration>
			
			
			<Anchor>//api/name/labelFormatter</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setShadow:</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the legend. A backgroundColor
also needs to be applied for this to take effect. The shadow can be
an object configuration containing color, offsetX, offsetY,
opacity and width.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/shadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the legend. A backgroundColor
also needs to be applied for this to take effect. The shadow can be
an object configuration containing color, offsetX, offsetY,
opacity and width.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/shadow</TokenIdentifier>
			<Abstract type="html">* description: Whether to apply a drop shadow to the legend. A backgroundColor
also needs to be applied for this to take effect. The shadow can be
an object configuration containing color, offsetX, offsetY,
opacity and width.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) id shadow</Declaration>
			
			
			<Anchor>//api/name/shadow</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setFloating:</TokenIdentifier>
			<Abstract type="html">* description: When the legend is floating, the plot area ignores it and is allowed
to be placed below it.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *floating</Declaration>
			
			
			<Anchor>//api/name/floating</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/floating</TokenIdentifier>
			<Abstract type="html">* description: When the legend is floating, the plot area ignores it and is allowed
to be placed below it.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *floating</Declaration>
			
			
			<Anchor>//api/name/floating</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/floating</TokenIdentifier>
			<Abstract type="html">* description: When the legend is floating, the plot area ignores it and is allowed
to be placed below it.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *floating</Declaration>
			
			
			<Anchor>//api/name/floating</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setSquareSymbol:</TokenIdentifier>
			<Abstract type="html">* description: When this is true, the legend symbol width will be the same as
the symbol height, which in turn defaults to the font size of the
legend items.
* default: true</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *squareSymbol</Declaration>
			
			
			<Anchor>//api/name/squareSymbol</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/squareSymbol</TokenIdentifier>
			<Abstract type="html">* description: When this is true, the legend symbol width will be the same as
the symbol height, which in turn defaults to the font size of the
legend items.
* default: true</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *squareSymbol</Declaration>
			
			
			<Anchor>//api/name/squareSymbol</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/squareSymbol</TokenIdentifier>
			<Abstract type="html">* description: When this is true, the legend symbol width will be the same as
the symbol height, which in turn defaults to the font size of the
legend items.
* default: true</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *squareSymbol</Declaration>
			
			
			<Anchor>//api/name/squareSymbol</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemHiddenStyle:</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item when the corresponding series or
point is hidden. Only a subset of CSS is supported, notably those
options related to text. Properties are inherited from style
unless overridden here.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemHiddenStyle *itemHiddenStyle</Declaration>
			
			
			<Anchor>//api/name/itemHiddenStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemHiddenStyle</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item when the corresponding series or
point is hidden. Only a subset of CSS is supported, notably those
options related to text. Properties are inherited from style
unless overridden here.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemHiddenStyle *itemHiddenStyle</Declaration>
			
			
			<Anchor>//api/name/itemHiddenStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemHiddenStyle</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for each legend item when the corresponding series or
point is hidden. Only a subset of CSS is supported, notably those
options related to text. Properties are inherited from style
unless overridden here.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIItemHiddenStyle *itemHiddenStyle</Declaration>
			
			
			<Anchor>//api/name/itemHiddenStyle</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setItemMarginTop:</TokenIdentifier>
			<Abstract type="html">* description: The pixel top margin for each legend item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemMarginTop</Declaration>
			
			
			<Anchor>//api/name/itemMarginTop</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/itemMarginTop</TokenIdentifier>
			<Abstract type="html">* description: The pixel top margin for each legend item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemMarginTop</Declaration>
			
			
			<Anchor>//api/name/itemMarginTop</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/itemMarginTop</TokenIdentifier>
			<Abstract type="html">* description: The pixel top margin for each legend item.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *itemMarginTop</Declaration>
			
			
			<Anchor>//api/name/itemMarginTop</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setBorderColor:</TokenIdentifier>
			<Abstract type="html">* description: The color of the drawn border around the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the drawn border around the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/borderColor</TokenIdentifier>
			<Abstract type="html">* description: The color of the drawn border around the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIColor *borderColor</Declaration>
			
			
			<Anchor>//api/name/borderColor</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setVerticalAlign:</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the legend box. Can be one of top,
middle or bottom. Vertical position can be further determined
by the y option.
In the case that the legend is aligned in a corner position, the
layout option will determine whether to place it above/below
or on the side of the plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the legend box. Can be one of top,
middle or bottom. Vertical position can be further determined
by the y option.
In the case that the legend is aligned in a corner position, the
layout option will determine whether to place it above/below
or on the side of the plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/verticalAlign</TokenIdentifier>
			<Abstract type="html">* description: The vertical alignment of the legend box. Can be one of top,
middle or bottom. Vertical position can be further determined
by the y option.
In the case that the legend is aligned in a corner position, the
layout option will determine whether to place it above/below
or on the side of the plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *verticalAlign</Declaration>
			
			
			<Anchor>//api/name/verticalAlign</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setRtl:</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the symbol on the right side of the text rather than
the left side. This is common in Arabic and Hebraic.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rtl</Declaration>
			
			
			<Anchor>//api/name/rtl</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/rtl</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the symbol on the right side of the text rather than
the left side. This is common in Arabic and Hebraic.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rtl</Declaration>
			
			
			<Anchor>//api/name/rtl</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/rtl</TokenIdentifier>
			<Abstract type="html">* description: Whether to show the symbol on the right side of the text rather than
the left side. This is common in Arabic and Hebraic.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *rtl</Declaration>
			
			
			<Anchor>//api/name/rtl</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setSymbolRadius:</TokenIdentifier>
			<Abstract type="html">* description: The border radius of the symbol for series types that use a rectangle
in the legend. Defaults to half the symbolHeight.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolRadius</Declaration>
			
			
			<Anchor>//api/name/symbolRadius</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/symbolRadius</TokenIdentifier>
			<Abstract type="html">* description: The border radius of the symbol for series types that use a rectangle
in the legend. Defaults to half the symbolHeight.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolRadius</Declaration>
			
			
			<Anchor>//api/name/symbolRadius</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/symbolRadius</TokenIdentifier>
			<Abstract type="html">* description: The border radius of the symbol for series types that use a rectangle
in the legend. Defaults to half the symbolHeight.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolRadius</Declaration>
			
			
			<Anchor>//api/name/symbolRadius</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setBorderRadius:</TokenIdentifier>
			<Abstract type="html">* description: The border corner radius of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The border corner radius of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/borderRadius</TokenIdentifier>
			<Abstract type="html">* description: The border corner radius of the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *borderRadius</Declaration>
			
			
			<Anchor>//api/name/borderRadius</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setAlign:</TokenIdentifier>
			<Abstract type="html">* description: The horizontal alignment of the legend box within the chart area.
Valid values are left, center and right.
In the case that the legend is aligned in a corner position, the
layout option will determine whether to place it above/below
or on the side of the plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/align</TokenIdentifier>
			<Abstract type="html">* description: The horizontal alignment of the legend box within the chart area.
Valid values are left, center and right.
In the case that the legend is aligned in a corner position, the
layout option will determine whether to place it above/below
or on the side of the plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/align</TokenIdentifier>
			<Abstract type="html">* description: The horizontal alignment of the legend box within the chart area.
Valid values are left, center and right.
In the case that the legend is aligned in a corner position, the
layout option will determine whether to place it above/below
or on the side of the plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *align</Declaration>
			
			
			<Anchor>//api/name/align</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setMargin:</TokenIdentifier>
			<Abstract type="html">* description: If the plot area sized is calculated automatically and the legend
is not floating, the legend margin is the space between the legend
and the axis labels or plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/margin</TokenIdentifier>
			<Abstract type="html">* description: If the plot area sized is calculated automatically and the legend
is not floating, the legend margin is the space between the legend
and the axis labels or plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/margin</TokenIdentifier>
			<Abstract type="html">* description: If the plot area sized is calculated automatically and the legend
is not floating, the legend margin is the space between the legend
and the axis labels or plot area.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *margin</Declaration>
			
			
			<Anchor>//api/name/margin</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setLineHeight:</TokenIdentifier>
			<Abstract type="html">* description: Line height for the legend items. Deprecated as of 2.1. Instead,
the line height for each item can be set using itemStyle.lineHeight,
and the padding between items using itemMarginTop and itemMarginBottom.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *lineHeight</Declaration>
			
			
			<Anchor>//api/name/lineHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/lineHeight</TokenIdentifier>
			<Abstract type="html">* description: Line height for the legend items. Deprecated as of 2.1. Instead,
the line height for each item can be set using itemStyle.lineHeight,
and the padding between items using itemMarginTop and itemMarginBottom.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *lineHeight</Declaration>
			
			
			<Anchor>//api/name/lineHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/lineHeight</TokenIdentifier>
			<Abstract type="html">* description: Line height for the legend items. Deprecated as of 2.1. Instead,
the line height for each item can be set using itemStyle.lineHeight,
and the padding between items using itemMarginTop and itemMarginBottom.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *lineHeight</Declaration>
			
			
			<Anchor>//api/name/lineHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setEnabled:</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/enabled</TokenIdentifier>
			<Abstract type="html">* description: Enable or disable the legend.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *enabled</Declaration>
			
			
			<Anchor>//api/name/enabled</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setPadding:</TokenIdentifier>
			<Abstract type="html">* description: The inner padding of the legend box.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/padding</TokenIdentifier>
			<Abstract type="html">* description: The inner padding of the legend box.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/padding</TokenIdentifier>
			<Abstract type="html">* description: The inner padding of the legend box.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *padding</Declaration>
			
			
			<Anchor>//api/name/padding</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setSymbolHeight:</TokenIdentifier>
			<Abstract type="html">* description: The pixel height of the symbol for series types that use a rectangle
in the legend. Defaults to the font size of legend items.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolHeight</Declaration>
			
			
			<Anchor>//api/name/symbolHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/symbolHeight</TokenIdentifier>
			<Abstract type="html">* description: The pixel height of the symbol for series types that use a rectangle
in the legend. Defaults to the font size of legend items.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolHeight</Declaration>
			
			
			<Anchor>//api/name/symbolHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/symbolHeight</TokenIdentifier>
			<Abstract type="html">* description: The pixel height of the symbol for series types that use a rectangle
in the legend. Defaults to the font size of legend items.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolHeight</Declaration>
			
			
			<Anchor>//api/name/symbolHeight</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setStyle:</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the legend area. In the 1.x versions the position
of the legend area was determined by CSS. In 2.x, the position is
determined by properties like align, verticalAlign, x and y,
but the styles are still parsed for backwards compatibility.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSDictionary *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/style</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the legend area. In the 1.x versions the position
of the legend area was determined by CSS. In 2.x, the position is
determined by properties like align, verticalAlign, x and y,
but the styles are still parsed for backwards compatibility.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSDictionary *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/style</TokenIdentifier>
			<Abstract type="html">* description: CSS styles for the legend area. In the 1.x versions the position
of the legend area was determined by CSS. In 2.x, the position is
determined by properties like align, verticalAlign, x and y,
but the styles are still parsed for backwards compatibility.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSDictionary *style</Declaration>
			
			
			<Anchor>//api/name/style</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setWidth:</TokenIdentifier>
			<Abstract type="html">* description: The width of the legend box.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/width</TokenIdentifier>
			<Abstract type="html">* description: The width of the legend box.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/width</TokenIdentifier>
			<Abstract type="html">* description: The width of the legend box.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *width</Declaration>
			
			
			<Anchor>//api/name/width</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/setSymbolWidth:</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the legend item symbol. When the squareSymbol
option is set, this defaults to the symbolHeight, otherwise 16.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolWidth</Declaration>
			
			
			<Anchor>//api/name/symbolWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HILegend/symbolWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the legend item symbol. When the squareSymbol
option is set, this defaults to the symbolHeight, otherwise 16.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolWidth</Declaration>
			
			
			<Anchor>//api/name/symbolWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HILegend/symbolWidth</TokenIdentifier>
			<Abstract type="html">* description: The pixel width of the legend item symbol. When the squareSymbol
option is set, this defaults to the symbolHeight, otherwise 16.</Abstract>
			<DeclaredIn>HILegend.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSNumber *symbolWidth</Declaration>
			
			
			<Anchor>//api/name/symbolWidth</Anchor>
            <NodeRef refid="76"/>
		</Token>
		
        
        
	</File>
</Tokens>