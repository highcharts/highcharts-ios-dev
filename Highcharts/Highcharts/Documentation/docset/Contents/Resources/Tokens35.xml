<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/HICsv.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/HICsv</TokenIdentifier>
			<Abstract type="html">* description: Options for exporting data to CSV or ExCel, or displaying the data
in a HTML table or a JavaScript structure. Requires the
export-data.js module. This module adds data export options to the
export menu and provides functions like Chart.getCSV,
Chart.getTable, Chart.getDataRows and Chart.viewData.</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
            
			
			<NodeRef refid="35"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/setLineDelimiter:</TokenIdentifier>
			<Abstract type="html">* description: The line delimiter in the exported data, defaults to a newline.
* default:</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *lineDelimiter</Declaration>
			
			
			<Anchor>//api/name/lineDelimiter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/lineDelimiter</TokenIdentifier>
			<Abstract type="html">* description: The line delimiter in the exported data, defaults to a newline.
* default:</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *lineDelimiter</Declaration>
			
			
			<Anchor>//api/name/lineDelimiter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HICsv/lineDelimiter</TokenIdentifier>
			<Abstract type="html">* description: The line delimiter in the exported data, defaults to a newline.
* default:</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *lineDelimiter</Declaration>
			
			
			<Anchor>//api/name/lineDelimiter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/setColumnHeaderFormatter:</TokenIdentifier>
			<Abstract type="html">* description: Formatter callback for the column headers. Parameters are:</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *columnHeaderFormatter</Declaration>
			
			
			<Anchor>//api/name/columnHeaderFormatter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/columnHeaderFormatter</TokenIdentifier>
			<Abstract type="html">* description: Formatter callback for the column headers. Parameters are:</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *columnHeaderFormatter</Declaration>
			
			
			<Anchor>//api/name/columnHeaderFormatter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HICsv/columnHeaderFormatter</TokenIdentifier>
			<Abstract type="html">* description: Formatter callback for the column headers. Parameters are:</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) HIFunction *columnHeaderFormatter</Declaration>
			
			
			<Anchor>//api/name/columnHeaderFormatter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/setDateFormat:</TokenIdentifier>
			<Abstract type="html">* description: Which date format to use for exported dates on a datetime X axis.
See Highcharts.dateFormat.
* default: %Y-%m-%d %H:%M:%S</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *dateFormat</Declaration>
			
			
			<Anchor>//api/name/dateFormat</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/dateFormat</TokenIdentifier>
			<Abstract type="html">* description: Which date format to use for exported dates on a datetime X axis.
See Highcharts.dateFormat.
* default: %Y-%m-%d %H:%M:%S</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *dateFormat</Declaration>
			
			
			<Anchor>//api/name/dateFormat</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HICsv/dateFormat</TokenIdentifier>
			<Abstract type="html">* description: Which date format to use for exported dates on a datetime X axis.
See Highcharts.dateFormat.
* default: %Y-%m-%d %H:%M:%S</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *dateFormat</Declaration>
			
			
			<Anchor>//api/name/dateFormat</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/setItemDelimiter:</TokenIdentifier>
			<Abstract type="html">* description: The item delimiter in the exported data. Use ; for direct
exporting to Excel.
* default: ,</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *itemDelimiter</Declaration>
			
			
			<Anchor>//api/name/itemDelimiter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/HICsv/itemDelimiter</TokenIdentifier>
			<Abstract type="html">* description: The item delimiter in the exported data. Use ; for direct
exporting to Excel.
* default: ,</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *itemDelimiter</Declaration>
			
			
			<Anchor>//api/name/itemDelimiter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/HICsv/itemDelimiter</TokenIdentifier>
			<Abstract type="html">* description: The item delimiter in the exported data. Use ; for direct
exporting to Excel.
* default: ,</Abstract>
			<DeclaredIn>HICsv.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSString *itemDelimiter</Declaration>
			
			
			<Anchor>//api/name/itemDelimiter</Anchor>
            <NodeRef refid="35"/>
		</Token>
		
        
        
	</File>
</Tokens>